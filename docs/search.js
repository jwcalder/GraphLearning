window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"graphlearning": {"fullname": "graphlearning", "modulename": "graphlearning", "kind": "module", "doc": "<p></p>\n"}, "graphlearning.active_learning": {"fullname": "graphlearning.active_learning", "modulename": "graphlearning.active_learning", "kind": "module", "doc": "<h1 id=\"active-learning\">Active Learning</h1>\n\n<p>This module implements many active learning algorithms in an objected-oriented\nfashion, similar to <a href=\"https://scikit-learn.org/stable/\">sklearn</a> and <a href=\"https://modal-python.readthedocs.io/en/latest/index.html\">modAL</a>. The usage is similar for all algorithms, and we give some high-level examples of how to use this module with each of the provided acquisition functions.</p>\n\n<p>The common workflow, however, is as follows:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n\n<span class=\"c1\"># define ssl model and acquisition function</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">laplace</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">)</span>                   <span class=\"c1\"># graph-based ssl classifier with a given graph</span>\n<span class=\"n\">acq_func</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">active_learning</span><span class=\"o\">.</span><span class=\"n\">unc_sampling</span>  <span class=\"c1\"># acquisition function for prioritizing which points to query</span>\n\n\n<span class=\"c1\"># instantiate active learner object</span>\n<span class=\"n\">AL</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">active_learner</span><span class=\"p\">(</span>\n     <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span>                                    \n     <span class=\"n\">acq_function</span><span class=\"o\">=</span><span class=\"n\">acq_func</span><span class=\"p\">,</span>   \n     <span class=\"n\">labeled_ind</span><span class=\"o\">=..</span><span class=\"p\">,</span>                        <span class=\"c1\"># indices of initially labeled nodes </span>\n     <span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"p\">,</span>                               <span class=\"c1\"># (integer) labels for initially labeled nodes</span>\n     <span class=\"n\">policy</span><span class=\"o\">=</span><span class=\"s1\">&#39;max&#39;</span><span class=\"p\">,</span>                         <span class=\"c1\"># active learning policy (i.e., &#39;max&#39;, or &#39;prop&#39;)</span>\n     <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"o\">=...</span>                           <span class=\"c1\"># other keyword arguments for the specified acq_function</span>\n    <span class=\"p\">)</span>\n\n<span class=\"c1\"># select next query points</span>\n<span class=\"n\">query_point</span> <span class=\"o\">=</span> <span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">select_queries</span><span class=\"p\">(</span>\n                <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">1</span>               <span class=\"c1\"># number of query points to select at this iteration</span>\n               <span class=\"p\">)</span> \n\n<span class=\"c1\"># acquire label for query points</span>\n<span class=\"n\">query_labels</span> <span class=\"o\">=</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">query_point</span><span class=\"p\">]</span> \n\n\n<span class=\"c1\"># update the labeled data of active_learner object (including the graph-based ssl ``model`` outputs)</span>\n<span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">query_points</span><span class=\"p\">,</span> <span class=\"n\">query_labels</span><span class=\"p\">)</span> \n</code></pre>\n</div>\n\n<p>Some clarification of terms:</p>\n\n<ul>\n<li><code>acquisition function</code>: a function that quantifies \"how useful\" it would be to label a currently unlabeled node. Oftentimes, this is reflected in the \"uncertainty\" of the current classifier's output for each node. \n<ul>\n<li>__NOTE:__ users can provide their own acquisition functions that inherit from the <code>acquisition_function</code> class, being sure to implement it so that __larger values__ of the acquisition function correspond to __more desirable__ nodes to be labeled.</li>\n</ul></li>\n<li><code>policy</code>: the active learning policy determines which node(s) will be selected as query points, given the set of acquisition function values evaluated on the unlabeled nodes. \n<ul>\n<li>The default value <code>max</code> indicates that query points will be the maximizers of the acquisition function on the unlabeled nodes. The policy <code>prop</code> selects the query points proportional to the ''softmax'' of the acquisition function values; namely, \n[\\mathbb{P}(X = x) \\propto e^{\\gamma \\mathcal{A}(x)}]</li>\n</ul></li>\n</ul>\n"}, "graphlearning.active_learning.active_learner": {"fullname": "graphlearning.active_learning.active_learner", "modulename": "graphlearning.active_learning", "qualname": "active_learner", "kind": "class", "doc": "<p></p>\n"}, "graphlearning.active_learning.active_learner.__init__": {"fullname": "graphlearning.active_learning.active_learner.__init__", "modulename": "graphlearning.active_learning", "qualname": "active_learner.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">acq_function</span>, </span><span class=\"param\"><span class=\"n\">labeled_ind</span>, </span><span class=\"param\"><span class=\"n\">labels</span>, </span><span class=\"param\"><span class=\"n\">policy</span><span class=\"o\">=</span><span class=\"s1\">&#39;max&#39;</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "graphlearning.active_learning.active_learner.model": {"fullname": "graphlearning.active_learning.active_learner.model", "modulename": "graphlearning.active_learning", "qualname": "active_learner.model", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.active_learner.labeled_ind": {"fullname": "graphlearning.active_learning.active_learner.labeled_ind", "modulename": "graphlearning.active_learning", "qualname": "active_learner.labeled_ind", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.active_learner.labels": {"fullname": "graphlearning.active_learning.active_learner.labels", "modulename": "graphlearning.active_learning", "qualname": "active_learner.labels", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.active_learner.acq_function": {"fullname": "graphlearning.active_learning.active_learner.acq_function", "modulename": "graphlearning.active_learning", "qualname": "active_learner.acq_function", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.active_learner.policy": {"fullname": "graphlearning.active_learning.active_learner.policy", "modulename": "graphlearning.active_learning", "qualname": "active_learner.policy", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.active_learner.u": {"fullname": "graphlearning.active_learning.active_learner.u", "modulename": "graphlearning.active_learning", "qualname": "active_learner.u", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.active_learner.n": {"fullname": "graphlearning.active_learning.active_learner.n", "modulename": "graphlearning.active_learning", "qualname": "active_learner.n", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.active_learner.all_inds": {"fullname": "graphlearning.active_learning.active_learner.all_inds", "modulename": "graphlearning.active_learning", "qualname": "active_learner.all_inds", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.active_learner.unlabeled_ind": {"fullname": "graphlearning.active_learning.active_learner.unlabeled_ind", "modulename": "graphlearning.active_learning", "qualname": "active_learner.unlabeled_ind", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.active_learner.printed_warning": {"fullname": "graphlearning.active_learning.active_learner.printed_warning", "modulename": "graphlearning.active_learning", "qualname": "active_learner.printed_warning", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.active_learner.select_queries": {"fullname": "graphlearning.active_learning.active_learner.select_queries", "modulename": "graphlearning.active_learning", "qualname": "active_learner.select_queries", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">policy</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">candidate_ind</span><span class=\"o\">=</span><span class=\"s1\">&#39;full&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">rand_frac</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">return_acq_vals</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">prop_gamma</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">allow_repeat</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.active_learning.active_learner.update": {"fullname": "graphlearning.active_learning.active_learner.update", "modulename": "graphlearning.active_learning", "qualname": "active_learner.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query_ind</span>, </span><span class=\"param\"><span class=\"n\">query_labels</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.active_learning.acquisition_function": {"fullname": "graphlearning.active_learning.acquisition_function", "modulename": "graphlearning.active_learning", "qualname": "acquisition_function", "kind": "class", "doc": "<h1 id=\"acquisition-function\">Acquisition Function</h1>\n\n<p>Object that computes a measure of ''utility'' for labeling nodes that are currently unlabeled. Users can define their own acqusition functions to inherit from this class as follows:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">new_acq_func</span><span class=\"p\">(</span><span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">acquisition_function</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">arg1</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">arg1</span> <span class=\"o\">=</span> <span class=\"n\">arg1</span>           <span class=\"c1\"># any arguments that are passed into this acquisition function are given </span>\n                                   <span class=\"c1\"># as kwargs in active_learner instantiation</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">compute</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">candidate_ind</span><span class=\"p\">):</span>\n        <span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"o\">...</span>                 <span class=\"c1\"># compute the acquisition function so that larger values are more desired</span>\n        <span class=\"k\">return</span> <span class=\"n\">vals</span>  \n</code></pre>\n</div>\n"}, "graphlearning.active_learning.acquisition_function.compute": {"fullname": "graphlearning.active_learning.acquisition_function.compute", "modulename": "graphlearning.active_learning", "qualname": "acquisition_function.compute", "kind": "function", "doc": "<h1 id=\"internal-compute-acquisition-function-values-function\">Internal Compute Acquisition Function Values Function</h1>\n\n<p>Internal function that any acquisition function object must override. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>u : numpy array\n    score matrix from GSSL classifier. \ncandidate_ind : numpy array (or list)\n    (sub)set of indices on which to compute the acquisition function</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>acquisition_values : numpy array, float\n    acquisition function values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">u</span>, </span><span class=\"param\"><span class=\"n\">candidate_ind</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.active_learning.acquisition_function.update": {"fullname": "graphlearning.active_learning.acquisition_function.update", "modulename": "graphlearning.active_learning", "qualname": "acquisition_function.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query_ind</span>, </span><span class=\"param\"><span class=\"n\">query_labels</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.active_learning.unc_sampling": {"fullname": "graphlearning.active_learning.unc_sampling", "modulename": "graphlearning.active_learning", "qualname": "unc_sampling", "kind": "class", "doc": "<h1 id=\"uncertainty-sampling\">Uncertainty Sampling</h1>\n\n<p>Active learning algorithm that selects points that the classifier is most uncertain of.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning.active_learning</span> <span class=\"k\">as</span> <span class=\"nn\">al</span>\n<span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">datasets</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">make_moons</span><span class=\"p\">(</span><span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span><span class=\"n\">noise</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">train_ind</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">trainsets</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">laplace</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">)</span>\n<span class=\"n\">AL</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">active_learning</span><span class=\"o\">.</span><span class=\"n\">active_learner</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">active_learning</span><span class=\"o\">.</span><span class=\"n\">unc_sampling</span><span class=\"p\">,</span> <span class=\"n\">train_ind</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">])</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">query_points</span> <span class=\"o\">=</span> <span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">select_queries</span><span class=\"p\">()</span> <span class=\"c1\"># return this iteration&#39;s newly chosen points</span>\n    <span class=\"n\">query_labels</span> <span class=\"o\">=</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">]</span> <span class=\"c1\"># simulate the human in the loop process</span>\n    <span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">query_points</span><span class=\"p\">,</span> <span class=\"n\">query_labels</span><span class=\"p\">)</span> <span class=\"c1\"># update the active_learning object&#39;s labeled set</span>\n\n    <span class=\"c1\"># plot</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">,</span> <span class=\"n\">marker</span><span class=\"o\">=</span><span class=\"s1\">&#39;*&#39;</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">edgecolors</span><span class=\"o\">=</span><span class=\"s1\">&#39;k&#39;</span><span class=\"p\">,</span> <span class=\"n\">linewidths</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"reference\">Reference</h2>\n\n<p>[1] Settles, B., [Active Learning], vol. 6, Morgan &amp; Claypool Publishers LLC (June 2012).</p>\n", "bases": "acquisition_function"}, "graphlearning.active_learning.unc_sampling.__init__": {"fullname": "graphlearning.active_learning.unc_sampling.__init__", "modulename": "graphlearning.active_learning", "qualname": "unc_sampling.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unc_method</span><span class=\"o\">=</span><span class=\"s1\">&#39;smallest_margin&#39;</span></span>)</span>"}, "graphlearning.active_learning.unc_sampling.unc_method": {"fullname": "graphlearning.active_learning.unc_sampling.unc_method", "modulename": "graphlearning.active_learning", "qualname": "unc_sampling.unc_method", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.unc_sampling.compute": {"fullname": "graphlearning.active_learning.unc_sampling.compute", "modulename": "graphlearning.active_learning", "qualname": "unc_sampling.compute", "kind": "function", "doc": "<h1 id=\"internal-compute-acquisition-function-values-function\">Internal Compute Acquisition Function Values Function</h1>\n\n<p>Internal function that any acquisition function object must override. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>u : numpy array\n    score matrix from GSSL classifier. \ncandidate_ind : numpy array (or list)\n    (sub)set of indices on which to compute the acquisition function</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>acquisition_values : numpy array, float\n    acquisition function values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">u</span>, </span><span class=\"param\"><span class=\"n\">candidate_ind</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.active_learning.v_opt": {"fullname": "graphlearning.active_learning.v_opt", "modulename": "graphlearning.active_learning", "qualname": "v_opt", "kind": "class", "doc": "<h1 id=\"variance-optimization\">Variance Optimization</h1>\n\n<p>Active learning algorithm that selects points that minimizes the variance of the distribution of unlabeled nodes.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning.active_learning</span> <span class=\"k\">as</span> <span class=\"nn\">al</span>\n<span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">datasets</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">make_moons</span><span class=\"p\">(</span><span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span><span class=\"n\">noise</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">train_ind</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">trainsets</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># compute initial, low-rank (spectral truncation) covariance matrix </span>\n<span class=\"n\">evals</span><span class=\"p\">,</span> <span class=\"n\">evecs</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">graph</span><span class=\"o\">.</span><span class=\"n\">eigen_decomp</span><span class=\"p\">(</span><span class=\"n\">normalization</span><span class=\"o\">=</span><span class=\"s1\">&#39;normalized&#39;</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"mf\">1.</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">evals</span> <span class=\"o\">+</span> <span class=\"mf\">1e-11</span><span class=\"p\">))</span>\n<span class=\"n\">AL</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">active_learning</span><span class=\"o\">.</span><span class=\"n\">active_learner</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">active_learning</span><span class=\"o\">.</span><span class=\"n\">v_opt</span><span class=\"p\">,</span> <span class=\"n\">train_ind</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">],</span> <span class=\"n\">C</span><span class=\"o\">=</span><span class=\"n\">C</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(),</span> <span class=\"n\">V</span><span class=\"o\">=</span><span class=\"n\">evecs</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">())</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">query_points</span> <span class=\"o\">=</span> <span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">select_queries</span><span class=\"p\">()</span> <span class=\"c1\"># return this iteration&#39;s newly chosen points</span>\n    <span class=\"n\">query_labels</span> <span class=\"o\">=</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">]</span> <span class=\"c1\"># simulate the human in the loop process</span>\n    <span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">query_points</span><span class=\"p\">,</span> <span class=\"n\">query_labels</span><span class=\"p\">)</span> <span class=\"c1\"># update the active_learning object&#39;s labeled set</span>\n\n    <span class=\"c1\"># plot</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">,</span> <span class=\"n\">marker</span><span class=\"o\">=</span><span class=\"s1\">&#39;*&#39;</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">edgecolors</span><span class=\"o\">=</span><span class=\"s1\">&#39;k&#39;</span><span class=\"p\">,</span> <span class=\"n\">linewidths</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"reference\">Reference</h2>\n\n<p>[1] Ji, M. and Han, J., \u201cA variance minimization criterion to active learning on graphs,\u201d in [Artificial Intelligence\nand Statistics ], 556\u2013564 (Mar. 2012).</p>\n", "bases": "acquisition_function"}, "graphlearning.active_learning.v_opt.__init__": {"fullname": "graphlearning.active_learning.v_opt.__init__", "modulename": "graphlearning.active_learning", "qualname": "v_opt.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">C</span>, </span><span class=\"param\"><span class=\"n\">V</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">gamma2</span><span class=\"o\">=</span><span class=\"mf\">0.010000000000000002</span></span>)</span>"}, "graphlearning.active_learning.v_opt.C": {"fullname": "graphlearning.active_learning.v_opt.C", "modulename": "graphlearning.active_learning", "qualname": "v_opt.C", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.v_opt.V": {"fullname": "graphlearning.active_learning.v_opt.V", "modulename": "graphlearning.active_learning", "qualname": "v_opt.V", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.v_opt.gamma2": {"fullname": "graphlearning.active_learning.v_opt.gamma2", "modulename": "graphlearning.active_learning", "qualname": "v_opt.gamma2", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.v_opt.compute": {"fullname": "graphlearning.active_learning.v_opt.compute", "modulename": "graphlearning.active_learning", "qualname": "v_opt.compute", "kind": "function", "doc": "<h1 id=\"internal-compute-acquisition-function-values-function\">Internal Compute Acquisition Function Values Function</h1>\n\n<p>Internal function that any acquisition function object must override. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>u : numpy array\n    score matrix from GSSL classifier. \ncandidate_ind : numpy array (or list)\n    (sub)set of indices on which to compute the acquisition function</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>acquisition_values : numpy array, float\n    acquisition function values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">u</span>, </span><span class=\"param\"><span class=\"n\">candidate_ind</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.active_learning.v_opt.update": {"fullname": "graphlearning.active_learning.v_opt.update", "modulename": "graphlearning.active_learning", "qualname": "v_opt.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query_ind</span>, </span><span class=\"param\"><span class=\"n\">query_labels</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.active_learning.sigma_opt": {"fullname": "graphlearning.active_learning.sigma_opt", "modulename": "graphlearning.active_learning", "qualname": "sigma_opt", "kind": "class", "doc": "<h1 id=\"sigma-optimization\">Sigma Optimization</h1>\n\n<p>Active learning algorithm that selects points that minimizes the sum of the associated entries in the covariance matrix.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning.active_learning</span> <span class=\"k\">as</span> <span class=\"nn\">al</span>\n<span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">datasets</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">make_moons</span><span class=\"p\">(</span><span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span><span class=\"n\">noise</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">train_ind</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">trainsets</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># compute initial, low-rank (spectral truncation) covariance matrix </span>\n<span class=\"n\">evals</span><span class=\"p\">,</span> <span class=\"n\">evecs</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">graph</span><span class=\"o\">.</span><span class=\"n\">eigen_decomp</span><span class=\"p\">(</span><span class=\"n\">normalization</span><span class=\"o\">=</span><span class=\"s1\">&#39;normalized&#39;</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"mf\">1.</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">evals</span> <span class=\"o\">+</span> <span class=\"mf\">1e-11</span><span class=\"p\">))</span>\n<span class=\"n\">AL</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">active_learning</span><span class=\"o\">.</span><span class=\"n\">active_learner</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">active_learning</span><span class=\"o\">.</span><span class=\"n\">sigma_opt</span><span class=\"p\">,</span> <span class=\"n\">train_ind</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">],</span> <span class=\"n\">C</span><span class=\"o\">=</span><span class=\"n\">C</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(),</span> <span class=\"n\">V</span><span class=\"o\">=</span><span class=\"n\">evecs</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">())</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">query_points</span> <span class=\"o\">=</span> <span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">select_queries</span><span class=\"p\">()</span> <span class=\"c1\"># return this iteration&#39;s newly chosen points</span>\n    <span class=\"n\">query_labels</span> <span class=\"o\">=</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">]</span> <span class=\"c1\"># simulate the human in the loop process</span>\n    <span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">query_points</span><span class=\"p\">,</span> <span class=\"n\">query_labels</span><span class=\"p\">)</span> <span class=\"c1\"># update the active_learning object&#39;s labeled set</span>\n\n    <span class=\"c1\"># plot</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">,</span> <span class=\"n\">marker</span><span class=\"o\">=</span><span class=\"s1\">&#39;*&#39;</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">edgecolors</span><span class=\"o\">=</span><span class=\"s1\">&#39;k&#39;</span><span class=\"p\">,</span> <span class=\"n\">linewidths</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"reference\">Reference</h2>\n\n<p>[1] Ma, Y., Garnett, R., and Schneider, J., \u201c\u03a3-optimality for active learning on Gaussian random fields,\u201d\nin [Advances in Neural Information Processing Systems 26 ], Burges, C. J. C., Bottou, L., Welling, M.,\nGhahramani, Z., and Weinberger, K. Q., eds., 2751\u20132759, Curran Associates, Inc. (2013).</p>\n", "bases": "acquisition_function"}, "graphlearning.active_learning.sigma_opt.__init__": {"fullname": "graphlearning.active_learning.sigma_opt.__init__", "modulename": "graphlearning.active_learning", "qualname": "sigma_opt.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">C</span>, </span><span class=\"param\"><span class=\"n\">V</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">gamma2</span><span class=\"o\">=</span><span class=\"mf\">0.010000000000000002</span></span>)</span>"}, "graphlearning.active_learning.sigma_opt.C": {"fullname": "graphlearning.active_learning.sigma_opt.C", "modulename": "graphlearning.active_learning", "qualname": "sigma_opt.C", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.sigma_opt.V": {"fullname": "graphlearning.active_learning.sigma_opt.V", "modulename": "graphlearning.active_learning", "qualname": "sigma_opt.V", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.sigma_opt.gamma2": {"fullname": "graphlearning.active_learning.sigma_opt.gamma2", "modulename": "graphlearning.active_learning", "qualname": "sigma_opt.gamma2", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.sigma_opt.compute": {"fullname": "graphlearning.active_learning.sigma_opt.compute", "modulename": "graphlearning.active_learning", "qualname": "sigma_opt.compute", "kind": "function", "doc": "<h1 id=\"internal-compute-acquisition-function-values-function\">Internal Compute Acquisition Function Values Function</h1>\n\n<p>Internal function that any acquisition function object must override. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>u : numpy array\n    score matrix from GSSL classifier. \ncandidate_ind : numpy array (or list)\n    (sub)set of indices on which to compute the acquisition function</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>acquisition_values : numpy array, float\n    acquisition function values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">u</span>, </span><span class=\"param\"><span class=\"n\">candidate_ind</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.active_learning.sigma_opt.update": {"fullname": "graphlearning.active_learning.sigma_opt.update", "modulename": "graphlearning.active_learning", "qualname": "sigma_opt.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query_ind</span>, </span><span class=\"param\"><span class=\"n\">query_labels</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.active_learning.model_change": {"fullname": "graphlearning.active_learning.model_change", "modulename": "graphlearning.active_learning", "qualname": "model_change", "kind": "class", "doc": "<h1 id=\"model-change\">Model Change</h1>\n\n<p>Active learning algorithm that selects points that will produce the greatest change in the model.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning.active_learning</span> <span class=\"k\">as</span> <span class=\"nn\">al</span>\n<span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">datasets</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">make_moons</span><span class=\"p\">(</span><span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span><span class=\"n\">noise</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">train_ind</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">trainsets</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># compute initial, low-rank (spectral truncation) covariance matrix </span>\n<span class=\"n\">evals</span><span class=\"p\">,</span> <span class=\"n\">evecs</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">graph</span><span class=\"o\">.</span><span class=\"n\">eigen_decomp</span><span class=\"p\">(</span><span class=\"n\">normalization</span><span class=\"o\">=</span><span class=\"s1\">&#39;normalized&#39;</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"mf\">1.</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">evals</span> <span class=\"o\">+</span> <span class=\"mf\">1e-11</span><span class=\"p\">))</span>\n<span class=\"n\">AL</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">active_learning</span><span class=\"o\">.</span><span class=\"n\">active_learner</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">active_learning</span><span class=\"o\">.</span><span class=\"n\">model_change</span><span class=\"p\">,</span> <span class=\"n\">train_ind</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">],</span> <span class=\"n\">C</span><span class=\"o\">=</span><span class=\"n\">C</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(),</span> <span class=\"n\">V</span><span class=\"o\">=</span><span class=\"n\">evecs</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">())</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">query_points</span> <span class=\"o\">=</span> <span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">select_queries</span><span class=\"p\">()</span> <span class=\"c1\"># return this iteration&#39;s newly chosen points</span>\n    <span class=\"n\">query_labels</span> <span class=\"o\">=</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">]</span> <span class=\"c1\"># simulate the human in the loop process</span>\n    <span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">query_points</span><span class=\"p\">,</span> <span class=\"n\">query_labels</span><span class=\"p\">)</span> <span class=\"c1\"># update the active_learning object&#39;s labeled set</span>\n\n    <span class=\"c1\"># plot</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">,</span> <span class=\"n\">marker</span><span class=\"o\">=</span><span class=\"s1\">&#39;*&#39;</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">edgecolors</span><span class=\"o\">=</span><span class=\"s1\">&#39;k&#39;</span><span class=\"p\">,</span> <span class=\"n\">linewidths</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"reference\">Reference</h2>\n\n<p>[1] Miller, K. and Bertozzi, A. L., \u201cModel-change active learning in graph-based semi-supervised learning,\u201d\n(Oct. 2021). arXiv: 2110.07739.</p>\n\n<p>[2] Karzand, M. and Nowak, R. D., \u201cMaximin active learning in overparameterized model classes,\u201d IEEE\nJournal on Selected Areas in Information Theory 1, 167\u2013177 (May 2020).</p>\n", "bases": "acquisition_function"}, "graphlearning.active_learning.model_change.__init__": {"fullname": "graphlearning.active_learning.model_change.__init__", "modulename": "graphlearning.active_learning", "qualname": "model_change.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">C</span>, </span><span class=\"param\"><span class=\"n\">V</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">gamma2</span><span class=\"o\">=</span><span class=\"mf\">0.010000000000000002</span>, </span><span class=\"param\"><span class=\"n\">unc_method</span><span class=\"o\">=</span><span class=\"s1\">&#39;smallest_margin&#39;</span></span>)</span>"}, "graphlearning.active_learning.model_change.C": {"fullname": "graphlearning.active_learning.model_change.C", "modulename": "graphlearning.active_learning", "qualname": "model_change.C", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.model_change.V": {"fullname": "graphlearning.active_learning.model_change.V", "modulename": "graphlearning.active_learning", "qualname": "model_change.V", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.model_change.gamma2": {"fullname": "graphlearning.active_learning.model_change.gamma2", "modulename": "graphlearning.active_learning", "qualname": "model_change.gamma2", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.model_change.unc_sampling": {"fullname": "graphlearning.active_learning.model_change.unc_sampling", "modulename": "graphlearning.active_learning", "qualname": "model_change.unc_sampling", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.model_change.compute": {"fullname": "graphlearning.active_learning.model_change.compute", "modulename": "graphlearning.active_learning", "qualname": "model_change.compute", "kind": "function", "doc": "<h1 id=\"internal-compute-acquisition-function-values-function\">Internal Compute Acquisition Function Values Function</h1>\n\n<p>Internal function that any acquisition function object must override. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>u : numpy array\n    score matrix from GSSL classifier. \ncandidate_ind : numpy array (or list)\n    (sub)set of indices on which to compute the acquisition function</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>acquisition_values : numpy array, float\n    acquisition function values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">u</span>, </span><span class=\"param\"><span class=\"n\">candidate_ind</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.active_learning.model_change.update": {"fullname": "graphlearning.active_learning.model_change.update", "modulename": "graphlearning.active_learning", "qualname": "model_change.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query_ind</span>, </span><span class=\"param\"><span class=\"n\">query_labels</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.active_learning.model_change_vopt": {"fullname": "graphlearning.active_learning.model_change_vopt", "modulename": "graphlearning.active_learning", "qualname": "model_change_vopt", "kind": "class", "doc": "<h1 id=\"model-change-variance-optimization\">Model Change Variance Optimization</h1>\n\n<p>Active learning algorithm that is a combination of Model Change and Variance Optimization.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning.active_learning</span> <span class=\"k\">as</span> <span class=\"nn\">al</span>\n<span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">datasets</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">make_moons</span><span class=\"p\">(</span><span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span><span class=\"n\">noise</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">train_ind</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">trainsets</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># compute initial, low-rank (spectral truncation) covariance matrix </span>\n<span class=\"n\">evals</span><span class=\"p\">,</span> <span class=\"n\">evecs</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">graph</span><span class=\"o\">.</span><span class=\"n\">eigen_decomp</span><span class=\"p\">(</span><span class=\"n\">normalization</span><span class=\"o\">=</span><span class=\"s1\">&#39;normalized&#39;</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"mf\">1.</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">evals</span> <span class=\"o\">+</span> <span class=\"mf\">1e-11</span><span class=\"p\">))</span>\n<span class=\"n\">AL</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">active_learning</span><span class=\"o\">.</span><span class=\"n\">active_learner</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">active_learning</span><span class=\"o\">.</span><span class=\"n\">mc_vopt</span><span class=\"p\">,</span> <span class=\"n\">train_ind</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">],</span> <span class=\"n\">C</span><span class=\"o\">=</span><span class=\"n\">C</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(),</span> <span class=\"n\">V</span><span class=\"o\">=</span><span class=\"n\">evecs</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">())</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">query_points</span> <span class=\"o\">=</span> <span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">select_queries</span><span class=\"p\">()</span> <span class=\"c1\"># return this iteration&#39;s newly chosen points</span>\n    <span class=\"n\">query_labels</span> <span class=\"o\">=</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">]</span> <span class=\"c1\"># simulate the human in the loop process</span>\n    <span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">query_points</span><span class=\"p\">,</span> <span class=\"n\">query_labels</span><span class=\"p\">)</span> <span class=\"c1\"># update the active_learning object&#39;s labeled set</span>\n\n    <span class=\"c1\"># plot</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">query_points</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">,</span> <span class=\"n\">marker</span><span class=\"o\">=</span><span class=\"s1\">&#39;*&#39;</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">edgecolors</span><span class=\"o\">=</span><span class=\"s1\">&#39;k&#39;</span><span class=\"p\">,</span> <span class=\"n\">linewidths</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labeled_ind</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">AL</span><span class=\"o\">.</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"reference\">Reference</h2>\n\n<p>[1] Ji, M. and Han, J., \u201cA variance minimization criterion to active learning on graphs,\u201d in [Artificial Intelligence\nand Statistics ], 556\u2013564 (Mar. 2012).</p>\n\n<p>[2] Miller, K. and Bertozzi, A. L., \u201cModel-change active learning in graph-based semi-supervised learning,\u201d\n(Oct. 2021). arXiv: 2110.07739.</p>\n\n<p>[3] Karzand, M. and Nowak, R. D., \u201cMaximin active learning in overparameterized model classes,\u201d IEEE\nJournal on Selected Areas in Information Theory 1, 167\u2013177 (May 2020).</p>\n", "bases": "acquisition_function"}, "graphlearning.active_learning.model_change_vopt.__init__": {"fullname": "graphlearning.active_learning.model_change_vopt.__init__", "modulename": "graphlearning.active_learning", "qualname": "model_change_vopt.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">C</span>, </span><span class=\"param\"><span class=\"n\">V</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">gamma2</span><span class=\"o\">=</span><span class=\"mf\">0.010000000000000002</span>, </span><span class=\"param\"><span class=\"n\">unc_method</span><span class=\"o\">=</span><span class=\"s1\">&#39;smallest_margin&#39;</span></span>)</span>"}, "graphlearning.active_learning.model_change_vopt.C": {"fullname": "graphlearning.active_learning.model_change_vopt.C", "modulename": "graphlearning.active_learning", "qualname": "model_change_vopt.C", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.model_change_vopt.V": {"fullname": "graphlearning.active_learning.model_change_vopt.V", "modulename": "graphlearning.active_learning", "qualname": "model_change_vopt.V", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.model_change_vopt.gamma2": {"fullname": "graphlearning.active_learning.model_change_vopt.gamma2", "modulename": "graphlearning.active_learning", "qualname": "model_change_vopt.gamma2", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"fullname": "graphlearning.active_learning.model_change_vopt.unc_sampling", "modulename": "graphlearning.active_learning", "qualname": "model_change_vopt.unc_sampling", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.active_learning.model_change_vopt.compute": {"fullname": "graphlearning.active_learning.model_change_vopt.compute", "modulename": "graphlearning.active_learning", "qualname": "model_change_vopt.compute", "kind": "function", "doc": "<h1 id=\"internal-compute-acquisition-function-values-function\">Internal Compute Acquisition Function Values Function</h1>\n\n<p>Internal function that any acquisition function object must override. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>u : numpy array\n    score matrix from GSSL classifier. \ncandidate_ind : numpy array (or list)\n    (sub)set of indices on which to compute the acquisition function</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>acquisition_values : numpy array, float\n    acquisition function values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">u</span>, </span><span class=\"param\"><span class=\"n\">candidate_ind</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.active_learning.model_change_vopt.update": {"fullname": "graphlearning.active_learning.model_change_vopt.update", "modulename": "graphlearning.active_learning", "qualname": "model_change_vopt.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query_ind</span>, </span><span class=\"param\"><span class=\"n\">query_labels</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.clustering": {"fullname": "graphlearning.clustering", "modulename": "graphlearning.clustering", "kind": "module", "doc": "<h1 id=\"clustering\">Clustering</h1>\n\n<p>This module implements many graph-based clustering algorithms in an objected-oriented\nfashion, similar to <a href=\"https://scikit-learn.org/stable/\">sklearn</a>.</p>\n"}, "graphlearning.clustering.clustering": {"fullname": "graphlearning.clustering.clustering", "modulename": "graphlearning.clustering", "qualname": "clustering", "kind": "class", "doc": "<p></p>\n"}, "graphlearning.clustering.clustering.__init__": {"fullname": "graphlearning.clustering.clustering.__init__", "modulename": "graphlearning.clustering", "qualname": "clustering.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">W</span>, </span><span class=\"param\"><span class=\"n\">num_clusters</span></span>)</span>"}, "graphlearning.clustering.clustering.cluster_labels": {"fullname": "graphlearning.clustering.clustering.cluster_labels", "modulename": "graphlearning.clustering", "qualname": "clustering.cluster_labels", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.clustering.clustering.num_clusters": {"fullname": "graphlearning.clustering.clustering.num_clusters", "modulename": "graphlearning.clustering", "qualname": "clustering.num_clusters", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.clustering.clustering.fitted": {"fullname": "graphlearning.clustering.clustering.fitted", "modulename": "graphlearning.clustering", "qualname": "clustering.fitted", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.clustering.clustering.predict": {"fullname": "graphlearning.clustering.clustering.predict", "modulename": "graphlearning.clustering", "qualname": "clustering.predict", "kind": "function", "doc": "<h1 id=\"predict\">Predict</h1>\n\n<p>Makes label predictions based on clustering. </p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>pred_labels : (int) numpy array\n    Predicted labels as integers for all datapoints in the graph.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.clustering.clustering.fit_predict": {"fullname": "graphlearning.clustering.clustering.fit_predict", "modulename": "graphlearning.clustering", "qualname": "clustering.fit_predict", "kind": "function", "doc": "<h1 id=\"fit-and-predict\">Fit and predict</h1>\n\n<p>Calls fit() and predict() sequentially.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>all_labels : numpy array, int (optional)\n    True labels for all datapoints.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>pred_labels : (int) numpy array\n    Predicted labels as integers for all datapoints in the graph.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">all_labels</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.clustering.clustering.fit": {"fullname": "graphlearning.clustering.clustering.fit", "modulename": "graphlearning.clustering", "qualname": "clustering.fit", "kind": "function", "doc": "<h1 id=\"fit\">Fit</h1>\n\n<p>Solves clustering problem to perform clustering. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>all_labels : numpy array, int (optional)\n    True labels for all datapoints.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>all_labels : numpy array, int (optional)\n    True labels for all datapoints.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">all_labels</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.clustering.spectral": {"fullname": "graphlearning.clustering.spectral", "modulename": "graphlearning.clustering", "qualname": "spectral", "kind": "class", "doc": "<p></p>\n", "bases": "clustering"}, "graphlearning.clustering.spectral.__init__": {"fullname": "graphlearning.clustering.spectral.__init__", "modulename": "graphlearning.clustering", "qualname": "spectral.__init__", "kind": "function", "doc": "<h1 id=\"spectral-clustering\">Spectral clustering</h1>\n\n<p>Implements several methods for spectral clustering, including Shi-Malik and Ng-Jordan-Weiss. See\nthe tutorial paper [1] for details.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object\n    Weight matrix representing the graph.\nnum_clusters : int\n    Number of desired clusters.\nmethod : {'combinatorial', 'ShiMalik', 'NgJordanWeiss'} (optional), default='NgJordanWeiss'\n    Spectral clustering method.\nextra_dim : int (optional), default=0\n    Extra dimensions to include in spectral embedding.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<p>Spectral clustering on the two-moons dataset: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/spectral_twomoons.py\">spectral_twomoons.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">datasets</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">make_moons</span><span class=\"p\">(</span><span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span><span class=\"n\">noise</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">clustering</span><span class=\"o\">.</span><span class=\"n\">spectral</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">num_clusters</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">pred_labels</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">()</span>\n\n<span class=\"n\">accuracy</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">clustering</span><span class=\"o\">.</span><span class=\"n\">clustering_accuracy</span><span class=\"p\">(</span><span class=\"n\">pred_labels</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Clustering Accuracy: </span><span class=\"si\">%.2f%%</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"n\">accuracy</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">pred_labels</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">axis</span><span class=\"p\">(</span><span class=\"s1\">&#39;off&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p>Spectral clustering on MNIST: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/spectral_mnist.py\">spectral_mnist.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"s1\">&#39;mnist&#39;</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;vae&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;mnist&#39;</span><span class=\"p\">,</span> <span class=\"n\">labels_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">clustering</span><span class=\"o\">.</span><span class=\"n\">spectral</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">num_clusters</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">extra_dim</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">pred_labels</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">all_labels</span><span class=\"o\">=</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n\n<span class=\"n\">accuracy</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">clustering</span><span class=\"o\">.</span><span class=\"n\">clustering_accuracy</span><span class=\"p\">(</span><span class=\"n\">pred_labels</span><span class=\"p\">,</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Clustering Accuracy: </span><span class=\"si\">%.2f%%</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"n\">accuracy</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"reference\">Reference</h2>\n\n<p>[1] U. Von Luxburg.  <a href=\"https://link.springer.com/content/pdf/10.1007/s11222-007-9033-z.pdf\">A tutorial on spectral clustering.</a> Statistics and computing 17.4 (2007): 395-416.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">W</span>, </span><span class=\"param\"><span class=\"n\">num_clusters</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;NgJordanWeiss&#39;</span>, </span><span class=\"param\"><span class=\"n\">extra_dim</span><span class=\"o\">=</span><span class=\"mi\">0</span></span>)</span>"}, "graphlearning.clustering.spectral.method": {"fullname": "graphlearning.clustering.spectral.method", "modulename": "graphlearning.clustering", "qualname": "spectral.method", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.clustering.spectral.extra_dim": {"fullname": "graphlearning.clustering.spectral.extra_dim", "modulename": "graphlearning.clustering", "qualname": "spectral.extra_dim", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.clustering.fokker_planck": {"fullname": "graphlearning.clustering.fokker_planck", "modulename": "graphlearning.clustering", "qualname": "fokker_planck", "kind": "class", "doc": "<p></p>\n", "bases": "clustering"}, "graphlearning.clustering.fokker_planck.__init__": {"fullname": "graphlearning.clustering.fokker_planck.__init__", "modulename": "graphlearning.clustering", "qualname": "fokker_planck.__init__", "kind": "function", "doc": "<h1 id=\"fokkerplanck-clustering\">FokkerPlanck clustering</h1>\n\n<p>Implements the Fokker-Planck clustering algorithm from [1].</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object\n    Weight matrix representing the graph.\nnum_clusters : int\n    Number of desired clusters.\nbeta : float (optional), default=0.5\n    Interpolation parameter between mean shift and diffusion.\nt : float (optional), default=1\n    Time to run Fokker-Planck equation\nrho : numpy array (optional), default=None\n    Density estimator for mean shift. Default is uniform density.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<p>Fokker-Planck clustering on the two-skies dataset: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/fokker_planck_clustering.py\">fokker_planck_clustering.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span><span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">two_skies</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"n\">knn_ind</span><span class=\"p\">,</span><span class=\"n\">knn_dist</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knnsearch</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"n\">rho</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">knn_dist</span><span class=\"p\">,</span><span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">clustering</span><span class=\"o\">.</span><span class=\"n\">fokker_planck</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">,</span><span class=\"n\">num_clusters</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span><span class=\"n\">beta</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span><span class=\"n\">rho</span><span class=\"o\">=</span><span class=\"n\">rho</span><span class=\"p\">)</span>\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">()</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<h2 id=\"reference\">Reference</h2>\n\n<p>[1] K. Craig, N.G. Trillos, &amp; D. Slep\u010dev. (2021). Clustering dynamics on graphs: from spectral clustering to mean shift through Fokker-Planck interpolation. arXiv:2108.08687.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">W</span>, </span><span class=\"param\"><span class=\"n\">num_clusters</span>, </span><span class=\"param\"><span class=\"n\">beta</span><span class=\"o\">=</span><span class=\"mf\">0.5</span>, </span><span class=\"param\"><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">rho</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "graphlearning.clustering.fokker_planck.beta": {"fullname": "graphlearning.clustering.fokker_planck.beta", "modulename": "graphlearning.clustering", "qualname": "fokker_planck.beta", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.clustering.fokker_planck.t": {"fullname": "graphlearning.clustering.fokker_planck.t", "modulename": "graphlearning.clustering", "qualname": "fokker_planck.t", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.clustering.incres": {"fullname": "graphlearning.clustering.incres", "modulename": "graphlearning.clustering", "qualname": "incres", "kind": "class", "doc": "<p></p>\n", "bases": "clustering"}, "graphlearning.clustering.incres.__init__": {"fullname": "graphlearning.clustering.incres.__init__", "modulename": "graphlearning.clustering", "qualname": "incres.__init__", "kind": "function", "doc": "<h1 id=\"incres-clustering\">INCRES clustering</h1>\n\n<p>Implements the INCRES clustering algorithm from [1].</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object\n    Weight matrix representing the graph.\nnum_clusters : int\n    Number of desired clusters.\nspeed : float (optional), default=5\n    Speed parameter.\nT : int (optional), default=100\n    Number of iterations.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>INCRES clustering on MNIST: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/incres_mnist.py\">incres_mnist.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"s1\">&#39;mnist&#39;</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;vae&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;mnist&#39;</span><span class=\"p\">,</span> <span class=\"n\">labels_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">clustering</span><span class=\"o\">.</span><span class=\"n\">incres</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">num_clusters</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">pred_labels</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">all_labels</span><span class=\"o\">=</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n\n<span class=\"n\">accuracy</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">clustering</span><span class=\"o\">.</span><span class=\"n\">clustering_accuracy</span><span class=\"p\">(</span><span class=\"n\">pred_labels</span><span class=\"p\">,</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Clustering Accuracy: </span><span class=\"si\">%.2f%%</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"n\">accuracy</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"reference\">Reference</h2>\n\n<p>[1] X. Bresson, H. Hu, T. Laurent, A. Szlam, and J. von Brecht. <a href=\"https://arxiv.org/pdf/1406.3837.pdf\">An incremental reseeding strategy for clustering</a>. In International Conference on Imaging, Vision and Learning based on Optimization and PDEs (pp. 203-219), 2016.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">W</span>, </span><span class=\"param\"><span class=\"n\">num_clusters</span>, </span><span class=\"param\"><span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"mi\">5</span>, </span><span class=\"param\"><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"mi\">200</span></span>)</span>"}, "graphlearning.clustering.incres.speed": {"fullname": "graphlearning.clustering.incres.speed", "modulename": "graphlearning.clustering", "qualname": "incres.speed", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.clustering.incres.T": {"fullname": "graphlearning.clustering.incres.T", "modulename": "graphlearning.clustering", "qualname": "incres.T", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.clustering.withinss": {"fullname": "graphlearning.clustering.withinss", "modulename": "graphlearning.clustering", "qualname": "withinss", "kind": "function", "doc": "<h1 id=\"withinss\">WithinSS</h1>\n\n<p>Clustering of 1D data with WithinSS. Gives exact solution to the 2-means clustering problem</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x : numpy array\n    1D array of data to cluter.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>w : float\n    WithinSS value, essentially the 2-means energy.\nm : float\n    Threshold that clusters the data array x optimally.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.clustering.RP1D": {"fullname": "graphlearning.clustering.RP1D", "modulename": "graphlearning.clustering", "qualname": "RP1D", "kind": "function", "doc": "<h1 id=\"random-projection-clustering\">Random Projection Clustering</h1>\n\n<p>Binary clustering of 1D data with the Random Projection 1D (RP1D) clustering method from [1].</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : numpy array\n    (n,d) dimensional array of n datapoints in dimension d.\nT : int (optional), default=100\n    Number of random projections to try.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>RP1D clustering on MNIST: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/RP1D_mnist.py\">RP1D_mnist.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n\n<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;mnist&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">labels</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span><span class=\"p\">]</span> \n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">labels</span><span class=\"p\">[</span><span class=\"n\">labels</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">y_pred</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">clustering</span><span class=\"o\">.</span><span class=\"n\">RP1D</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n\n<span class=\"n\">accuracy</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">clustering</span><span class=\"o\">.</span><span class=\"n\">clustering_accuracy</span><span class=\"p\">(</span><span class=\"n\">y_pred</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Clustering Accuracy: </span><span class=\"si\">%.2f%%</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"n\">accuracy</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>cluster_labels : int\n    0/1 array indicating cluster membership</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>[1] S. Han and M. Boutin. <a href=\"https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7350969&casa_token=UsN9y0textMAAAAA:-K9r-Sv4njFQ_txJUpkqCbavM-wTA2CmkgU3co7RjmjTKdcP3guTjahyHA7jZBs1WZTz-E2fETQ&tag=1\">The hidden structure of image datasets.</a> 2015 IEEE International Conference on Image Processing (ICIP). IEEE, 2015.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"mi\">100</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.clustering.clustering_accuracy": {"fullname": "graphlearning.clustering.clustering_accuracy", "modulename": "graphlearning.clustering", "qualname": "clustering_accuracy", "kind": "function", "doc": "<h1 id=\"clustering-accuracy\">Clustering accuracy</h1>\n\n<p>Accuracy for clustering in graph learning. Uses a linear sum assignment\nto find the best permutation of cluster labels.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>pred_labels : numpy array, int\n    Predicted labels\ntrue_labels : numpy array, int\n    True labels</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>accuracy : float\n    Accuracy as a number in [0,100].</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pred_labels</span>, </span><span class=\"param\"><span class=\"n\">true_labels</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.clustering.purity": {"fullname": "graphlearning.clustering.purity", "modulename": "graphlearning.clustering", "qualname": "purity", "kind": "function", "doc": "<h1 id=\"clustering-purity\">Clustering purity</h1>\n\n<p>Computes clustering purity, which is the fraction of nodes\nthat belong to the largest class in each cluster.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>cluster_labels : numpy array, int\n    Cluster labels\ntrue_labels : numpy array, int\n    True labels</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>purity : float\n    Purity as a number in [0,100].</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cluster_labels</span>, </span><span class=\"param\"><span class=\"n\">true_labels</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.datasets": {"fullname": "graphlearning.datasets", "modulename": "graphlearning.datasets", "kind": "module", "doc": "<h1 id=\"datasets\">Datasets</h1>\n\n<p>This module allows for loading standard datasets (currently mnist, fashionmnist, cifar10, signmnist), and creating\nand saving new datasets by name locally.</p>\n"}, "graphlearning.datasets.data_dir": {"fullname": "graphlearning.datasets.data_dir", "modulename": "graphlearning.datasets", "qualname": "data_dir", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/jwcalder/Dropbox/Work/Code/GraphLearning/data&#x27;"}, "graphlearning.datasets.two_skies": {"fullname": "graphlearning.datasets.two_skies", "modulename": "graphlearning.datasets", "qualname": "two_skies", "kind": "function", "doc": "<h1 id=\"two-skies-dataset\">Two skies dataset</h1>\n\n<p>Random sample from the two skies dataset.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>n : int\n    Number of data points (should be even).\nsigma : float (optional)\n    Standard deviation of the skies.\nsep : float (optional)\n    Separation between the two skies.</p>\n\n<h2 id=\"returns-2\">Returns</h2>\n\n<p>data : numpy array, float\n    (n,2) numpy array of data.\nlabels : numpy array, int\n    Binary labels indicating two skies.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span>, </span><span class=\"param\"><span class=\"n\">sigma</span><span class=\"o\">=</span><span class=\"mf\">0.15</span>, </span><span class=\"param\"><span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"mf\">0.64</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.datasets.save": {"fullname": "graphlearning.datasets.save", "modulename": "graphlearning.datasets", "qualname": "save", "kind": "function", "doc": "<h1 id=\"save-dataset\">Save dataset</h1>\n\n<p>Add a new dataset to graph learning by saving the data and labels.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data : (n,m) numpy array, float\n    n data points in m dimensions.\nlabels : Length n numpy array, int\n    Integer values for labels. \ndataset : string\n    Name of dataset.\nmetric : string (optional), default='raw'\n    A modifier to add to the dataset name when saving, to distinguish \n    different types of knn data (not case-sensitive).\noverwrite : bool (optional), default=False\n    Whether to overwrite if dataset already exists.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">labels</span>, </span><span class=\"param\"><span class=\"n\">dataset</span>, </span><span class=\"param\"><span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;raw&#39;</span>, </span><span class=\"param\"><span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.datasets.load": {"fullname": "graphlearning.datasets.load", "modulename": "graphlearning.datasets", "qualname": "load", "kind": "function", "doc": "<h1 id=\"load-dataset\">Load dataset</h1>\n\n<p>Load a dataset. Currently implemented datasets include</p>\n\n<ol>\n<li><a href=\"http://yann.lecun.com/exdb/mnist/\">mnist</a>: metrics are 'raw' and 'vae' (variational autoencoder)</li>\n<li><a href=\"https://github.com/zalandoresearch/fashion-mnist\">fashionmnist</a>: metrics are 'raw' and 'vae' </li>\n<li><a href=\"https://www.cs.toronto.edu/~kriz/cifar.html\">cifar10</a>: metrics are 'raw' and 'simclr'. Loads CIFAR-10.</li>\n<li><a href=\"https://paperswithcode.com/dataset/extended-yale-b-1\">yalefaces</a>: Only metric is 'raw'.</li>\n<li><a href=\"https://www.kaggle.com/datasets/datamunge/sign-language-mnist\">signmnist</a>: Sign language version of MNIST.</li>\n</ol>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>dataset : string, {'mnist', 'fashionmnist', 'cifar'}\n    Name of dataset.\nmetric : string (optional), default='raw'\n    Indicates the embedding method used in the graph construction. For example, dataset='mnist' with\n    metric='vae' loads the latent features from a variational autoencoder trained on MNIST.\nlabels_only : bool (optional), default=False\n    Whether to return only the labels. Useful if the dataset is very large and knndata is already \n    precomputed, so the raw features are not needed.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>data : numpy array, float\n    (n,d) numpy array of n datapoints in dimension d. Not returned if <code>labels_only=True</code>.\nlabels : numpy array, int\n    Integer-valued labels in range 0 through k-1, where k is the number of classes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dataset</span>, </span><span class=\"param\"><span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;raw&#39;</span>, </span><span class=\"param\"><span class=\"n\">labels_only</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.datasets.load_image": {"fullname": "graphlearning.datasets.load_image", "modulename": "graphlearning.datasets", "qualname": "load_image", "kind": "function", "doc": "<h1 id=\"load-image\">Load image </h1>\n\n<p>Load an image. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : string\n    Name of image, choices are {'cameraman', 'cow', 'house', 'jetplane', 'lake', 'mandril_color', 'mandril_gray', 'peppers_color', 'peppers_gray', 'pirate', 'walkbridge', 'chairtoy', 'chairtoy_highres','chairtoy_bw', 'chairtoy_highres_bw'}</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>image : numpy array, float\n    (m,n) or (m,n,3) numpy array containing image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph": {"fullname": "graphlearning.graph", "modulename": "graphlearning.graph", "kind": "module", "doc": "<h1 id=\"graph-class\">Graph Class</h1>\n\n<p>This module contains the <code>graph</code> class, which implements many graph-based algorithms, including\nspectral decompositions, distance functions (via Dijkstra and peikonal), PageRank, AMLE (Absolutely \nMinimal Lipschitz Extensions), p-Laplace equations, and basic calculus on graphs.</p>\n"}, "graphlearning.graph.graph": {"fullname": "graphlearning.graph.graph", "modulename": "graphlearning.graph", "qualname": "graph", "kind": "class", "doc": "<p></p>\n"}, "graphlearning.graph.graph.__init__": {"fullname": "graphlearning.graph.graph.__init__", "modulename": "graphlearning.graph", "qualname": "graph.__init__", "kind": "function", "doc": "<h1 id=\"graph-class\">Graph class</h1>\n\n<p>A class for graphs, including routines to compute Laplacians and their\neigendecompositions, which are useful in graph learning.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : (n,n) numpy array, matrix, or scipy sparse matrix\n    Weight matrix representing the graph.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">W</span></span>)</span>"}, "graphlearning.graph.graph.weight_matrix": {"fullname": "graphlearning.graph.graph.weight_matrix", "modulename": "graphlearning.graph", "qualname": "graph.weight_matrix", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.graph.graph.num_nodes": {"fullname": "graphlearning.graph.graph.num_nodes", "modulename": "graphlearning.graph", "qualname": "graph.num_nodes", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.graph.graph.K": {"fullname": "graphlearning.graph.graph.K", "modulename": "graphlearning.graph", "qualname": "graph.K", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.graph.graph.I": {"fullname": "graphlearning.graph.graph.I", "modulename": "graphlearning.graph", "qualname": "graph.I", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.graph.graph.J": {"fullname": "graphlearning.graph.graph.J", "modulename": "graphlearning.graph", "qualname": "graph.J", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.graph.graph.V": {"fullname": "graphlearning.graph.graph.V", "modulename": "graphlearning.graph", "qualname": "graph.V", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.graph.graph.eigendata": {"fullname": "graphlearning.graph.graph.eigendata", "modulename": "graphlearning.graph", "qualname": "graph.eigendata", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.graph.graph.subgraph": {"fullname": "graphlearning.graph.graph.subgraph", "modulename": "graphlearning.graph", "qualname": "graph.subgraph", "kind": "function", "doc": "<h1 id=\"sub-graph\">Sub-Graph</h1>\n\n<p>Returns the subgraph corresponding to the supplied indices.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>ind : numpy array, int\n    Indices for subgraph.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>G : graph object\n    Subgraph corresponding to the indices contained in <code>ind</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ind</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.degree_vector": {"fullname": "graphlearning.graph.graph.degree_vector", "modulename": "graphlearning.graph", "qualname": "graph.degree_vector", "kind": "function", "doc": "<h1 id=\"degree-vector\">Degree Vector</h1>\n\n<p>Given a weight matrix (W), returns the diagonal degree vector\n[d_{i} = \\sum_{j=1}^n w_{ij}.]</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>d : numpy array, float\n    Degree vector for weight matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.degree_matrix": {"fullname": "graphlearning.graph.graph.degree_matrix", "modulename": "graphlearning.graph", "qualname": "graph.degree_matrix", "kind": "function", "doc": "<h1 id=\"degree-matrix\">Degree Matrix</h1>\n\n<p>Given a weight matrix (W), returns the diagonal degree matrix \nin the form\n[D_{ii} = \\left(\\sum_{j=1}^n w_{ij}\\right)^p.]</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float (optional), default=1\n    Optional exponent to apply to the degree.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>D : (n,n) scipy sparse matrix, float\n    Sparse diagonal degree matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.rand": {"fullname": "graphlearning.graph.graph.rand", "modulename": "graphlearning.graph", "qualname": "graph.rand", "kind": "function", "doc": "<h1 id=\"uniform-random-matrix-with-same-sparsity-structure\">Uniform random matrix with same sparsity structure</h1>\n\n<p>Given a weight matrix (W), returns a random matrix (A),\nwhere the entry (A_{ij}) is a uniform random variable on ([0,1])\nwhenever (w_{ij}&gt;0), and (A_{ij}=0) otherwise.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>A : (n,n) scipy sparse matrix, float\n    Sparse rand_like matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.randn": {"fullname": "graphlearning.graph.graph.randn", "modulename": "graphlearning.graph", "qualname": "graph.randn", "kind": "function", "doc": "<h1 id=\"gaussian-random-matrix-with-same-sparsity-structure\">Gaussian random matrix with same sparsity structure</h1>\n\n<p>Given a weight matrix (W), returns a random matrix (A),\nwhere the entry (A_{ij}) is a uniform random variable on ([0,1])\nwhenever (w_{ij}&gt;0), and (A_{ij}=0) otherwise.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>A : (n,n) scipy sparse matrix, float\n    Sparse rand_like matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.adjacency": {"fullname": "graphlearning.graph.graph.adjacency", "modulename": "graphlearning.graph", "qualname": "graph.adjacency", "kind": "function", "doc": "<h1 id=\"adjacency-matrix\">Adjacency matrix</h1>\n\n<p>Given a weight matrix (W), returns the adjacency matrix (A),\nwhich satisfies (A_{ij}=1) whenever (w_{ij}&gt;0), and  (A_{ij}=0)\notherwise.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>A : (n,n) scipy sparse matrix, float\n    Sparse adjacency matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.gradient": {"fullname": "graphlearning.graph.graph.gradient", "modulename": "graphlearning.graph", "qualname": "graph.gradient", "kind": "function", "doc": "<h1 id=\"graph-gradient\">Graph Gradient</h1>\n\n<p>Computes the graph gradient (\\nabla u) of (u\\in \\mathbb{R}^n), which is\nthe sparse matrix with the form\n[\\nabla u_{ij} = u_j - u_i,]\nwhenever (w_{ij}&gt;0), and (\\nabla u_{ij}=0) otherwise.\nIf <code>weighted=True</code> is chosen, then the gradient is weighted by the graph weight \nmatrix as follows\n[\\nabla u_{ij} = w_{ij}^p(u_j - u_i).]</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>u : numpy array, float\n    Vector (graph function) to take gradient of\nweighted : bool (optional), default=False,True\n    Whether to weight the gradient by the graph weight matrix. Default is False when p=0 and True when (p\\neq 0).\np : float (optional), default=0,1\n    Power for weights on weighted gradient. Default is 0 when unweighted and 1 when weighted.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>G : (n,n) scipy sparse matrix, float\n    Sparse graph gradient matrix</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">u</span>, </span><span class=\"param\"><span class=\"n\">weighted</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.divergence": {"fullname": "graphlearning.graph.graph.divergence", "modulename": "graphlearning.graph", "qualname": "graph.divergence", "kind": "function", "doc": "<h1 id=\"graph-divergence\">Graph Divergence</h1>\n\n<p>Computes the graph divergence (\\text{div} V) of a vector field (V\\in \\mathbb{R}^{n\\times n}), \nwhich is the vector \n[\\nabla u_{ij} = u_j - u_i,]\nIf <code>weighted=True</code> is chosen, then the divergence is weighted by the graph weight \nmatrix as follows\n[\\nabla u_{ij} = w_{ij}(u_j - u_i).]</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>V : scipy sparse matrix, float\n    Sparse matrix representing a vector field over the graph.\nweighted : bool (optional), default=True\n    Whether to weight the divergence by the graph weight matrix.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>divV : numpy array\n    Divergence of V.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">V</span>, </span><span class=\"param\"><span class=\"n\">weighted</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.reweight": {"fullname": "graphlearning.graph.graph.reweight", "modulename": "graphlearning.graph", "qualname": "graph.reweight", "kind": "function", "doc": "<h1 id=\"reweight-a-weight-matrix\">Reweight a weight matrix</h1>\n\n<p>Reweights the graph weight matrix more heavily near labeled nodes. Used in semi-supervised\nlearning at very low label rates. [Need to describe all methods...]</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>idx : numpy array (int)\n    Indices of points to reweight near (typically labeled points).\nmethod : {'poisson','wnll','properly'}, default='poisson'\n    Reweighting method. 'poisson' is described in [1], 'wnll' is described in [2], and 'properly'\n    is described in [3]. If 'properly' is selected, the user must supply the data features <code>X</code>.\nnormalization : {'combinatorial','normalized'}, default='combinatorial'\n    Type of normalization to apply for the graph Laplacian when method='poisson'.\ntau : float or numpy array (optional), default=0\n    Zeroth order term in Laplace equation. Can be a scalar or vector.\nX : numpy array (optional)\n    Data features, used to construct the graph. This is required for the <code>properly</code> weighted \n    graph Laplacian method.\nalpha : float (optional), default=2\n    Parameter for <code>properly</code> reweighting.\nzeta : float (optional), default=1e7\n    Parameter for <code>properly</code> reweighting.\nr : float (optional), default=0.1\n    Radius for <code>properly</code> reweighting.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>W : (n,n) scipy sparse matrix, float\n    Reweighted weight matrix as sparse scipy matrix.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>[1] J. Calder, B. Cook, M. Thorpe, D. Slepcev. <a href=\"http://proceedings.mlr.press/v119/calder20a.html\">Poisson Learning: Graph Based Semi-Supervised Learning at Very Low Label Rates.</a>, \nProceedings of the 37th International Conference on Machine Learning, PMLR 119:1306-1316, 2020.</p>\n\n<p>[2] Z. Shi, S. Osher, and W. Zhu. <a href=\"https://idp.springer.com/authorize/casa?redirect_uri=https://link.springer.com/article/10.1007/s10915-017-0421-z&casa_token=33Z7gqJy3mMAAAAA:iMO0pGmpn_qf5PioVIGocSRq_p4CDm-KNOQhgIC1uvqG9pWlZ6t7I-IZtSJfocFDEHCdMpK8j7Fx1XbzDQ\">Weighted nonlocal laplacian on interpolation from sparse data.</a>\nJournal of Scientific Computing 73.2 (2017): 1164-1177.</p>\n\n<p>[3] J. Calder, D. Slep\u010dev. <a href=\"https://link.springer.com/article/10.1007/s00245-019-09637-3\">Properly-weighted graph Laplacian for semi-supervised learning.</a> Applied mathematics &amp; optimization (2019): 1-49.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">idx</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;poisson&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">normalization</span><span class=\"o\">=</span><span class=\"s1\">&#39;combinatorial&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tau</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">X</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">zeta</span><span class=\"o\">=</span><span class=\"mf\">10000000.0</span>,</span><span class=\"param\">\t<span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mf\">0.1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.laplacian": {"fullname": "graphlearning.graph.graph.laplacian", "modulename": "graphlearning.graph", "qualname": "graph.laplacian", "kind": "function", "doc": "<h1 id=\"graph-laplacian\">Graph Laplacian</h1>\n\n<p>Computes various normalizations of the graph Laplacian for a \ngiven weight matrix (W). The choices are\n[L_{\\rm combinatorial} = D - W,]\n[L_{\\rm randomwalk} = I - D^{-1}W,]\nand\n[L_{\\rm normalized} = I - D^{-1/2}WD^{-1/2},]\nwhere (D) is the diagonal degree matrix, which is defined as\n[D_{ii} = \\sum_{j=1}^n w_{ij}.]\nThe Coifman-Lafon Laplacian is also supported. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>normalization : {'combinatorial','randomwalk','normalized','coifmanlafon'}, default='combinatorial'\n    Type of normalization to apply.\nalpha : float (optional)\n    Parameter for Coifman-Lafon Laplacian</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>L : (n,n) scipy sparse matrix, float\n    Graph Laplacian as sparse scipy matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">normalization</span><span class=\"o\">=</span><span class=\"s1\">&#39;combinatorial&#39;</span>, </span><span class=\"param\"><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.infinity_laplacian": {"fullname": "graphlearning.graph.graph.infinity_laplacian", "modulename": "graphlearning.graph", "qualname": "graph.infinity_laplacian", "kind": "function", "doc": "<h1 id=\"graph-infinity-laplacian\">Graph Infinity Laplacian</h1>\n\n<p>Computes the graph infinity Laplacian of a vector (u), given by\n[L_\\infty u_i= \\min_j w_{ij}(u_j-u_i) + \\max_j w_{ij} (u_j-u_i).]</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Lu : numpy array\n    Graph infinity Laplacian.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">u</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.isconnected": {"fullname": "graphlearning.graph.graph.isconnected", "modulename": "graphlearning.graph", "qualname": "graph.isconnected", "kind": "function", "doc": "<h1 id=\"is-connected\">Is Connected</h1>\n\n<p>Checks if the graph is connected.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>connected : bool\n    True or False, depending on connectivity.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.largest_connected_component": {"fullname": "graphlearning.graph.graph.largest_connected_component", "modulename": "graphlearning.graph", "qualname": "graph.largest_connected_component", "kind": "function", "doc": "<h1 id=\"largest-connected-component\">Largest connected component</h1>\n\n<p>Finds the largest connected component of the graph. Returns the restricted \ngraph, as well as a boolean mask indicating the nodes belonging to \nthe component.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>G : graph object\n    Largest connected component graph.\nind : numpy array (bool)\n    Mask indicating which nodes from the original graph belong to the \n    largest component.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.eigen_decomp": {"fullname": "graphlearning.graph.graph.eigen_decomp", "modulename": "graphlearning.graph", "qualname": "graph.eigen_decomp", "kind": "function", "doc": "<h1 id=\"eigen-decomposition-of-graph-laplacian\">Eigen Decomposition of Graph Laplacian</h1>\n\n<p>Computes the the low-lying eigenvectors and eigenvalues of \nvarious normalizations of the graph Laplacian. Computations can \nbe either exact, or use a fast low-rank approximation via \nrandomized SVD. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>normalization : {'combinatorial','randomwalk','normalized'}, default='combinatorial'\n    Type of normalization of graph Laplacian to apply.\nmethod : {'exact','lowrank'}, default='exact'\n    Method for computing eigenvectors. 'exact' uses scipy.sparse.linalg.eigs, while\n    'lowrank' uses a low rank approximation via randomized SVD. Lowrank is not \n    implemented for gamma &gt; 0.\nk : int (optional), default=10\n    Number of eigenvectors to compute.\nc : int (optional), default=2*k\n    Cutoff for randomized SVD.\ngamma : float (optional), default=0\n    Parameter for modularity (add more details)\ntol : float (optional), default=0\n    tolerance for eigensolvers.\nq : int (optional), default=1\n    Exponent to use in randomized svd.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>vals : numpy array, float \n    eigenvalues in increasing order.\nvecs : (n,k) numpy array, float\n    eigenvectors as columns.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This example compares the exact and lowrank (ranomized svd) methods for computing the spectrum: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/randomized_svd.py\">randomized_svd.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">datasets</span>\n<span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span><span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">make_moons</span><span class=\"p\">(</span><span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span><span class=\"n\">noise</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">graph</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">)</span>\n\n<span class=\"n\">num_eig</span> <span class=\"o\">=</span> <span class=\"mi\">7</span>\n<span class=\"n\">vals_exact</span><span class=\"p\">,</span> <span class=\"n\">vecs_exact</span> <span class=\"o\">=</span> <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">eigen_decomp</span><span class=\"p\">(</span><span class=\"n\">normalization</span><span class=\"o\">=</span><span class=\"s1\">&#39;normalized&#39;</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"n\">num_eig</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;exact&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">vals_rsvd</span><span class=\"p\">,</span> <span class=\"n\">vecs_rsvd</span> <span class=\"o\">=</span> <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">eigen_decomp</span><span class=\"p\">(</span><span class=\"n\">normalization</span><span class=\"o\">=</span><span class=\"s1\">&#39;normalized&#39;</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"n\">num_eig</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;lowrank&#39;</span><span class=\"p\">,</span> <span class=\"n\">q</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">num_eig</span><span class=\"p\">):</span>\n    <span class=\"n\">rsvd</span> <span class=\"o\">=</span> <span class=\"n\">vecs_rsvd</span><span class=\"p\">[:,</span><span class=\"n\">i</span><span class=\"p\">]</span>\n    <span class=\"n\">exact</span> <span class=\"o\">=</span> <span class=\"n\">vecs_exact</span><span class=\"p\">[:,</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n    <span class=\"n\">sign</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">rsvd</span><span class=\"o\">*</span><span class=\"n\">exact</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">sign</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">rsvd</span> <span class=\"o\">*=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n\n    <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">absolute</span><span class=\"p\">(</span><span class=\"n\">rsvd</span> <span class=\"o\">-</span> <span class=\"n\">exact</span><span class=\"p\">))</span><span class=\"o\">/</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">absolute</span><span class=\"p\">(</span><span class=\"n\">rsvd</span><span class=\"p\">)),</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">absolute</span><span class=\"p\">(</span><span class=\"n\">exact</span><span class=\"p\">)))</span>\n\n    <span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">ax1</span><span class=\"p\">,</span><span class=\"n\">ax2</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n    <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">suptitle</span><span class=\"p\">(</span><span class=\"s1\">&#39;Eigenvector </span><span class=\"si\">%d</span><span class=\"s1\">, err=</span><span class=\"si\">%f</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">err</span><span class=\"p\">))</span>\n\n    <span class=\"n\">ax1</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">rsvd</span><span class=\"p\">)</span>\n    <span class=\"n\">ax1</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;Random SVD&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ax2</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">exact</span><span class=\"p\">)</span>\n    <span class=\"n\">ax2</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">&#39;Exact&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">normalization</span><span class=\"o\">=</span><span class=\"s1\">&#39;combinatorial&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;exact&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">c</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">gamma</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">q</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.fiedler_vector": {"fullname": "graphlearning.graph.graph.fiedler_vector", "modulename": "graphlearning.graph", "qualname": "graph.fiedler_vector", "kind": "function", "doc": "<h1 id=\"fiedler-vector\">Fiedler vector</h1>\n\n<p>Computes the Fiedler vector, which is the second eigenvector for the \ncombinatorial graph Laplacian (L = D-W).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>method : {'exact','lowrank'}, default='exact'\n    Method for computing eigenvectors. 'exact' uses scipy.sparse.linalg.eigs, while\n    'lowrank' uses a low rank approximation via randomized SVD.\ntol : float (optional), default=0\n    tolerance for eigensolvers.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>fiedler_vector : numpy array, float \n    Contents of fiedler vector.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;exact&#39;</span>, </span><span class=\"param\"><span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.peikonal": {"fullname": "graphlearning.graph.graph.peikonal", "modulename": "graphlearning.graph", "qualname": "graph.peikonal", "kind": "function", "doc": "<h1 id=\"p-eikonal-equation\">p-eikonal equation </h1>\n\n<p>Sovles the graph p-eikonal equation \n[ \\sum_{j=1}^n w_{ij} (u_i - u_j)_+^p = f_i]\nfor (i\\not\\in \\Gamma), subject to (u_i=g_i) for (i\\in \\Gamma).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bdy_set : numpy array (int or bool) \n    Indices or boolean mask indicating the boundary nodes (\\Gamma).\nbdy_val : numpy array or single float (optional), default=0\n    Boundary values (g) on (\\Gamma). A single float is\n    interpreted as a constant over (\\Gamma).\nf : numpy array or single float (optional), default=1\n    Right hand side of the p-eikonal equation, a single float\n    is interpreted as a constant vector of the graph.\np : float (optional), default=1\n    Value of exponent p in the p-eikonal equation.\nnl_bdy : bool (optional), default = False\n    Whether to extend the boundary conditions to non-local ones (to graph neighbors).\nsolver : {'fmm', 'gauss-seidel'}, default='fmm'\n    Solver for p-eikonal equation.\nu0 : numpy array (float, optional), default=None\n    Initialization of solver. If not provided, then u0=0.\nmax_num_it : int (optional), default=1e5\n    Maximum number of iterations for 'gauss-seidel' solver.\ntol : float (optional), default=1e-3\n    Tolerance with which to solve the equation for 'gauss-seidel' solver.\nnum_bisection_it : int (optional), default=30\n    Number of bisection iterations for solver for 'gauss-seidel' solver with (p>1).\nprog : bool (optional), default=False\n    Toggles whether to print progress information.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>u : numpy array (float)\n    Solution of p-eikonal equation.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This example uses the peikonal equation to compute a data depth: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/peikonal.py\">peikonal.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mf\">1e4</span><span class=\"p\">),</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n<span class=\"n\">eps</span> <span class=\"o\">=</span> <span class=\"mf\">0.02</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">epsilon_ball</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">eps</span><span class=\"p\">)</span>\n<span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">graph</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">)</span>\n\n<span class=\"n\">bdy_set</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"n\">eps</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">eps</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"o\">&lt;</span> <span class=\"n\">eps</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">eps</span><span class=\"p\">)</span>\n<span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">peikonal</span><span class=\"p\">(</span><span class=\"n\">bdy_set</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">u</span><span class=\"p\">,</span><span class=\"n\">s</span><span class=\"o\">=</span><span class=\"mf\">0.25</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">bdy_set</span><span class=\"p\">],</span><span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">bdy_set</span><span class=\"p\">],</span><span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">,</span><span class=\"n\">s</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span> \n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bdy_set</span>,</span><span class=\"param\">\t<span class=\"n\">bdy_val</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">nl_bdy</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">u0</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">solver</span><span class=\"o\">=</span><span class=\"s1\">&#39;fmm&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">max_num_it</span><span class=\"o\">=</span><span class=\"mf\">100000.0</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">num_bisection_it</span><span class=\"o\">=</span><span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">prog</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.dijkstra_hl": {"fullname": "graphlearning.graph.graph.dijkstra_hl", "modulename": "graphlearning.graph", "qualname": "graph.dijkstra_hl", "kind": "function", "doc": "<h1 id=\"dijkstras-algorithm-hopf-lax-version\">Dijkstra's algorithm (Hopf-Lax Version)</h1>\n\n<p>Solves the graph Hamilton-Jacobi equation\n[ \\max_j w_{ji}^{-1} (u(x_i)^2 - u(x_j)^2) = u(x_i)f_i]\nsubject to (u=g) on (\\Gamma).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bdy_set : numpy array (int) \n    Indices or boolean mask identifying the boundary nodes (\\Gamma).\nbdy_val : numpy array (float), optional\n    Boundary values (g) on (\\Gamma). A single float is\n    interpreted as a constant over (\\Gamma).\nf : numpy array or scalar float, default=1\n    Right hand side of eikonal equation. If a scalar, it is extended to a vector \n    over the graph.\nmax_dist : float or np.inf (optional), default = np.inf\n    Distance at which to terminate Dijkstra's algorithm. Nodes with distance\n    greater than <code>max_dist</code> will contain the value <code>np.inf</code>.\nreturn_cp : bool (optional), default=False\n    Whether to return closest point. Nodes with distance greater than max_dist \n    contain <code>-1</code> for closest point index.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dist_func : numpy array, float \n    Distance function computed via Dijkstra's algorithm.\ncp : numpy array, int \n    Closest point indices. Only returned if <code>return_cp=True</code></p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This example uses Dijkstra's algorithm to compute the distance function to a single point,\nand compares the result to a cone: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/dijkstra.py\">dijkstra.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"o\">**</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">)]:</span>\n\n    <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">X</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,:]</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span><span class=\"mf\">0.5</span><span class=\"p\">]</span>\n    <span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"mi\">50</span><span class=\"p\">,</span><span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"s1\">&#39;distance&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">graph</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">)</span>\n    <span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">dijkstra</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n    <span class=\"n\">u_true</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">X</span> <span class=\"o\">-</span> <span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span><span class=\"mf\">0.5</span><span class=\"p\">],</span><span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"o\">-</span><span class=\"n\">u_true</span><span class=\"p\">,</span> <span class=\"nb\">ord</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">inf</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;n = </span><span class=\"si\">%d</span><span class=\"s1\">, Error = </span><span class=\"si\">%f</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"n\">error</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">bdy_set</span>, </span><span class=\"param\"><span class=\"n\">bdy_val</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">max_dist</span><span class=\"o\">=</span><span class=\"n\">inf</span>, </span><span class=\"param\"><span class=\"n\">return_cp</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.dijkstra": {"fullname": "graphlearning.graph.graph.dijkstra", "modulename": "graphlearning.graph", "qualname": "graph.dijkstra", "kind": "function", "doc": "<h1 id=\"dijkstras-algorithm\">Dijkstra's algorithm</h1>\n\n<p>Computes a graph distance function with Dijkstra's algorithm. The graph distance is\n[ d(x,y) = \\min_p \\sum_{i=1}^M w_{p_i,p_{i+1}}f_{p_{i+1}},]\nwhere the minimum is over paths (p) connecting (x) and (y), (w_{ij}) is \nthe weight from (i) to (j), and (f_i) is an additional per-vertex weights. \nA path must satisfy (w_{p_i,p_{i+1}}&gt;0) for all (i). Dijkstra's algorithm returns the\ndistance function to a terminal set (\\Gamma), given by\n[u(x) = \\min_{i\\in \\Gamma} {g(x_i) + d(x,x_i)},]\nwhere (g) are boundary values.\nAn optional feature also returns the closest point information\n[cp(x) = \\text{argmin}_{i\\in \\Gamma} {g(x_i) + d(x,x_i)}.]\nWe note that the distance function (u) can also be interpreted as the solution of the\ngraph eikonal equation\n[ \\max_j w_{ji}^{-1} (u(x_i) - u(x_j)) = f_i]\nsubject to (u=g) on (\\Gamma).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bdy_set : numpy array (int) \n    Indices or boolean mask identifying the boundary nodes (\\Gamma).\nbdy_val : numpy array (float), optional\n    Boundary values (g) on (\\Gamma). A single float is\n    interpreted as a constant over (\\Gamma).\nf : numpy array or scalar float, default=1\n    Right hand side of eikonal equation. If a scalar, it is extended to a vector \n    over the graph.\nmax_dist : float or np.inf (optional), default = np.inf\n    Distance at which to terminate Dijkstra's algorithm. Nodes with distance\n    greater than <code>max_dist</code> will contain the value <code>np.inf</code>.\nreturn_cp : bool (optional), default=False\n    Whether to return closest point. Nodes with distance greater than max_dist \n    contain <code>-1</code> for closest point index.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dist_func : numpy array, float \n    Distance function computed via Dijkstra's algorithm.\ncp : numpy array, int \n    Closest point indices. Only returned if <code>return_cp=True</code></p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This example uses Dijkstra's algorithm to compute the distance function to a single point,\nand compares the result to a cone: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/dijkstra.py\">dijkstra.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"o\">**</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">)]:</span>\n\n    <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">X</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,:]</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span><span class=\"mf\">0.5</span><span class=\"p\">]</span>\n    <span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"mi\">50</span><span class=\"p\">,</span><span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"s1\">&#39;distance&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">graph</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">)</span>\n    <span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">dijkstra</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n    <span class=\"n\">u_true</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">X</span> <span class=\"o\">-</span> <span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span><span class=\"mf\">0.5</span><span class=\"p\">],</span><span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"o\">-</span><span class=\"n\">u_true</span><span class=\"p\">,</span> <span class=\"nb\">ord</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">inf</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;n = </span><span class=\"si\">%d</span><span class=\"s1\">, Error = </span><span class=\"si\">%f</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"n\">error</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">bdy_set</span>, </span><span class=\"param\"><span class=\"n\">bdy_val</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">max_dist</span><span class=\"o\">=</span><span class=\"n\">inf</span>, </span><span class=\"param\"><span class=\"n\">return_cp</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.plaplace": {"fullname": "graphlearning.graph.graph.plaplace", "modulename": "graphlearning.graph", "qualname": "graph.plaplace", "kind": "function", "doc": "<h1 id=\"game-theoretic-p-laplacian\">Game-theoretic p-Laplacian</h1>\n\n<p>Computes the solution of the game-theoretic p-Laplace equation (L_p u_i=0) \nfor (i\\not\\in \\Gamma), subject to (u_i=g_i) for (i\\in \\Gamma).\nThe game-theoretic p-Laplacian is given by\n[ L_p u = \\frac{1}{p}L_{\\rm randomwalk} + \\left(1-\\frac{2}{p}\\right)L_\\infty u,]\nwhere (L_{\\rm randomwalk}) is the random walk graph Laplacian and (L_\\infty) is the\ngraph infinity-Laplace operator, given by\n[ L_\\infty u_i = \\min_j w_{ij}(u_i-u_j) + \\max_j w_{ij} (u_i-u_j).]</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bdy_set : numpy array (int or bool) \n    Indices or boolean mask indicating the boundary nodes (\\Gamma).\nbdy_val : numpy array or single float (optional), default=0\n    Boundary values (g) on (\\Gamma). A single float is\n    interpreted as a constant over (\\Gamma).\np : float\n    Value of (p).\ntol : float (optional), default=1e-1\n    Tolerance with which to solve the equation.\nmax_num_it : int (optional), default=1e6\n    Maximum number of iterations.\nprog : bool (optional), default=False\n    Toggles whether to print progress information.\nfast : bool (optional), default=True\n    Whether to use constant (w_{ij}=1) weights for the infinity-Laplacian\n    which allows a faster algorithm to be used.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>u : numpy array, float \n    Solution of graph p-Laplace equation.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>This example uses the p-Laplace equation to interpolate boundary values: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/plaplace.py\">plaplace.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mf\">1e4</span><span class=\"p\">),</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n<span class=\"n\">eps</span> <span class=\"o\">=</span> <span class=\"mf\">0.02</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">epsilon_ball</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">eps</span><span class=\"p\">)</span>\n<span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">graph</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">)</span>\n\n<span class=\"n\">bdy_set</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"n\">eps</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">eps</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"o\">&lt;</span> <span class=\"n\">eps</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">eps</span><span class=\"p\">)</span>\n<span class=\"n\">bdy_val</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"n\">y</span><span class=\"o\">**</span><span class=\"mi\">2</span>\n\n<span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">G</span><span class=\"o\">.</span><span class=\"n\">plaplace</span><span class=\"p\">(</span><span class=\"n\">bdy_set</span><span class=\"p\">,</span> <span class=\"n\">bdy_val</span><span class=\"p\">[</span><span class=\"n\">bdy_set</span><span class=\"p\">],</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">u</span><span class=\"p\">,</span><span class=\"n\">s</span><span class=\"o\">=</span><span class=\"mf\">0.25</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">bdy_set</span><span class=\"p\">],</span><span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">bdy_set</span><span class=\"p\">],</span><span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">,</span><span class=\"n\">s</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bdy_set</span>,</span><span class=\"param\">\t<span class=\"n\">bdy_val</span>,</span><span class=\"param\">\t<span class=\"n\">p</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">max_num_it</span><span class=\"o\">=</span><span class=\"mf\">1000000.0</span>,</span><span class=\"param\">\t<span class=\"n\">prog</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.amle": {"fullname": "graphlearning.graph.graph.amle", "modulename": "graphlearning.graph", "qualname": "graph.amle", "kind": "function", "doc": "<h1 id=\"absolutely-minimal-lipschitz-extension-amle\">Absolutely Minimal Lipschitz Extension (AMLE)</h1>\n\n<p>Computes the absolutely minimal Lipschitz extension (AMLE) of boundary values on a graph.\nThe AMLE is the solution of the graph infinity Laplace equation\n[ \\min_j w_{ij}(u_i-u_j) + \\max_j w_{ij} (u_i-u_j) = 0]\nfor (i\\not\\in \\Gamma), subject to (u_i=g_i) for (i\\in \\Gamma).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bdy_set : numpy array (int) \n    Indices of boundary nodes (\\Gamma).\nbdy_val : numpy array (float)\n    Boundary values (g) on (\\Gamma).\ntol : float (optional), default=1e-5\n    Tolerance with which to solve the equation.\nmax_num_it : int (optional), default=1000\n    Maximum number of iterations.\nweighted : bool (optional), default=True\n    When set to False, the weights are converted to a 0/1 adjacency matrix,\n    which allows for a much faster solver.\nprog : bool (optional), default=False\n    Toggles whether to print progress information.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>u : numpy array, float \n    Absolutely minimal Lipschitz extension.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bdy_set</span>,</span><span class=\"param\">\t<span class=\"n\">bdy_val</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">1e-05</span>,</span><span class=\"param\">\t<span class=\"n\">max_num_it</span><span class=\"o\">=</span><span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">weighted</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">prog</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.save": {"fullname": "graphlearning.graph.graph.save", "modulename": "graphlearning.graph", "qualname": "graph.save", "kind": "function", "doc": "<h1 id=\"save\">Save</h1>\n\n<p>Saves the graph and all its attributes to a file.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>filename : string\n    File to save graph to, without any extension.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.load": {"fullname": "graphlearning.graph.graph.load", "modulename": "graphlearning.graph", "qualname": "graph.load", "kind": "function", "doc": "<h1 id=\"load\">Load</h1>\n\n<p>Load a graph from a file.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>filename : string\n    File to load graph from, without any extension.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.graph.graph.page_rank": {"fullname": "graphlearning.graph.graph.page_rank", "modulename": "graphlearning.graph", "qualname": "graph.page_rank", "kind": "function", "doc": "<h1 id=\"pagerank\">PageRank</h1>\n\n<p>Solves for the PageRank vector, which is the solution of the PageRank equation\n[ (I - \\alpha P)u = (1-\\alpha) v, ]\nwhere (P = W^T D^{-1}) is the probability transition matrix, with (D) the diagonal\ndegree matrix, (v) is the teleportation distribution, and (\\alpha) is the \nteleportation paramter. Solution is computed with the power iteration\n[ u_{k+1} = \\alpha P u_k + (1-\\alpha) v.]</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>alpha : float (optional), default=0.85\n    Teleportation parameter.\nv : numpy array (optional), default=None\n    Teleportation distribution. Default is the uniform distribution.\ntol : float (optional), default=1e-10\n    Tolerance with which to solve the PageRank equation.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>u : numpy array, float \n    PageRank vector.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.85</span>, </span><span class=\"param\"><span class=\"n\">v</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">1e-10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.ssl": {"fullname": "graphlearning.ssl", "modulename": "graphlearning.ssl", "kind": "module", "doc": "<h1 id=\"semi-supervised-learning\">Semi-Supervised Learning</h1>\n\n<p>This module implements many graph-based semi-supervised learning algorithms in an objected-oriented\nfashion, similar to <a href=\"https://scikit-learn.org/stable/\">sklearn</a>. The usage is similar for all algorithms.\nBelow, we give some high-level examples of how to use this module. There are also examples for some\nindividual functions, given in the documentation below.</p>\n\n<h2 id=\"two-moons-example\">Two Moons Example</h2>\n\n<p>Semi-supervised learning on the two-moons dataset: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/ssl_twomoons.py\">ssl_twomoons.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">datasets</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">make_moons</span><span class=\"p\">(</span><span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span><span class=\"n\">noise</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"n\">train_ind</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">trainsets</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">train_labels</span> <span class=\"o\">=</span> <span class=\"n\">labels</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">]</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">laplace</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">)</span>\n<span class=\"n\">pred_labels</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">train_ind</span><span class=\"p\">,</span> <span class=\"n\">train_labels</span><span class=\"p\">)</span>\n\n<span class=\"n\">accuracy</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">ssl_accuracy</span><span class=\"p\">(</span><span class=\"n\">pred_labels</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">train_ind</span><span class=\"p\">)</span>   \n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Accuracy: </span><span class=\"si\">%.2f%%</span><span class=\"s2\">&quot;</span><span class=\"o\">%</span><span class=\"n\">accuracy</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">pred_labels</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<h2 id=\"handwritten-digit-classification\">Handwritten digit classification</h2>\n\n<p>Laplace and Poisson learning on MNIST at 1 label per class: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/ssl_mnist.py\">ssl_mnist.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;mnist&#39;</span><span class=\"p\">,</span> <span class=\"n\">labels_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"s1\">&#39;mnist&#39;</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;vae&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">num_train_per_class</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">train_ind</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">trainsets</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"n\">num_train_per_class</span><span class=\"p\">)</span>\n<span class=\"n\">train_labels</span> <span class=\"o\">=</span> <span class=\"n\">labels</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">]</span>\n\n<span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">laplace</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">),</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">poisson</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">)]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"n\">models</span><span class=\"p\">:</span>\n    <span class=\"n\">pred_labels</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"n\">train_labels</span><span class=\"p\">)</span>\n    <span class=\"n\">accuracy</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">ssl_accuracy</span><span class=\"p\">(</span><span class=\"n\">pred_labels</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">train_ind</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;: </span><span class=\"si\">%.2f%%</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"n\">accuracy</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"comparing-different-methods\">Comparing different methods</h2>\n\n<p>The <code>ssl</code> module contains functions for running large scale experiments, with parallel processing,\nto compare many different semi-supervised learning algorithms at different label rates\nand with different, randomly chosen, training data. The package includes functions to automatically\ncreate LaTeX tables and plots comparing accuracy or test error. This example compares several methods over 100 \nrandomized trials: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/ssl_trials.py\">ssl_trials.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mnist&#39;</span>\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;vae&#39;</span> \n<span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"mi\">10</span> \n\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">)</span>\n<span class=\"n\">D</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"s1\">&#39;distance&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">,</span> <span class=\"n\">labels_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">trainsets</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">trainsets</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">)</span>\n\n<span class=\"n\">model_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">graph_nearest_neighbor</span><span class=\"p\">(</span><span class=\"n\">D</span><span class=\"p\">),</span>\n              <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">laplace</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">),</span>\n              <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">laplace</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">reweighting</span><span class=\"o\">=</span><span class=\"s1\">&#39;wnll&#39;</span><span class=\"p\">),</span> \n              <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">laplace</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">reweighting</span><span class=\"o\">=</span><span class=\"s1\">&#39;poisson&#39;</span><span class=\"p\">),</span>\n              <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">poisson</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">solver</span><span class=\"o\">=</span><span class=\"s1\">&#39;gradient_descent&#39;</span><span class=\"p\">)]</span>\n\n<span class=\"n\">tag</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;_&#39;</span> <span class=\"o\">+</span> <span class=\"n\">metric</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;_k</span><span class=\"si\">%d</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"n\">k</span>\n<span class=\"k\">for</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"n\">model_list</span><span class=\"p\">:</span>\n    <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ssl_trials</span><span class=\"p\">(</span><span class=\"n\">trainsets</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">num_cores</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"n\">tag</span><span class=\"p\">)</span>\n\n<span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">accuracy_table</span><span class=\"p\">(</span><span class=\"n\">model_list</span><span class=\"p\">,</span> <span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"n\">tag</span><span class=\"p\">,</span> <span class=\"n\">savefile</span><span class=\"o\">=</span><span class=\"s1\">&#39;SSL_&#39;</span><span class=\"o\">+</span><span class=\"n\">dataset</span><span class=\"o\">+</span><span class=\"s1\">&#39;.tex&#39;</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">&quot;SSL Comparison: &quot;</span><span class=\"o\">+</span><span class=\"n\">dataset</span><span class=\"p\">)</span>\n<span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">accuracy_plot</span><span class=\"p\">(</span><span class=\"n\">model_list</span><span class=\"p\">,</span> <span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"n\">tag</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;SSL&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"class-priors\">Class Priors</h2>\n\n<p>Prior information about relative class sizes can be used to improve performance: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/ssl_classpriors.py\">ssl_classpriors.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;mnist&#39;</span><span class=\"p\">,</span> <span class=\"n\">labels_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"s1\">&#39;mnist&#39;</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;vae&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">num_train_per_class</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">train_ind</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">trainsets</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"n\">num_train_per_class</span><span class=\"p\">)</span>\n<span class=\"n\">train_labels</span> <span class=\"o\">=</span> <span class=\"n\">labels</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">]</span>\n\n<span class=\"n\">class_priors</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">class_priors</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">laplace</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"n\">class_priors</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"n\">train_labels</span><span class=\"p\">)</span>\n\n<span class=\"n\">pred_labels</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">ignore_class_priors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">accuracy</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">ssl_accuracy</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span><span class=\"n\">pred_labels</span><span class=\"p\">,</span><span class=\"n\">train_ind</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; without class priors: </span><span class=\"si\">%.2f%%</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"n\">accuracy</span><span class=\"p\">)</span>\n\n<span class=\"n\">pred_labels</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">()</span>\n<span class=\"n\">accuracy</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">ssl_accuracy</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span><span class=\"n\">pred_labels</span><span class=\"p\">,</span><span class=\"n\">train_ind</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s1\">&#39; with class priors: </span><span class=\"si\">%.2f%%</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"n\">accuracy</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "graphlearning.ssl.results_dir": {"fullname": "graphlearning.ssl.results_dir", "modulename": "graphlearning.ssl", "qualname": "results_dir", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/jwcalder/Dropbox/Work/Code/GraphLearning/results&#x27;"}, "graphlearning.ssl.ssl": {"fullname": "graphlearning.ssl.ssl", "modulename": "graphlearning.ssl", "qualname": "ssl", "kind": "class", "doc": "<p></p>\n"}, "graphlearning.ssl.ssl.__init__": {"fullname": "graphlearning.ssl.ssl.__init__", "modulename": "graphlearning.ssl", "qualname": "ssl.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">W</span>, </span><span class=\"param\"><span class=\"n\">class_priors</span></span>)</span>"}, "graphlearning.ssl.ssl.prob": {"fullname": "graphlearning.ssl.ssl.prob", "modulename": "graphlearning.ssl", "qualname": "ssl.prob", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.ssl.fitted": {"fullname": "graphlearning.ssl.ssl.fitted", "modulename": "graphlearning.ssl", "qualname": "ssl.fitted", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.ssl.name": {"fullname": "graphlearning.ssl.ssl.name", "modulename": "graphlearning.ssl", "qualname": "ssl.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.ssl.accuracy_filename": {"fullname": "graphlearning.ssl.ssl.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "ssl.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.ssl.requires_eig": {"fullname": "graphlearning.ssl.ssl.requires_eig", "modulename": "graphlearning.ssl", "qualname": "ssl.requires_eig", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.ssl.onevsrest": {"fullname": "graphlearning.ssl.ssl.onevsrest", "modulename": "graphlearning.ssl", "qualname": "ssl.onevsrest", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.ssl.similarity": {"fullname": "graphlearning.ssl.ssl.similarity", "modulename": "graphlearning.ssl", "qualname": "ssl.similarity", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.ssl.class_priors": {"fullname": "graphlearning.ssl.ssl.class_priors", "modulename": "graphlearning.ssl", "qualname": "ssl.class_priors", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.ssl.weights": {"fullname": "graphlearning.ssl.ssl.weights", "modulename": "graphlearning.ssl", "qualname": "ssl.weights", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.ssl.class_priors_error": {"fullname": "graphlearning.ssl.ssl.class_priors_error", "modulename": "graphlearning.ssl", "qualname": "ssl.class_priors_error", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.ssl.set_graph": {"fullname": "graphlearning.ssl.ssl.set_graph", "modulename": "graphlearning.ssl", "qualname": "ssl.set_graph", "kind": "function", "doc": "<h1 id=\"set-graph\">Set Graph</h1>\n\n<p>Sets the graph object for semi-supervised learning.</p>\n\n<p>Implements 3 different solvers, spectral, gradient_descent, and conjugate_gradient. \nGPU acceleration is available for gradient descent. See [1] for details.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    Weight matrix representing the graph.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">W</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.ssl.ssl.volume_label_projection": {"fullname": "graphlearning.ssl.ssl.volume_label_projection", "modulename": "graphlearning.ssl", "qualname": "ssl.volume_label_projection", "kind": "function", "doc": "<h1 id=\"volume-label-projection\">Volume label projection</h1>\n\n<p>Projects class probabilities to labels while enforcing a constraint on \nclass priors (i.e., class volumes). Does not return anything, just modifies <code>self.weights</code>.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>labels : numpy array (int)\n    Predicted labels after volume correction.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.ssl.ssl.get_accuracy_filename": {"fullname": "graphlearning.ssl.ssl.get_accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "ssl.get_accuracy_filename", "kind": "function", "doc": "<h1 id=\"get-accuracy-filename\">Get accuracy filename</h1>\n\n<p>Returns name of the file that will store the accuracy results for <code>ssl_trials.py</code>.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>fname : str\n    Accuracy filename.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.ssl.ssl.predict": {"fullname": "graphlearning.ssl.ssl.predict", "modulename": "graphlearning.ssl", "qualname": "ssl.predict", "kind": "function", "doc": "<h1 id=\"predict\">Predict</h1>\n\n<p>Makes label predictions based on the probabilities computed by <code>fit()</code>.\nWill use a volume label projection if <code>class_priors</code> were given, to ensure \nthe number of nodes predicted in each class is correct.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>ignore_class_priors : bool (optional), default=False\n    Used to disable the volume constrained label decision, when <code>class_priors</code> has been provided. </p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>pred_labels : (int) numpy array\n    Predicted labels as integers for all datapoints in the graph.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ignore_class_priors</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.ssl.ssl.fit_predict": {"fullname": "graphlearning.ssl.ssl.fit_predict", "modulename": "graphlearning.ssl", "qualname": "ssl.fit_predict", "kind": "function", "doc": "<h1 id=\"fit-and-predict\">Fit and predict</h1>\n\n<p>Calls fit() and predict() sequentially.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>train_ind : numpy array, int\n    Indicies of training points.\ntrain_labels : numpy array, int\n    Training labels as integers (0,1,\\dots,k-1) for (k) classes.\nall_labels : numpy array, int (optional)\n    True labels for all datapoints.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>pred_labels : (int) numpy array\n    Predicted labels as integers for all datapoints in the graph.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">train_ind</span>, </span><span class=\"param\"><span class=\"n\">train_labels</span>, </span><span class=\"param\"><span class=\"n\">all_labels</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.ssl.ssl.ssl_trials": {"fullname": "graphlearning.ssl.ssl.ssl_trials", "modulename": "graphlearning.ssl", "qualname": "ssl.ssl_trials", "kind": "function", "doc": "<h1 id=\"semi-supervised-learning-trials\">Semi-supervised learning trials</h1>\n\n<p>Runs a semi-supervised learning algorithm on a list of training sets,\nrecording the label rates and saves the results to a csv file in the\nlocal folder results/. The filename is controlled by the member function\nmodel.get_accuracy_filename(). The trial will abort if the accuracy result\nfile already exists, unless <code>overwrite=True</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>trainsets : list of numpy arrays\n    Collection of training sets to run semi-supervised learning on. This is the output\n    of <code>graphlearning.trainsets.generate</code> or <code>graphlearning.trainsets.load</code>.\nlabels : numpy array (int)\n    Integer array of labels for entire dataset.\nnum_cores : int\n    Number of cores to use for parallel processing over trials\ntag : str (optional), default=''\n    An extra identifying tag to add to the accuracy filename.\nsave_results : bool (optional), default=True\n    Whether to save results to csv file or just print to the screen.\noverwrite : bool (optional), default = False\n    Whether to overwrite existing results file, if found. If <code>overwrite=False</code>, \n    <code>save_results=True</code>, and the results file is found, the trial is aborted.\nnum_trials: int (optional), defualt = -1\n    Number of trials. Any negative number runs all trials.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">trainsets</span>,</span><span class=\"param\">\t<span class=\"n\">labels</span>,</span><span class=\"param\">\t<span class=\"n\">num_cores</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">save_results</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">num_trials</span><span class=\"o\">=-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.ssl.ssl.trials_statistics": {"fullname": "graphlearning.ssl.ssl.trials_statistics", "modulename": "graphlearning.ssl", "qualname": "ssl.trials_statistics", "kind": "function", "doc": "<h1 id=\"trials-statistics\">Trials statistics</h1>\n\n<p>Loads accuracy scores from each trial from csv files created by <code>ssl_trials</code>\nand returns summary statistics (mean and standard deviation of accuracy).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>tag : str (optional), default=''\n    An extra identifying tag to add to the accuracy filename.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>num_train : numpy array\n    Number of training examples in each label rate experiment.\nacc_mean : numpy array\n    Mean accuracy over all trials in each experiment.\nacc_stddev : numpy array\n    Standard deviation of accuracy over all trials in each experiment.\nnum_trials : int\n    Number of trials for each label rate.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.ssl.ssl.fit": {"fullname": "graphlearning.ssl.ssl.fit", "modulename": "graphlearning.ssl", "qualname": "ssl.fit", "kind": "function", "doc": "<h1 id=\"fit\">Fit</h1>\n\n<p>Solves graph-based learning problem, computing the probability \nthat each node belongs to each class. If <code>all_labels</code> is provided, \nthen the solver operates in verbose mode, printing out accuracy\nat each iteration.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>train_ind : numpy array, int\n    Indicies of training points.\ntrain_labels : numpy array, int\n    Training labels as integers (0,1,\\dots,k-1) for (k) classes.\nall_labels : numpy array, int (optional)\n    True labels for all datapoints.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>u : (n,k) numpy array, float\n    Probabilities computed by graph-based learning for each node and each class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">train_ind</span>, </span><span class=\"param\"><span class=\"n\">train_labels</span>, </span><span class=\"param\"><span class=\"n\">all_labels</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.ssl.poisson": {"fullname": "graphlearning.ssl.poisson", "modulename": "graphlearning.ssl", "qualname": "poisson", "kind": "class", "doc": "<p></p>\n", "bases": "ssl"}, "graphlearning.ssl.poisson.__init__": {"fullname": "graphlearning.ssl.poisson.__init__", "modulename": "graphlearning.ssl", "qualname": "poisson.__init__", "kind": "function", "doc": "<h1 id=\"poisson-learning\">Poisson Learning</h1>\n\n<p>Semi-supervised learning via the solution of the Poisson equation \n[L^p u = \\sum_{j=1}^m \\delta_j(y_j - \\overline{y})^T,]\nwhere (L=D-W) is the combinatorial graph Laplacian, \n(y_j) are the label vectors, (\\overline{y} = \\frac{1}{m}\\sum_{i=1}^m y_j) \nis the average label vector, (m) is the number of training points, and \n(\\delta_j) are standard basis vectors. See the reference for more details.</p>\n\n<p>Implements 3 different solvers, spectral, gradient_descent, and conjugate_gradient. \nGPU acceleration is available for gradient descent. See [1] for details.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    Weight matrix representing the graph.\nclass_priors : numpy array (optional), default=None\n    Class priors (fraction of data belonging to each class). If provided, the predict function\n    will attempt to automatic balance the label predictions to predict the correct number of\n    nodes in each class.\nsolver : {'spectral', 'conjugate_gradient', 'gradient_descent'} (optional), default='conjugate_gradient'\n    Choice of solver for Poisson learning.\np : int (optional), default=1\n    Power for Laplacian, can be any positive real number. Solver will default to 'spectral' if p!=1.\nuse_cuda : bool (optional), default=False\n    Whether to use GPU acceleration for gradient descent solver.\nmin_iter : int (optional), default=50\n    Minimum number of iterations of gradient descent before checking stopping condition.\nmax_iter : int (optional), default=1000\n    Maximum number of iterations of gradient descent.\ntol : float (optional), default=1e-3\n    Tolerance for conjugate gradient solver.\nspectral_cutoff : int (optional), default=10\n    Number of eigenvectors to use for spectral solver.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<p>Poisson learning works on directed (i.e., nonsymmetric) graphs with the gradient descent solver: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/poisson_directed.py\">poisson_directed.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">datasets</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">make_moons</span><span class=\"p\">(</span><span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span><span class=\"n\">noise</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"n\">symmetrize</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">train_ind</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">trainsets</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">train_labels</span> <span class=\"o\">=</span> <span class=\"n\">labels</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">]</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">poisson</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">solver</span><span class=\"o\">=</span><span class=\"s1\">&#39;gradient_descent&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">pred_labels</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">train_ind</span><span class=\"p\">,</span> <span class=\"n\">train_labels</span><span class=\"p\">)</span>\n\n<span class=\"n\">accuracy</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">ssl_accuracy</span><span class=\"p\">(</span><span class=\"n\">pred_labels</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">train_ind</span><span class=\"p\">)</span>   \n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Accuracy: </span><span class=\"si\">%.2f%%</span><span class=\"s2\">&quot;</span><span class=\"o\">%</span><span class=\"n\">accuracy</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">pred_labels</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<h2 id=\"reference\">Reference</h2>\n\n<p>[1] J. Calder, B. Cook, M. Thorpe, D. Slepcev. <a href=\"http://proceedings.mlr.press/v119/calder20a.html\">Poisson Learning: Graph Based Semi-Supervised\nLearning at Very Low Label Rates.</a>, \nProceedings of the 37th International Conference on Machine Learning, PMLR 119:1306-1316, 2020.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">W</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">solver</span><span class=\"o\">=</span><span class=\"s1\">&#39;conjugate_gradient&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">use_cuda</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">min_iter</span><span class=\"o\">=</span><span class=\"mi\">50</span>,</span><span class=\"param\">\t<span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">spectral_cutoff</span><span class=\"o\">=</span><span class=\"mi\">10</span></span>)</span>"}, "graphlearning.ssl.poisson.solver": {"fullname": "graphlearning.ssl.poisson.solver", "modulename": "graphlearning.ssl", "qualname": "poisson.solver", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson.p": {"fullname": "graphlearning.ssl.poisson.p", "modulename": "graphlearning.ssl", "qualname": "poisson.p", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson.use_cuda": {"fullname": "graphlearning.ssl.poisson.use_cuda", "modulename": "graphlearning.ssl", "qualname": "poisson.use_cuda", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson.min_iter": {"fullname": "graphlearning.ssl.poisson.min_iter", "modulename": "graphlearning.ssl", "qualname": "poisson.min_iter", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson.max_iter": {"fullname": "graphlearning.ssl.poisson.max_iter", "modulename": "graphlearning.ssl", "qualname": "poisson.max_iter", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson.tol": {"fullname": "graphlearning.ssl.poisson.tol", "modulename": "graphlearning.ssl", "qualname": "poisson.tol", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson.spectral_cutoff": {"fullname": "graphlearning.ssl.poisson.spectral_cutoff", "modulename": "graphlearning.ssl", "qualname": "poisson.spectral_cutoff", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson.accuracy_filename": {"fullname": "graphlearning.ssl.poisson.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "poisson.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson.name": {"fullname": "graphlearning.ssl.poisson.name", "modulename": "graphlearning.ssl", "qualname": "poisson.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson_mbo": {"fullname": "graphlearning.ssl.poisson_mbo", "modulename": "graphlearning.ssl", "qualname": "poisson_mbo", "kind": "class", "doc": "<p></p>\n", "bases": "ssl"}, "graphlearning.ssl.poisson_mbo.__init__": {"fullname": "graphlearning.ssl.poisson_mbo.__init__", "modulename": "graphlearning.ssl", "qualname": "poisson_mbo.__init__", "kind": "function", "doc": "<h1 id=\"poissonmbo\">PoissonMBO </h1>\n\n<p>Semi-supervised learning via Poisson MBO method [1]. class_priors must be provided.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    Weight matrix representing the graph.\nclass_priors : numpy array (optional), default=None\n    Class priors (fraction of data belonging to each class). \nsolver : {'spectral', 'conjugate_gradient', 'gradient_descent'} (optional), default='conjugate_gradient'\n    Choice of solver for Poisson learning.\nuse_cuda : bool (optional), default=False\n    Whether to use GPU acceleration for gradient descent solver.\nmin_iter : int (optional), default=50\n    Minimum number of iterations of gradient descent before checking stopping condition.\nmax_iter : int (optional), default=1000\n    Maximum number of iterations of gradient descent.\ntol : float (optional), default=1e-3\n    Tolerance for conjugate gradient solver.\nspectral_cutoff : int (optional), default=10\n    Number of eigenvectors to use for spectral solver.\nNs : int (optional), default=40\n    Number of inner iterations in PoissonMBO.\nmu : float (optional), default=1\n    Fidelity parameter.\nT : int (optional), default=20\n    Number of MBO iterations.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>Running PoissonMBO on MNIST at 1 label per class: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/poisson_mbo.py\">poisson_mbo.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;mnist&#39;</span><span class=\"p\">,</span> <span class=\"n\">labels_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"s1\">&#39;mnist&#39;</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;vae&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">num_train_per_class</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">train_ind</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">trainsets</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"n\">num_train_per_class</span><span class=\"p\">)</span>\n<span class=\"n\">train_labels</span> <span class=\"o\">=</span> <span class=\"n\">labels</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">]</span>\n\n<span class=\"n\">class_priors</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">class_priors</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">poisson_mbo</span><span class=\"p\">(</span><span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">class_priors</span><span class=\"p\">)</span>\n<span class=\"n\">pred_labels</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"n\">train_labels</span><span class=\"p\">,</span><span class=\"n\">all_labels</span><span class=\"o\">=</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n\n<span class=\"n\">accuracy</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">ssl_accuracy</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span><span class=\"n\">pred_labels</span><span class=\"p\">,</span><span class=\"n\">train_ind</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;: </span><span class=\"si\">%.2f%%</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"n\">accuracy</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"reference\">Reference</h2>\n\n<p>[1] J. Calder, B. Cook, M. Thorpe, D. Slepcev. <a href=\"http://proceedings.mlr.press/v119/calder20a.html\">Poisson Learning: Graph Based Semi-Supervised\nLearning at Very Low Label Rates.</a>, \nProceedings of the 37th International Conference on Machine Learning, PMLR 119:1306-1316, 2020.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">W</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">solver</span><span class=\"o\">=</span><span class=\"s1\">&#39;conjugate_gradient&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">use_cuda</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">min_iter</span><span class=\"o\">=</span><span class=\"mi\">50</span>,</span><span class=\"param\">\t<span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">spectral_cutoff</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">Ns</span><span class=\"o\">=</span><span class=\"mi\">40</span>,</span><span class=\"param\">\t<span class=\"n\">mu</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">T</span><span class=\"o\">=</span><span class=\"mi\">20</span></span>)</span>"}, "graphlearning.ssl.poisson_mbo.poisson_model": {"fullname": "graphlearning.ssl.poisson_mbo.poisson_model", "modulename": "graphlearning.ssl", "qualname": "poisson_mbo.poisson_model", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson_mbo.Ns": {"fullname": "graphlearning.ssl.poisson_mbo.Ns", "modulename": "graphlearning.ssl", "qualname": "poisson_mbo.Ns", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson_mbo.mu": {"fullname": "graphlearning.ssl.poisson_mbo.mu", "modulename": "graphlearning.ssl", "qualname": "poisson_mbo.mu", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson_mbo.T": {"fullname": "graphlearning.ssl.poisson_mbo.T", "modulename": "graphlearning.ssl", "qualname": "poisson_mbo.T", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson_mbo.use_cuda": {"fullname": "graphlearning.ssl.poisson_mbo.use_cuda", "modulename": "graphlearning.ssl", "qualname": "poisson_mbo.use_cuda", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson_mbo.accuracy_filename": {"fullname": "graphlearning.ssl.poisson_mbo.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "poisson_mbo.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.poisson_mbo.name": {"fullname": "graphlearning.ssl.poisson_mbo.name", "modulename": "graphlearning.ssl", "qualname": "poisson_mbo.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.volume_mbo": {"fullname": "graphlearning.ssl.volume_mbo", "modulename": "graphlearning.ssl", "qualname": "volume_mbo", "kind": "class", "doc": "<p></p>\n", "bases": "ssl"}, "graphlearning.ssl.volume_mbo.__init__": {"fullname": "graphlearning.ssl.volume_mbo.__init__", "modulename": "graphlearning.ssl", "qualname": "volume_mbo.__init__", "kind": "function", "doc": "<h1 id=\"volume-mbo\">Volume MBO</h1>\n\n<p>Semi-supervised learning with the VolumeMBO method [1]. class_priors must be provided.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    Weight matrix representing the graph.\nclass_priors : numpy array\n    Class priors (fraction of data belonging to each class). \ntemperature : float (optional), default=0.1\n    Temperature for volume constrained MBO.\nvolume_constraint : float (optional), default=0.5\n    The number of points in each class is constrained to be a mulitple (\\lambda) of the true\n    class size, where \n    [ \\text{volume_constraint} \\leq \\lambda \\leq 2-\\text{volume_constraint}.]\n    Setting <code>volume_constraint=1</code> yields the tightest constraint.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>[1] M. Jacobs, E. Merkurjev, and S. Esedo\u1e21lu. <a href=\"https://www.sciencedirect.com/science/article/pii/S0021999117308033?casa_token=kNahPd2vu50AAAAA:uJQYQVnmMBV_oL0CG1UcOIulY4vhclMGTztm-jjAzy9Lns7rtoOnKs4iyvLOjKXaHU-D6qrQJT4\">Auction dynamics: A volume constrained MBO scheme.</a> Journal of Computational Physics 354:288-310, 2018.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">W</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>, </span><span class=\"param\"><span class=\"n\">volume_constraint</span><span class=\"o\">=</span><span class=\"mf\">0.5</span></span>)</span>"}, "graphlearning.ssl.volume_mbo.class_counts": {"fullname": "graphlearning.ssl.volume_mbo.class_counts", "modulename": "graphlearning.ssl", "qualname": "volume_mbo.class_counts", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.volume_mbo.temperature": {"fullname": "graphlearning.ssl.volume_mbo.temperature", "modulename": "graphlearning.ssl", "qualname": "volume_mbo.temperature", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.volume_mbo.volume_constraint": {"fullname": "graphlearning.ssl.volume_mbo.volume_constraint", "modulename": "graphlearning.ssl", "qualname": "volume_mbo.volume_constraint", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.volume_mbo.accuracy_filename": {"fullname": "graphlearning.ssl.volume_mbo.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "volume_mbo.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.volume_mbo.name": {"fullname": "graphlearning.ssl.volume_mbo.name", "modulename": "graphlearning.ssl", "qualname": "volume_mbo.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.multiclass_mbo": {"fullname": "graphlearning.ssl.multiclass_mbo", "modulename": "graphlearning.ssl", "qualname": "multiclass_mbo", "kind": "class", "doc": "<p></p>\n", "bases": "ssl"}, "graphlearning.ssl.multiclass_mbo.__init__": {"fullname": "graphlearning.ssl.multiclass_mbo.__init__", "modulename": "graphlearning.ssl", "qualname": "multiclass_mbo.__init__", "kind": "function", "doc": "<h1 id=\"multiclass-mbo\">Multiclass MBO</h1>\n\n<p>Semi-supervised learning via the Multiclass MBO method [1].</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    Weight matrix representing the graph.\nclass_priors : numpy array (optional), default=None\n    Class priors (fraction of data belonging to each class). If provided, the predict function\n    will attempt to automatic balance the label predictions to predict the correct number of\n    nodes in each class.\nNs : int (optional), default=6\n    Number of inner iterations.\nT : int (optional), default=10\n    Number of outer iterations.\ndt : float (optional), default=0.15\n    Time step.\nmu : float (optional), default=50\n    Fidelity penalty.\nnum_eig : int (optional), default=300\n    Number of eigenvectors.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>[1] C. Garcia-Cardona, E. Merkurjev, A.L. Bertozzi, A. Flenner, and A.G. Percus. <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.743.9516&rep=rep1&type=pdf\">Multiclass data segmentation using diffuse interface methods on graphs.</a> IEEE transactions on pattern analysis and machine intelligence, 36(8), 1600-1613, 2014.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">W</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">Ns</span><span class=\"o\">=</span><span class=\"mi\">6</span>, </span><span class=\"param\"><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"mi\">10</span>, </span><span class=\"param\"><span class=\"n\">dt</span><span class=\"o\">=</span><span class=\"mf\">0.15</span>, </span><span class=\"param\"><span class=\"n\">mu</span><span class=\"o\">=</span><span class=\"mi\">50</span>, </span><span class=\"param\"><span class=\"n\">num_eig</span><span class=\"o\">=</span><span class=\"mi\">50</span></span>)</span>"}, "graphlearning.ssl.multiclass_mbo.Ns": {"fullname": "graphlearning.ssl.multiclass_mbo.Ns", "modulename": "graphlearning.ssl", "qualname": "multiclass_mbo.Ns", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.multiclass_mbo.T": {"fullname": "graphlearning.ssl.multiclass_mbo.T", "modulename": "graphlearning.ssl", "qualname": "multiclass_mbo.T", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.multiclass_mbo.dt": {"fullname": "graphlearning.ssl.multiclass_mbo.dt", "modulename": "graphlearning.ssl", "qualname": "multiclass_mbo.dt", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.multiclass_mbo.mu": {"fullname": "graphlearning.ssl.multiclass_mbo.mu", "modulename": "graphlearning.ssl", "qualname": "multiclass_mbo.mu", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.multiclass_mbo.num_eig": {"fullname": "graphlearning.ssl.multiclass_mbo.num_eig", "modulename": "graphlearning.ssl", "qualname": "multiclass_mbo.num_eig", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.multiclass_mbo.requires_eig": {"fullname": "graphlearning.ssl.multiclass_mbo.requires_eig", "modulename": "graphlearning.ssl", "qualname": "multiclass_mbo.requires_eig", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.multiclass_mbo.accuracy_filename": {"fullname": "graphlearning.ssl.multiclass_mbo.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "multiclass_mbo.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.multiclass_mbo.name": {"fullname": "graphlearning.ssl.multiclass_mbo.name", "modulename": "graphlearning.ssl", "qualname": "multiclass_mbo.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.modularity_mbo": {"fullname": "graphlearning.ssl.modularity_mbo", "modulename": "graphlearning.ssl", "qualname": "modularity_mbo", "kind": "class", "doc": "<p></p>\n", "bases": "ssl"}, "graphlearning.ssl.modularity_mbo.__init__": {"fullname": "graphlearning.ssl.modularity_mbo.__init__", "modulename": "graphlearning.ssl", "qualname": "modularity_mbo.__init__", "kind": "function", "doc": "<h1 id=\"modularity-mbo\">Modularity MBO</h1>\n\n<p>Semi-supervised learning via the Modularity MBO method [1].</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    Weight matrix representing the graph.\nclass_priors : numpy array (optional), default=None\n    Class priors (fraction of data belonging to each class). If provided, the predict function\n    will attempt to automatic balance the label predictions to predict the correct number of\n    nodes in each class.\ngamma : float (optional), default=0.5\n    Parameter in algorithm.\nepsilon : float (optional), default=1\n    Parameter in algorithm.\nlamb : float (optional), default=1\n    Parameter in algorithm.\nT : int (optional), default=20\n    Number of outer iterations.\nNs : int (optional), default=5\n    Number of inner iterations.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>[1] Z.M. Boyd, E. Bae, X.C. Tai, and A.L. Bertozzi. <a href=\"https://publications.ffi.no/nb/item/asset/dspace:4288/1619750.pdf\">Simplified energy landscape for modularity using total variation.</a> SIAM Journal on Applied Mathematics, 78(5), 2439-2464, 2018.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">W</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">gamma</span><span class=\"o\">=</span><span class=\"mf\">0.5</span>, </span><span class=\"param\"><span class=\"n\">epsilon</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">lamb</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"mi\">20</span>, </span><span class=\"param\"><span class=\"n\">Ns</span><span class=\"o\">=</span><span class=\"mi\">5</span></span>)</span>"}, "graphlearning.ssl.modularity_mbo.gamma": {"fullname": "graphlearning.ssl.modularity_mbo.gamma", "modulename": "graphlearning.ssl", "qualname": "modularity_mbo.gamma", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.modularity_mbo.epsilon": {"fullname": "graphlearning.ssl.modularity_mbo.epsilon", "modulename": "graphlearning.ssl", "qualname": "modularity_mbo.epsilon", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.modularity_mbo.lamb": {"fullname": "graphlearning.ssl.modularity_mbo.lamb", "modulename": "graphlearning.ssl", "qualname": "modularity_mbo.lamb", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.modularity_mbo.requires_eig": {"fullname": "graphlearning.ssl.modularity_mbo.requires_eig", "modulename": "graphlearning.ssl", "qualname": "modularity_mbo.requires_eig", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.modularity_mbo.T": {"fullname": "graphlearning.ssl.modularity_mbo.T", "modulename": "graphlearning.ssl", "qualname": "modularity_mbo.T", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.modularity_mbo.Ns": {"fullname": "graphlearning.ssl.modularity_mbo.Ns", "modulename": "graphlearning.ssl", "qualname": "modularity_mbo.Ns", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.modularity_mbo.accuracy_filename": {"fullname": "graphlearning.ssl.modularity_mbo.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "modularity_mbo.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.modularity_mbo.name": {"fullname": "graphlearning.ssl.modularity_mbo.name", "modulename": "graphlearning.ssl", "qualname": "modularity_mbo.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.laplace": {"fullname": "graphlearning.ssl.laplace", "modulename": "graphlearning.ssl", "qualname": "laplace", "kind": "class", "doc": "<p></p>\n", "bases": "ssl"}, "graphlearning.ssl.laplace.__init__": {"fullname": "graphlearning.ssl.laplace.__init__", "modulename": "graphlearning.ssl", "qualname": "laplace.__init__", "kind": "function", "doc": "<h1 id=\"laplace-learning\">Laplace Learning</h1>\n\n<p>Semi-supervised learning via the solution of the Laplace equation\n[\\tau u_j + L^m u_j = 0, \\ \\ j \\geq m+1,]\nsubject to (u_j = y_j) for (j=1,\\dots,m), where (L=D-W) is the \ncombinatorial graph Laplacian and (y_j) for (j=1,\\dots,m) are the \nlabel vectors. Default order is m=1, and m &gt; 1 corresponds to higher order Laplace Learning.</p>\n\n<p>The original method was introduced in [1]. This class also implements reweighting \nschemes <code>poisson</code> proposed in [2], <code>wnll</code> proposed in [3], and <code>properly</code>, proposed in [4].\nIf <code>properly</code> is selected, the user must additionally provide the data features <code>X</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    Weight matrix representing the graph.\nclass_priors : numpy array (optional), default=None\n    Class priors (fraction of data belonging to each class). If provided, the predict function\n    will attempt to automatic balance the label predictions to predict the correct number of\n    nodes in each class.\nX : numpy array (optional)\n    Data features, used to construct the graph. This is required for the <code>properly</code> weighted \n    graph Laplacian method.\nnormalization : {'combinatorial','randomwalk','normalized'} (optional), defualt='combinatorial'\n    Normalization for the graph Laplacian.\nreweighting : {'none', 'wnll', 'poisson', 'properly'} (optional), default='none'\n    Reweighting scheme for low label rate problems. If 'properly' is selected, the user\n    must supply the data features <code>X</code>.\ntau : float or numpy array (optional), default=0\n    Zeroth order term in Laplace equation. Can be a scalar or vector.\norder : integer (optional), default=1\n    Power m for higher order Laplace learning. Currently only integers are allowed. \nmean_shift : bool (optional), default=False\n    Whether to shift output to mean zero.\ntol : float (optional), default=1e-5\n    Tolerance for conjugate gradient solver.\nalpha : float (optional), default=2\n    Parameter for <code>properly</code> reweighting.\nzeta : float (optional), default=1e7\n    Parameter for <code>properly</code> reweighting.\nr : float (optional), default=0.1\n    Radius for <code>properly</code> reweighting.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>[1] X. Zhu, Z. Ghahramani, and J. D. Lafferty. <a href=\"https://www.aaai.org/Papers/ICML/2003/ICML03-118.pdf\">Semi-supervised learning using gaussian fields \nand harmonic functions.</a> Proceedings \nof the 20th International Conference on Machine Learning (ICML-03), 2003.</p>\n\n<p>[2] J. Calder, B. Cook, M. Thorpe, D. Slepcev. <a href=\"http://proceedings.mlr.press/v119/calder20a.html\">Poisson Learning: Graph Based Semi-Supervised\nLearning at Very Low Label Rates.</a>, \nProceedings of the 37th International Conference on Machine Learning, PMLR 119:1306-1316, 2020.</p>\n\n<p>[3] Z. Shi, S. Osher, and W. Zhu. <a href=\"https://idp.springer.com/authorize/casa?redirect_uri=https://link.springer.com/article/10.1007/s10915-017-0421-z&casa_token=33Z7gqJy3mMAAAAA:iMO0pGmpn_qf5PioVIGocSRq_p4CDm-KNOQhgIC1uvqG9pWlZ6t7I-IZtSJfocFDEHCdMpK8j7Fx1XbzDQ\">Weighted nonlocal laplacian on interpolation from sparse data.</a>\nJournal of Scientific Computing 73.2 (2017): 1164-1177.</p>\n\n<p>[4] J. Calder, D. Slep\u010dev. <a href=\"https://link.springer.com/article/10.1007/s00245-019-09637-3\">Properly-weighted graph Laplacian for semi-supervised learning.</a> Applied mathematics &amp; optimization (2019): 1-49.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">W</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">X</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reweighting</span><span class=\"o\">=</span><span class=\"s1\">&#39;none&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">normalization</span><span class=\"o\">=</span><span class=\"s1\">&#39;combinatorial&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tau</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">mean_shift</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">1e-05</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">zeta</span><span class=\"o\">=</span><span class=\"mf\">10000000.0</span>,</span><span class=\"param\">\t<span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mf\">0.1</span></span>)</span>"}, "graphlearning.ssl.laplace.reweighting": {"fullname": "graphlearning.ssl.laplace.reweighting", "modulename": "graphlearning.ssl", "qualname": "laplace.reweighting", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.laplace.normalization": {"fullname": "graphlearning.ssl.laplace.normalization", "modulename": "graphlearning.ssl", "qualname": "laplace.normalization", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.laplace.mean_shift": {"fullname": "graphlearning.ssl.laplace.mean_shift", "modulename": "graphlearning.ssl", "qualname": "laplace.mean_shift", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.laplace.tol": {"fullname": "graphlearning.ssl.laplace.tol", "modulename": "graphlearning.ssl", "qualname": "laplace.tol", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.laplace.order": {"fullname": "graphlearning.ssl.laplace.order", "modulename": "graphlearning.ssl", "qualname": "laplace.order", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.laplace.X": {"fullname": "graphlearning.ssl.laplace.X", "modulename": "graphlearning.ssl", "qualname": "laplace.X", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.laplace.name": {"fullname": "graphlearning.ssl.laplace.name", "modulename": "graphlearning.ssl", "qualname": "laplace.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.laplace.accuracy_filename": {"fullname": "graphlearning.ssl.laplace.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "laplace.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.dynamic_label_propagation": {"fullname": "graphlearning.ssl.dynamic_label_propagation", "modulename": "graphlearning.ssl", "qualname": "dynamic_label_propagation", "kind": "class", "doc": "<p></p>\n", "bases": "ssl"}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"fullname": "graphlearning.ssl.dynamic_label_propagation.__init__", "modulename": "graphlearning.ssl", "qualname": "dynamic_label_propagation.__init__", "kind": "function", "doc": "<h1 id=\"dynamic-label-propagation\">Dynamic Label Propagation</h1>\n\n<p>Semi-supervised learning via dynamic label propagation [1].</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    Weight matrix representing the graph.\nclass_priors : numpy array (optional), default=None\n    Class priors (fraction of data belonging to each class). If provided, the predict function\n    will attempt to automatic balance the label predictions to predict the correct number of\n    nodes in each class.\nalpha : float (optional), default=0.05\n    Value of parameter (\\alpha).\nlam : float (optional), default=0.1\n    Value of parameter (\\lambda).\nT : int (optional), default=2\n    Number of iterations.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>[1] B. Wang, Z. Tu, and J.K. Tsotsos. <a href=\"https://openaccess.thecvf.com/content_iccv_2013/html/Wang_Dynamic_Label_Propagation_2013_ICCV_paper.html\">Dynamic label propagation for semi-supervised multi-class multi-label classification.</a> Proceedings of the IEEE international conference on computer vision. 2013.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">W</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.05</span>, </span><span class=\"param\"><span class=\"n\">lam</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>, </span><span class=\"param\"><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"mi\">2</span></span>)</span>"}, "graphlearning.ssl.dynamic_label_propagation.alpha": {"fullname": "graphlearning.ssl.dynamic_label_propagation.alpha", "modulename": "graphlearning.ssl", "qualname": "dynamic_label_propagation.alpha", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.dynamic_label_propagation.lam": {"fullname": "graphlearning.ssl.dynamic_label_propagation.lam", "modulename": "graphlearning.ssl", "qualname": "dynamic_label_propagation.lam", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.dynamic_label_propagation.T": {"fullname": "graphlearning.ssl.dynamic_label_propagation.T", "modulename": "graphlearning.ssl", "qualname": "dynamic_label_propagation.T", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"fullname": "graphlearning.ssl.dynamic_label_propagation.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "dynamic_label_propagation.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.dynamic_label_propagation.name": {"fullname": "graphlearning.ssl.dynamic_label_propagation.name", "modulename": "graphlearning.ssl", "qualname": "dynamic_label_propagation.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.centered_kernel": {"fullname": "graphlearning.ssl.centered_kernel", "modulename": "graphlearning.ssl", "qualname": "centered_kernel", "kind": "class", "doc": "<p></p>\n", "bases": "ssl"}, "graphlearning.ssl.centered_kernel.__init__": {"fullname": "graphlearning.ssl.centered_kernel.__init__", "modulename": "graphlearning.ssl", "qualname": "centered_kernel.__init__", "kind": "function", "doc": "<h1 id=\"centered-kernel-method\">Centered Kernel Method</h1>\n\n<p>Semi-supervised learning via the centered kernel method of [1].</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    Weight matrix representing the graph.\nclass_priors : numpy array (optional), default=None\n    Class priors (fraction of data belonging to each class). If provided, the predict function\n    will attempt to automatic balance the label predictions to predict the correct number of\n    nodes in each class.\ntol : float (optional), default=1e-10\n    Tolerance to solve equation.\npower_it : int (optional), default=100\n    Number of power iterations to find largest eigenvalue.\nalpha : float (optional), default = 1.05\n    Value of (\\alpha) as a fraction of largest eigenvalue.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>[1] X. Mai and R. Couillet. <a href=\"https://romaincouillet.hebfree.org/docs/conf/SSL_ICML18.pdf\">Random matrix-inspired improved semi-supervised learning on graphs.</a> International Conference on Machine Learning. 2018.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">W</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">1e-10</span>, </span><span class=\"param\"><span class=\"n\">power_it</span><span class=\"o\">=</span><span class=\"mi\">100</span>, </span><span class=\"param\"><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">1.05</span></span>)</span>"}, "graphlearning.ssl.centered_kernel.tol": {"fullname": "graphlearning.ssl.centered_kernel.tol", "modulename": "graphlearning.ssl", "qualname": "centered_kernel.tol", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.centered_kernel.power_it": {"fullname": "graphlearning.ssl.centered_kernel.power_it", "modulename": "graphlearning.ssl", "qualname": "centered_kernel.power_it", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.centered_kernel.alpha": {"fullname": "graphlearning.ssl.centered_kernel.alpha", "modulename": "graphlearning.ssl", "qualname": "centered_kernel.alpha", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.centered_kernel.accuracy_filename": {"fullname": "graphlearning.ssl.centered_kernel.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "centered_kernel.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.centered_kernel.name": {"fullname": "graphlearning.ssl.centered_kernel.name", "modulename": "graphlearning.ssl", "qualname": "centered_kernel.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.sparse_label_propagation": {"fullname": "graphlearning.ssl.sparse_label_propagation", "modulename": "graphlearning.ssl", "qualname": "sparse_label_propagation", "kind": "class", "doc": "<p></p>\n", "bases": "ssl"}, "graphlearning.ssl.sparse_label_propagation.__init__": {"fullname": "graphlearning.ssl.sparse_label_propagation.__init__", "modulename": "graphlearning.ssl", "qualname": "sparse_label_propagation.__init__", "kind": "function", "doc": "<h1 id=\"sparse-label-propagation\">Sparse Label Propagation</h1>\n\n<p>Semi-supervised learning via the sparse label propagation method of [1].</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    Weight matrix representing the graph.\nclass_priors : numpy array (optional), default=None\n    Class priors (fraction of data belonging to each class). If provided, the predict function\n    will attempt to automatic balance the label predictions to predict the correct number of\n    nodes in each class.\nT : int (optional), default=100\n    Number of iterations</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>[1] A. Jung, A.O. Hero III, A. Mara, and S. Jahromi. <a href=\"https://arxiv.org/abs/1612.01414\">Semi-supervised learning via sparse label propagation.</a> arXiv:1612.01414, 2016.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">W</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"mi\">100</span></span>)</span>"}, "graphlearning.ssl.sparse_label_propagation.T": {"fullname": "graphlearning.ssl.sparse_label_propagation.T", "modulename": "graphlearning.ssl", "qualname": "sparse_label_propagation.T", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"fullname": "graphlearning.ssl.sparse_label_propagation.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "sparse_label_propagation.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.sparse_label_propagation.name": {"fullname": "graphlearning.ssl.sparse_label_propagation.name", "modulename": "graphlearning.ssl", "qualname": "sparse_label_propagation.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.graph_nearest_neighbor": {"fullname": "graphlearning.ssl.graph_nearest_neighbor", "modulename": "graphlearning.ssl", "qualname": "graph_nearest_neighbor", "kind": "class", "doc": "<p></p>\n", "bases": "ssl"}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"fullname": "graphlearning.ssl.graph_nearest_neighbor.__init__", "modulename": "graphlearning.ssl", "qualname": "graph_nearest_neighbor.__init__", "kind": "function", "doc": "<h1 id=\"graph-nearest-neighbor-classifier\">Graph nearest neighbor classifier</h1>\n\n<p>Semi-supervised learning by graph (geodesic) nearest neighbor classifier. The \ngraph geodesic distance is defined by\n[ d_{ij} = \\min_p \\sum_{k=1}^M w_{p_k,p_{k+1}},]\nwhere the minimum is over paths (p) connecting nodes (i) and (j). The label\nreturned for each testing point is the label of the closest labeled point.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    Weight matrix representing the graph.\nclass_priors : numpy array (optional), default=None\n    Class priors (fraction of data belonging to each class). If provided, the predict function\n    will attempt to automatic balance the label predictions to predict the correct number of\n    nodes in each class.\nD : numpy array or scipy sparse matrix (optional)\n    (n,n) Distance matrix, giving distances between neighbors. If provided,\n    this is used to construct a knn density estimator for reweighting the eikonal equation.\nalpha : float (optional), default=1\n    Reweighting exponent.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">W</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">D</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mi\">1</span></span>)</span>"}, "graphlearning.ssl.graph_nearest_neighbor.alpha": {"fullname": "graphlearning.ssl.graph_nearest_neighbor.alpha", "modulename": "graphlearning.ssl", "qualname": "graph_nearest_neighbor.alpha", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"fullname": "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "graph_nearest_neighbor.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.graph_nearest_neighbor.name": {"fullname": "graphlearning.ssl.graph_nearest_neighbor.name", "modulename": "graphlearning.ssl", "qualname": "graph_nearest_neighbor.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.amle": {"fullname": "graphlearning.ssl.amle", "modulename": "graphlearning.ssl", "qualname": "amle", "kind": "class", "doc": "<p></p>\n", "bases": "ssl"}, "graphlearning.ssl.amle.__init__": {"fullname": "graphlearning.ssl.amle.__init__", "modulename": "graphlearning.ssl", "qualname": "amle.__init__", "kind": "function", "doc": "<h1 id=\"amle-learning\">AMLE learning</h1>\n\n<p>Semi-supervised learning by the Absolutely Minimal Lipschitz Extension (AMLE). This is the same as\np-Laplace with (p=\\infty), except that AMLE has an option <code>weighted=False</code> that significantly \naccelerates the solver.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    (n,n) Weight matrix representing the graph.\nclass_priors : numpy array (optional), default=None\n    Class priors (fraction of data belonging to each class). If provided, the predict function\n    will attempt to automatic balance the label predictions to predict the correct number of\n    nodes in each class.\ntol : float (optional), default=1e-3\n    Tolerance with which to solve the equation.\nmax_num_it : int (optional), default=1e5\n    Maximum number of iterations\nweighted : bool (optional), default=False\n    When False, the graph is converted to a 0/1 adjacency matrix, which affords a much faster solver.\nprog : bool (optional), default=False\n    Whether to print progress information.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">W</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">max_num_it</span><span class=\"o\">=</span><span class=\"mf\">100000.0</span>,</span><span class=\"param\">\t<span class=\"n\">weighted</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">prog</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "graphlearning.ssl.amle.tol": {"fullname": "graphlearning.ssl.amle.tol", "modulename": "graphlearning.ssl", "qualname": "amle.tol", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.amle.max_num_it": {"fullname": "graphlearning.ssl.amle.max_num_it", "modulename": "graphlearning.ssl", "qualname": "amle.max_num_it", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.amle.weighted": {"fullname": "graphlearning.ssl.amle.weighted", "modulename": "graphlearning.ssl", "qualname": "amle.weighted", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.amle.prog": {"fullname": "graphlearning.ssl.amle.prog", "modulename": "graphlearning.ssl", "qualname": "amle.prog", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.amle.onevsrest": {"fullname": "graphlearning.ssl.amle.onevsrest", "modulename": "graphlearning.ssl", "qualname": "amle.onevsrest", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.amle.accuracy_filename": {"fullname": "graphlearning.ssl.amle.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "amle.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.amle.name": {"fullname": "graphlearning.ssl.amle.name", "modulename": "graphlearning.ssl", "qualname": "amle.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.peikonal": {"fullname": "graphlearning.ssl.peikonal", "modulename": "graphlearning.ssl", "qualname": "peikonal", "kind": "class", "doc": "<p></p>\n", "bases": "ssl"}, "graphlearning.ssl.peikonal.__init__": {"fullname": "graphlearning.ssl.peikonal.__init__", "modulename": "graphlearning.ssl", "qualname": "peikonal.__init__", "kind": "function", "doc": "<h1 id=\"graph-p-eikonal-classifier\">Graph p-eikonal classifier</h1>\n\n<p>Semi-supervised learning by via the solution of the graph <code>graph.peikonal</code> equation.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    (n,n) Weight matrix representing the graph.\nclass_priors : numpy array (optional), default=None\n    Class priors (fraction of data belonging to each class). If provided, the predict function\n    will attempt to automatic balance the label predictions to predict the correct number of\n    nodes in each class.\nD : numpy array or scipy sparse matrix (optional)\n    (n,n) Distance matrix, giving distances between neighbors. If provided,\n    this is used to construct a knn density estimator for reweighting the p-eikonal equation.\np : float (optional), default=1\n    Value of exponent p in the p-eikonal equation\nalpha : float (optional), default=1\n    Reweighting exponent.\nmax_num_it : int (optional), default=1e5\n    Maximum number of iterations.\ntol : float (optional), default=1e-3\n    Tolerance with which to solve the equation.\nnum_bisection_it : int (optional), default=30\n    Number of bisection iterations for solver.\neps_ball_graph : bool (optional), default=False\n    Whether the graph is an epsilon-ball graph or not. If it is, then the density reweighting\n    will be done with the degree vector, which is a kernel density estimator in this case</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">W</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">D</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">max_num_it</span><span class=\"o\">=</span><span class=\"mf\">100000.0</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">num_bisection_it</span><span class=\"o\">=</span><span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">eps_ball_graph</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "graphlearning.ssl.peikonal.p": {"fullname": "graphlearning.ssl.peikonal.p", "modulename": "graphlearning.ssl", "qualname": "peikonal.p", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.peikonal.alpha": {"fullname": "graphlearning.ssl.peikonal.alpha", "modulename": "graphlearning.ssl", "qualname": "peikonal.alpha", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.peikonal.max_num_it": {"fullname": "graphlearning.ssl.peikonal.max_num_it", "modulename": "graphlearning.ssl", "qualname": "peikonal.max_num_it", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.peikonal.tol": {"fullname": "graphlearning.ssl.peikonal.tol", "modulename": "graphlearning.ssl", "qualname": "peikonal.tol", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.peikonal.num_bisection_it": {"fullname": "graphlearning.ssl.peikonal.num_bisection_it", "modulename": "graphlearning.ssl", "qualname": "peikonal.num_bisection_it", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.peikonal.onevsrest": {"fullname": "graphlearning.ssl.peikonal.onevsrest", "modulename": "graphlearning.ssl", "qualname": "peikonal.onevsrest", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.peikonal.similarity": {"fullname": "graphlearning.ssl.peikonal.similarity", "modulename": "graphlearning.ssl", "qualname": "peikonal.similarity", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.peikonal.accuracy_filename": {"fullname": "graphlearning.ssl.peikonal.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "peikonal.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.peikonal.name": {"fullname": "graphlearning.ssl.peikonal.name", "modulename": "graphlearning.ssl", "qualname": "peikonal.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.plaplace": {"fullname": "graphlearning.ssl.plaplace", "modulename": "graphlearning.ssl", "qualname": "plaplace", "kind": "class", "doc": "<p></p>\n", "bases": "ssl"}, "graphlearning.ssl.plaplace.__init__": {"fullname": "graphlearning.ssl.plaplace.__init__", "modulename": "graphlearning.ssl", "qualname": "plaplace.__init__", "kind": "function", "doc": "<h1 id=\"graph-p-laplace-classifier\">Graph p-laplace classifier</h1>\n\n<p>Semi-supervised learning by via the solution of the game-theoretic p-Laplace equation [1].</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    (n,n) Weight matrix representing the graph.\nclass_priors : numpy array (optional), default=None\n    Class priors (fraction of data belonging to each class). If provided, the predict function\n    will attempt to automatic balance the label predictions to predict the correct number of\n    nodes in each class.\np : float (optional), default=10\n    Value of p in the p-Laplace equation (( 2 \\leq p \\leq \\infty).\nmax_num_it : int (optional), default=1e5\n    Maximum number of iterations\ntol : float (optional), default=1e-3\n    Tolerance with which to solve the equation.\nfast : bool (optional), default=True\n    Whether to use constant (w_{ij}=1) weights for the infinity-Laplacian\n    which allows a faster algorithm to be used.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>[1] M. Flores Rios, J. Calder, and G. Lerman. <a href=\"https://arxiv.org/abs/1901.05031\">Algorithms for ( \\ell_p)-based semi-supervised learning on graphs.</a> arXiv:1901.05031, 2019.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">W</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">max_num_it</span><span class=\"o\">=</span><span class=\"mf\">1000000.0</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">fast</span><span class=\"o\">=</span><span class=\"kc\">True</span></span>)</span>"}, "graphlearning.ssl.plaplace.p": {"fullname": "graphlearning.ssl.plaplace.p", "modulename": "graphlearning.ssl", "qualname": "plaplace.p", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.plaplace.max_num_it": {"fullname": "graphlearning.ssl.plaplace.max_num_it", "modulename": "graphlearning.ssl", "qualname": "plaplace.max_num_it", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.plaplace.tol": {"fullname": "graphlearning.ssl.plaplace.tol", "modulename": "graphlearning.ssl", "qualname": "plaplace.tol", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.plaplace.onevsrest": {"fullname": "graphlearning.ssl.plaplace.onevsrest", "modulename": "graphlearning.ssl", "qualname": "plaplace.onevsrest", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.plaplace.fast": {"fullname": "graphlearning.ssl.plaplace.fast", "modulename": "graphlearning.ssl", "qualname": "plaplace.fast", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.plaplace.accuracy_filename": {"fullname": "graphlearning.ssl.plaplace.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "plaplace.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.plaplace.name": {"fullname": "graphlearning.ssl.plaplace.name", "modulename": "graphlearning.ssl", "qualname": "plaplace.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.randomwalk": {"fullname": "graphlearning.ssl.randomwalk", "modulename": "graphlearning.ssl", "qualname": "randomwalk", "kind": "class", "doc": "<p></p>\n", "bases": "ssl"}, "graphlearning.ssl.randomwalk.__init__": {"fullname": "graphlearning.ssl.randomwalk.__init__", "modulename": "graphlearning.ssl", "qualname": "randomwalk.__init__", "kind": "function", "doc": "<h1 id=\"lazy-random-walk-classification\">Lazy random walk classification</h1>\n\n<p>Add description.</p>\n\n<p>The original method was introduced in [1], and can be interpreted as a lazy random walk. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>W : numpy array, scipy sparse matrix, or graphlearning graph object (optional), default=None\n    Weight matrix representing the graph.\nclass_priors : numpy array (optional), default=None\n    Class priors (fraction of data belonging to each class). If provided, the predict function\n    will attempt to automatic balance the label predictions to predict the correct number of\n    nodes in each class.\nalpha : float (optional), default=0.95\n    Parameter in model.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>[1] D. Zhou and B. Sch\u00f6lkopf. <a href=\"https://link.springer.com/chapter/10.1007/978-3-540-28649-3_29\">Learning from labeled and unlabeled data using random walks.</a> Joint Pattern Recognition Symposium. \nSpringer, Berlin, Heidelberg, 2004.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">W</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">class_priors</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.95</span></span>)</span>"}, "graphlearning.ssl.randomwalk.alpha": {"fullname": "graphlearning.ssl.randomwalk.alpha", "modulename": "graphlearning.ssl", "qualname": "randomwalk.alpha", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.randomwalk.accuracy_filename": {"fullname": "graphlearning.ssl.randomwalk.accuracy_filename", "modulename": "graphlearning.ssl", "qualname": "randomwalk.accuracy_filename", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.randomwalk.name": {"fullname": "graphlearning.ssl.randomwalk.name", "modulename": "graphlearning.ssl", "qualname": "randomwalk.name", "kind": "variable", "doc": "<p></p>\n"}, "graphlearning.ssl.ssl_accuracy": {"fullname": "graphlearning.ssl.ssl_accuracy", "modulename": "graphlearning.ssl", "qualname": "ssl_accuracy", "kind": "function", "doc": "<h1 id=\"ssl-accuacy\">SSL Accuacy</h1>\n\n<p>Accuracy for semi-supervised graph learning, taking care to remove training set.\nNOTE: Any true labels with negative values will be removed from \naccuracy computation.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>pred_labels : numpy array, int\n    Predicted labels\ntrue_labels : numpy array, int\n    True labels\ntrain_ind : numpy array, int \n    Indices of training points, which will be removed from the accuracy computation.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>accuracy : float\n    Accuracy as a number in [0,100].</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pred_labels</span>, </span><span class=\"param\"><span class=\"n\">true_labels</span>, </span><span class=\"param\"><span class=\"n\">train_ind</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.ssl.accuracy_plot": {"fullname": "graphlearning.ssl.accuracy_plot", "modulename": "graphlearning.ssl", "qualname": "accuracy_plot", "kind": "function", "doc": "<h1 id=\"accuracy-plot\">Accuracy Plot</h1>\n\n<p>Creates a plot of accuracy scores for experiments run with <code>ssl_trials</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>model_list : list of ssl objects\n    Models to include in table.\ntag : str (optional), default=''\n    An extra identifying tag to add to the accuracy filename.\ntesterror : bool (optional), default=False\n    Show test error (instead of accuracy) in the table.\nsavefile : str (optional), default=None\n    If a savefile name is provided, then the plot is saved instead of displayed to the screen\ntitle : str (optional), default=None\n    If title is provided, then it will be added to the plot.\nerrorbars : bool (optional), default=False\n    Whether to add error bars to plot.\nloglog : bool (optional), default=False\n    Make the plot on a loglog scale.\nylim : tuple (optional), default=None\n    If provided, then y-limits are set with <code>plt.ylim(ylim)</code>\nfontsize : int (optional), default=16\n    Font size text, other than legend and labels\nlegend_fontsize : int (optional), default=16\n    Font size for legend.\nlabel_fontsize : int (optional), default=16\n    Font size for x and y labels.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_list</span>,</span><span class=\"param\">\t<span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">testerror</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">savefile</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">errorbars</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">loglog</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">ylim</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">16</span>,</span><span class=\"param\">\t<span class=\"n\">legend_fontsize</span><span class=\"o\">=</span><span class=\"mi\">16</span>,</span><span class=\"param\">\t<span class=\"n\">label_fontsize</span><span class=\"o\">=</span><span class=\"mi\">16</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.ssl.accuracy_table": {"fullname": "graphlearning.ssl.accuracy_table", "modulename": "graphlearning.ssl", "qualname": "accuracy_table", "kind": "function", "doc": "<h1 id=\"accuracy-table\">Accuracy table</h1>\n\n<p>Creates a table of accuracy scores for experiments run with <code>ssl_trials</code> to be\nincluded in a LaTeX document.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>model_list : list of ssl objects\n    Models to include in table.\ntag : str (optional), default=''\n    An extra identifying tag to add to the accuracy filename.\ntesterror : bool (optional), default=False\n    Show test error (instead of accuracy) in the table.\nsavefile : str (optional), default='table.tex'\n    Filename to save tex code for table.\ntitle : str (optional), default=''\n    Title for table.\nappend : bool (optional), default=False\n    Whether to create a new tex file or append table to existing file.\nfontsize : str (optional), default='small'\n    LaTeX font size.\nsmall_caps : bool (optional), default=True\n    Whether to use small caps in LaTeX for table.\ntwo_column : bool (optional), default=True\n    Whether the table will be in a two-column LaTeX document.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_list</span>,</span><span class=\"param\">\t<span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">testerror</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">savefile</span><span class=\"o\">=</span><span class=\"s1\">&#39;table.tex&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">append</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"s1\">&#39;small&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">small_caps</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">two_column</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.trainsets": {"fullname": "graphlearning.trainsets", "modulename": "graphlearning.trainsets", "kind": "module", "doc": "<h1 id=\"trainsets\">Trainsets</h1>\n\n<p>This module allows for generating training sets randomly for graph-based semi-supervised learning. \nIt also allows for loading of pre-saved training sets, and to create and save training sets for future use\nand reproducibility of experiments.</p>\n"}, "graphlearning.trainsets.trainset_dir": {"fullname": "graphlearning.trainsets.trainset_dir", "modulename": "graphlearning.trainsets", "qualname": "trainset_dir", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/jwcalder/Dropbox/Work/Code/GraphLearning/trainsets&#x27;"}, "graphlearning.trainsets.load": {"fullname": "graphlearning.trainsets.load", "modulename": "graphlearning.trainsets", "qualname": "load", "kind": "function", "doc": "<h1 id=\"load-training-sets\">Load training sets</h1>\n\n<p>Add a new dataset to graph learning by saving the data and labels.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>dataset : string\n    Name of dataset.\ntrainset_name : string (optional), default=''\n    A modifier to uniquely identify different training sets for each dataset.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dataset</span>, </span><span class=\"param\"><span class=\"n\">trainset_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.trainsets.generate": {"fullname": "graphlearning.trainsets.generate", "modulename": "graphlearning.trainsets", "qualname": "generate", "kind": "function", "doc": "<h1 id=\"generate-training-sets\">Generate training sets</h1>\n\n<p>Generates training sets at different labeling rates over multiple trials,\nincluding features to store the training set indices to file for reproducibility.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>labels : numpy array, int\n    Labels for the dataset as nonnegative integers. \nrate : int, float, or numpy array\n    Controls the number of labels per class. Functionality depends on the data type.</p>\n\n<pre><code>1. A single integer is interpreted as the number of labels per class.\n2. A single float in the range [0,1] is interpreted as the fraction of training data.\n3. A numpy array of size (m,C) indicating different label rates, as int or float, for \n   m different subtrials. If C=1, then the rate is extended to all classes, while if C=num classes,\n   then the rates are interpreted on a per-class basis.\n</code></pre>\n\n<p>num_trials : int (optional), default=1\n    Number of training sets to generate.\nmask : numpy array (optional), bool, default=None\n    If provided, then the generated training set will be selected only from points where mask=True.\ndataset : string (optional), default=None\n    Name of dataset. If provided, the generated training set is saved to a file\n    so it can be loaded later for reproducibility.\ntrainset_name : string (optional), default=''\n    A modifier to uniquely identify different training sets for each dataset.\noverwrite : bool (optional), default=False\n    Whether to overwrite an exisiting training set file.\nseed : int (optional), default=None\n    Option to seed the random number generator.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>trainset : numpy array or list of numpy arrays\n    If m=1 and num_trials=1 then a numpy array with indices of training points is returned. \n    Otherwise, a list of numpy arrays are returned, one for each trial.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">labels</span>,</span><span class=\"param\">\t<span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">num_trials</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">trainset_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils": {"fullname": "graphlearning.utils", "modulename": "graphlearning.utils", "kind": "module", "doc": "<h1 id=\"utilities\">Utilities</h1>\n\n<p>This module implements several useful functions that are used throughout the package.</p>\n"}, "graphlearning.utils.boundary_statistic": {"fullname": "graphlearning.utils.boundary_statistic", "modulename": "graphlearning.utils", "qualname": "boundary_statistic", "kind": "function", "doc": "<h1 id=\"boundary-test-statistic\">Boundary test statistic</h1>\n\n<p>Computes the boundary test statistics from [1] for identifying the boundary of a point cloud.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : (n,d) numpy array (float)\n    Point cloud in dimension d.\nr : float or int,\n    Radius for test (or numgber of neighbors if knn=True)\nknn : bool (optional), default=False\n    Whether to ues the k-nearest neighbor version of the test, or the radius search version.\nreturn_normals : bool (optional), default=False\n    Wehther to return estimated normal vectors as well.\nsecond_order : bool (optional), default=True\n    Whether to use the second order version of the test.\ncutoff : bool (optional), default=True\n    Whether to use the cutoff for the second order test.\nknn_data : tuple (optional), default=None\n    Output of <code>weightmatrix.knnsearch</code>, which can be provided to accelerate the computation.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>T : numpy array\n    Test statistic as a length n numpy array.\nnu : (n,d) numpy array\n    Estimated normals, if <code>return_normals=True</code>.</p>\n\n<h2 id=\"references\">References</h2>\n\n<p>[1] J. Calder, S. Park, and D. Slep\u010dev. <a href=\"https://arxiv.org/abs/2111.03217\">Boundary Estimation from Point Clouds: Algorithms, Guarantees and Applications.</a> arXiv:2111.03217, 2021.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">r</span>,</span><span class=\"param\">\t<span class=\"n\">knn</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">return_normals</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">second_order</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">cutoff</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">knn_data</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.class_priors": {"fullname": "graphlearning.utils.class_priors", "modulename": "graphlearning.utils", "qualname": "class_priors", "kind": "function", "doc": "<h1 id=\"class-priors\">Class priors</h1>\n\n<p>Computes class priors (fraction of data in each class). Ignores labels that are negative.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>labels : numpy array (int)\n    Labels as integers (0,1,\\dots,k-1), where (k) is the number of classes.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>class_priors : numpy array \n    Fraction of data in each class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">labels</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.csvread": {"fullname": "graphlearning.utils.csvread", "modulename": "graphlearning.utils", "qualname": "csvread", "kind": "function", "doc": "<h1 id=\"csv-read\">CSV Read</h1>\n\n<p>Reads numerical data from a csv file.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>filename : String\n    Name of csv file</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>X : numpy array \n    Contents of csv file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.numpy_load": {"fullname": "graphlearning.utils.numpy_load", "modulename": "graphlearning.utils", "qualname": "numpy_load", "kind": "function", "doc": "<h1 id=\"load-an-array-from-a-numpy-file\">Load an array from a numpy file</h1>\n\n<p>Loads a numpy .npz file and returns a specific field.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>file : string\n    Namename of .npz file\nfield : string\n    Name of field to load</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file</span>, </span><span class=\"param\"><span class=\"n\">field</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.download_file": {"fullname": "graphlearning.utils.download_file", "modulename": "graphlearning.utils", "qualname": "download_file", "kind": "function", "doc": "<h1 id=\"download-a-file-from-a-url\">Download a file from a url</h1>\n\n<p>Attemps to download from a url. </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>url : string \n    Web address of file to download.\nfile : string\n    Name of file to download to.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span>, </span><span class=\"param\"><span class=\"n\">file</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.sparse_max": {"fullname": "graphlearning.utils.sparse_max", "modulename": "graphlearning.utils", "qualname": "sparse_max", "kind": "function", "doc": "<h1 id=\"max-of-two-sparse-matrices\">Max of two sparse matrices</h1>\n\n<p>Computes the elementwise max of two sparse matrices.\nMatrices should both be nonegative and square.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>A : (n,n) scipy sparse matrix\n    First matrix.\nB : (n,n) scipy sparse matrix\n    Second matrix.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>C : (n,n) scipy sparse matrix\n    Sparse max of A and B</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">A</span>, </span><span class=\"param\"><span class=\"n\">B</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.torch_sparse": {"fullname": "graphlearning.utils.torch_sparse", "modulename": "graphlearning.utils", "qualname": "torch_sparse", "kind": "function", "doc": "<h1 id=\"torch-sparse-matrix-from-scipy-sparse\">Torch sparse matrix, from scipy sparse</h1>\n\n<p>Converts a scipy sparse matrix into a torch sparse matrix.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>A : (n,n) scipy sparse matrix\n    Matrix to convert to torch sparse</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>A_torch : (n,n) torch.sparse.FloatTensor\n    Sparse matrix in torch form.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">A</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.constrained_solve": {"fullname": "graphlearning.utils.constrained_solve", "modulename": "graphlearning.utils", "qualname": "constrained_solve", "kind": "function", "doc": "<h1 id=\"constrained-solve\">Constrained Solve</h1>\n\n<p>Uses preconditioned <a href=\"https://en.wikipedia.org/wiki/Conjugate_gradient_method\">Conjugate Gradient Method</a> \nto solve the equation (Lx=f) subject to (x=g) on a contraint set. (L) must be positive\ndefinite and symmetric.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>L : (n,n) numpy array or scipy sparse matrix\n    Left hand side of linear equation.\nI : numpy array (bool or int)\n    Indices of contraint set.\ng : numpy array (float)\n    Constrained values\nf : numpy array (optional), default=None\n    Right hand side of linear equation. Default is interpreted as (f=0).\nx0 : numpy array (optional), default=None\n    Initial condition. Default is zero.\ntol : float (optional), default = 1e-10\n    Tolerance for the conjugate gradient method.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>x : numpy array\n    Solution of linear equation with constraints.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">L</span>, </span><span class=\"param\"><span class=\"n\">I</span>, </span><span class=\"param\"><span class=\"n\">g</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">x0</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">1e-10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.dirichlet_eigenvectors": {"fullname": "graphlearning.utils.dirichlet_eigenvectors", "modulename": "graphlearning.utils", "qualname": "dirichlet_eigenvectors", "kind": "function", "doc": "<h1 id=\"dirichlet-eigenvectors\">Dirichlet eigenvectors</h1>\n\n<p>Finds the smallest magnitude Dirichlet eigenvectors/eigenvalues of a symmetric matrix (L), which satisfy \n(x_i=0) for (i\\in \\Gamma) and (Lx_i=\\lambda x_i) for (i\\not\\in \\Gamma).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>L : (n,n) numpy array or scipy sparse matrix\n    Matrix to compute eigenvectors of.\nind : numpy array (bool or int)\n    Indices or boolean mask indicating contraint set (\\Gamma).\nk : int \n    Number of eigenvectors to find.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>vals : numpy array\n    Eigenvalues in increasing order.\nvecs : numpy array\n    Corresponding eigenvectors as columns.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">L</span>, </span><span class=\"param\"><span class=\"n\">ind</span>, </span><span class=\"param\"><span class=\"n\">k</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.constrained_solve_gmres": {"fullname": "graphlearning.utils.constrained_solve_gmres", "modulename": "graphlearning.utils", "qualname": "constrained_solve_gmres", "kind": "function", "doc": "<h1 id=\"constrained-gmres-solve\">Constrained GMRES Solve</h1>\n\n<p>Uses preconditioned <a href=\"https://en.wikipedia.org/wiki/Generalized_minimal_residual_method\">GMRES</a> to solve\nthe equation (Lx=f) subject to (Rx=g) on a contraint set.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>L : (n,n) numpy array or scipy sparse matrix\n    Left hand side of linear equation.\nf : (n,1) numpy array\n    Right hand side of linear equation.\nR : (n,n) numpy array or scipy sparse matrix\n    Constraint matrix.\ng : numpy array\n    Length n numpy array for boundary constriants.\nind : numpy array (bool or int)\n    Indices or boolean mask indicating contraint set.\ntol : float (optional), default = 1e-5\n    Tolerance for GMRES.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>x : numpy array\n    Solution of linear equation with constraints.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">L</span>, </span><span class=\"param\"><span class=\"n\">f</span>, </span><span class=\"param\"><span class=\"n\">R</span>, </span><span class=\"param\"><span class=\"n\">g</span>, </span><span class=\"param\"><span class=\"n\">ind</span>, </span><span class=\"param\"><span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">1e-05</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.conjgrad": {"fullname": "graphlearning.utils.conjgrad", "modulename": "graphlearning.utils", "qualname": "conjgrad", "kind": "function", "doc": "<h1 id=\"conjugate-gradient-method\">Conjugate Gradient Method</h1>\n\n<p>Conjugate gradient method in matrix form for solving\n[ Ax = b]\nwhere (A) is (n\\times n), and (x) and (b) are (n\\times m).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>A : (n,n) numpy array or matrix or scipy sparse matrix\n    Left hand side matrix.\nb : (n,m) numpy array\n    Right hand side matrix.\nx : (n,m) numpy array, optional\n    Initial guess.\nmax_iter : int (optional), default = 1e5\n    Maximum number of iterations.\ntol : float (optional), default = 1e-10\n    Tolerance for stopping.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>x : (n,m) numpy array\n    Solution of (Ax=b) with the conjugate gradient method.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">A</span>, </span><span class=\"param\"><span class=\"n\">b</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mf\">100000.0</span>, </span><span class=\"param\"><span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">1e-10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.labels_to_onehot": {"fullname": "graphlearning.utils.labels_to_onehot", "modulename": "graphlearning.utils", "qualname": "labels_to_onehot", "kind": "function", "doc": "<h1 id=\"onehot-labels\">Onehot labels</h1>\n\n<p>Converts numerical labels to one hot vectors.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>labels : numpy array, int\n    Labels as integers.\nstandardize : bool (optional), default=False\n    Whether to map labels to 0,1,...,k-1 first, before encoding.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>onehot_labels : (n,k) numpy array, float\n    One hot representation of labels.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">labels</span>, </span><span class=\"param\"><span class=\"n\">standardize</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.randomized_svd": {"fullname": "graphlearning.utils.randomized_svd", "modulename": "graphlearning.utils", "qualname": "randomized_svd", "kind": "function", "doc": "<h1 id=\"randomized-svd\">Randomized SVD</h1>\n\n<p>Approximates top k singular values and vectors of A with a randomized\nSVD algorithm.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>A : numpy array or matrix, scipy sparse matrix, or sparse linear operator\n    Matrix to compute SVD of.\nk : int (optional), default=10\n    Number of eigenvectors to compute.\nq : int (optional), default=1\n    Exponent to use in randomized svd.\nc : int (optional), default=2*k\n    Cutoff for randomized SVD.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>u : (n,k) numpy array, float \n    Unitary matrix having left singular vectors as columns. \ns : numpy array, float\n    The singular values.\nvt : (k,n) numpy array, float\n    Unitary matrix having right singular vectors as rows.</p>\n\n<h2 id=\"reference\">Reference</h2>\n\n<p>Halko, Nathan, Per-Gunnar Martinsson, and Joel A. Tropp. <a href=\"https://arxiv.org/abs/0909.4061\">Finding structure \nwith randomness: Probabilistic algorithms for constructing approximate matrix \ndecompositions.</a> SIAM review 53.2 (2011): 217-288.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">A</span>, </span><span class=\"param\"><span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">10</span>, </span><span class=\"param\"><span class=\"n\">c</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.rand_annulus": {"fullname": "graphlearning.utils.rand_annulus", "modulename": "graphlearning.utils", "qualname": "rand_annulus", "kind": "function", "doc": "<h1 id=\"random-points-in-annulus\">Random points in annulus</h1>\n\n<p>Generates independent and uniformly distributed random variables in the annulus\n(B_{r_2} \\setminus B_{r_1}).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>n : int \n    Number of points.\nd : int\n    Dimension.\nr1 : float\n    Inner radius.\nr2 : float\n    Outer radius</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>X : (n,d) numpy array\n    Random points in annulus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span>, </span><span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"n\">r1</span>, </span><span class=\"param\"><span class=\"n\">r2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.rand_ball": {"fullname": "graphlearning.utils.rand_ball", "modulename": "graphlearning.utils", "qualname": "rand_ball", "kind": "function", "doc": "<h1 id=\"random-points-in-a-ball\">Random points in a ball</h1>\n\n<p>Generates independent and uniformly distributed random variables in the unit ball.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>n : int \n    Number of points.\nd : int\n    Dimension.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>X : (n,d) numpy array\n    Random points in unit ball.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span>, </span><span class=\"param\"><span class=\"n\">d</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.bean_data": {"fullname": "graphlearning.utils.bean_data", "modulename": "graphlearning.utils", "qualname": "bean_data", "kind": "function", "doc": "<h1 id=\"random-bean-data\">Random bean data</h1>\n\n<p>Generates independent and uniformly distributed random variables in a bean shaped domain\nin two dimensions.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>n : int \n    Number of points.\nh : float\n    Height of bridge between the two sides of the bean.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>X : (n,2) numpy array\n    Random points in the bean.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span>, </span><span class=\"param\"><span class=\"n\">h</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.mesh": {"fullname": "graphlearning.utils.mesh", "modulename": "graphlearning.utils", "qualname": "mesh", "kind": "function", "doc": "<h1 id=\"mesh\">Mesh</h1>\n\n<p>Creates a Delaunay triangulation of a 2D point cloud. Useful for visualizations.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : (n,d) numpy array\n    Numpy array of (n) points in dimension (d). If (d\\geq 3), only\n    first 2 coordintes are used.\nboundary_improvement : bool (optional), default=False\n    Whether to use improved meshing near the boundary to ensure there are no \n    boundary triangles with very large side lengths.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>T : (n,3) numpy array\n    Triangulation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">boundary_improvement</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.image_grid": {"fullname": "graphlearning.utils.image_grid", "modulename": "graphlearning.utils", "qualname": "image_grid", "kind": "function", "doc": "<h1 id=\"image-grid\">Image Grid</h1>\n\n<p>Displays (or returns) a grid of images.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : numpy array\n    (n,m) numpy array of n grayscale images, flattened to length m arrays.\n    Alternatively, X can have shape (n_rows, n_cols, m), in which case the\n    parameters n_rows and n_cols below are overridden.\nn_rows : int (optional), default=10\n    Number of rows in image grid.\nn_cols : int (optional), default=10\n    Number of columns in image grid.\npadding : int (optional), default=2\n    Amount of padding between images in the grid.\ntitle : str (optional), default=None\n    Optional title to add to image.\nnormalize : bool (optional), default=False\n    Whether to normalie pixel intensities for viewing.\nfontsize : int (optional), default=None\n    Font size for title, if provided. None uses the default in matplotlib.\ntranspose : bool (optional), default=False\n    Whether to transpose the images or not.\nreturn_image : bool (optional), default=False\n    Whether to return the image or display it to a matplotlib window.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>I : numpy array\n    Image grid as a grayscale image (if `return_image=True).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">n_rows</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">n_cols</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">transpose</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">return_image</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.color_image_grid": {"fullname": "graphlearning.utils.color_image_grid", "modulename": "graphlearning.utils", "qualname": "color_image_grid", "kind": "function", "doc": "<h1 id=\"color-image-grid\">Color Image Grid</h1>\n\n<p>Displays (or returns) a color grid of images.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : numpy array\n    (n,m) numpy array of n color images in (RRRGGGBBB) format, flattened to length m arrays.\n    Alternatively, X can have shape (n_rows, n_cols, m), in which case the\n    parameters n_rows and n_cols below are overridden.\nn_rows : int (optional), default=10\n    Number of rows in image grid.\nn_cols : int (optional), default=10\n    Number of columns in image grid.\npadding : int (optional), default=2\n    Amount of padding between images in the grid.\ntitle : str (optional), default=None\n    Optional title to add to image.\nnormalize : bool (optional), default=False\n    Whether to normalie pixel intensities for viewing.\nfontsize : int (optional), default=None\n    Font size for title, if provided. None uses the default in matplotlib.\ntranspose : bool (optional), default=False\n    Whether to transpose the images or not.\nreturn_image : bool (optional), default=False\n    Whether to return the image or display it to a matplotlib window.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>I : numpy array\n    Image grid as a color image (if `return_image=True).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">n_rows</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">n_cols</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">transpose</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">return_image</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.image_to_patches": {"fullname": "graphlearning.utils.image_to_patches", "modulename": "graphlearning.utils", "qualname": "image_to_patches", "kind": "function", "doc": "<h1 id=\"image-to-patches\">Image to Patches</h1>\n\n<p>Converts an image into an array of patches.\nSupports color or grayscale images.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>I : numpy array\n    Image to convert into patches\npatch_size : tuple (optional)\n    Size of patches to use</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>P : numpy array\n    Numpy array of size (num_patches,num_pixels_per_patch).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">I</span>, </span><span class=\"param\"><span class=\"n\">patch_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.utils.patches_to_image": {"fullname": "graphlearning.utils.patches_to_image", "modulename": "graphlearning.utils", "qualname": "patches_to_image", "kind": "function", "doc": "<h1 id=\"patches-to-image\">Patches to image</h1>\n\n<p>Converts an array of patches back into an image.\nSupports color or grayscale images.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>patches : numpy array\n    Array containing patches along the rows.\nimage_shape : tuple \n    Shape of output image.\npatch_size : tuple (optional)\n    Size of patches.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>I : numpy array\n    Numpy array of reconstructed image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">patches</span>, </span><span class=\"param\"><span class=\"n\">image_shape</span>, </span><span class=\"param\"><span class=\"n\">patch_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.weightmatrix": {"fullname": "graphlearning.weightmatrix", "modulename": "graphlearning.weightmatrix", "kind": "module", "doc": "<h1 id=\"weight-matrices\">Weight Matrices</h1>\n\n<p>This module implements functions that are useful for constructing sparse weight matrices, including \nefficient high dimensional nearest neighbor searches.</p>\n"}, "graphlearning.weightmatrix.knn_dir": {"fullname": "graphlearning.weightmatrix.knn_dir", "modulename": "graphlearning.weightmatrix", "qualname": "knn_dir", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/jwcalder/Dropbox/Work/Code/GraphLearning/knn_data&#x27;"}, "graphlearning.weightmatrix.knn": {"fullname": "graphlearning.weightmatrix.knn", "modulename": "graphlearning.weightmatrix", "qualname": "knn", "kind": "function", "doc": "<h1 id=\"knn-weight-matrix\">knn weight matrix</h1>\n\n<p>General function for constructing knn weight matrices.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data : (n,m) numpy array, or string \n    If numpy array, n data points, each of dimension m, if string, then 'mnist', 'fashionmnist', or 'cifar'\nk : int\n    Number of nearest neighbors to use.\nkernel : string (optional), {'uniform','gaussian','symgaussian','singular','distance'}, default='gaussian'\n    The choice of kernel in computing the weights between (x_i) and each of its k \n    nearest neighbors. We let (d_k(x_i)) denote the distance from (x_i) to its kth \n    nearest neighbor. The choice 'uniform' corresponds to (w_{i,j}=1) and constitutes\n    an unweighted k nearest neighbor graph, 'gaussian' corresponds to\n    [ w_{i,j} = \\exp\\left(\\frac{-4\\|x_i - x_j\\|^2}{d_k(x_i)^2} \\right), ]\n    'symgaussian' corresponds to\n    [ w_{i,j} = \\exp\\left(\\frac{-4\\|x_i - x_j\\|^2}{d_k(x_i)d_k(x_j)} \\right), ]\n    'distance' corresponds to\n    [ w_{i,j} = \\|x_i - x_j\\|, ]\n    and 'singular' corresponds to \n    [ w_{i,j} = \\frac{1}{\\|x_i - x_j\\|}, ]\n    when (i\\neq j) and (w_{i,i}=1).\neta : python function handle (optional)\n    If provided, this overrides the kernel option and instead uses the weights\n    [ w_{i,j} = \\eta\\left(\\frac{\\|x_i - x_j\\|^2}{d_k(x_i)^2} \\right), ]\n    where (d_k(x_i)) is the distance from (x_i) to its kth nearest neighbor.\nsymmetrize : bool (optional), default=True, except when kernel='singular'\n    Whether or not to symmetrize the weight matrix before returning. Symmetrization is \n    performed by returning ( (W + W^T)/2 ), except for when kernel='distance, in \n    which case the symmetrized edge weights are the true distances, kernel='uniform', \n    where the weights are all 0/1, or kernel='symgaussian', where the same formula \n    is used for symmetry. Default for symmetrization is True, unless the kernel is\n    'singular', in which case it is False.\nmetric : string (optional), default='raw'\n    Metric identifier if data is a string (i.e., a dataset).\nsimilarity : {'euclidean','angular','manhattan','hamming','dot'} (optional), default='euclidean'\n    Smilarity for nearest neighbor search.\nknn_data : tuple (optional), default=None\n    If desired, the user can provide knn_data = (knn_ind, knn_dist), the output of a knnsearch,\n    in order to bypass the knnsearch step, which can be slow for large datasets.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>W : (n,n) scipy sparse matrix, float \n    Sparse weight matrix.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span>,</span><span class=\"param\">\t<span class=\"n\">k</span>,</span><span class=\"param\">\t<span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"s1\">&#39;gaussian&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">symmetrize</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;raw&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">similarity</span><span class=\"o\">=</span><span class=\"s1\">&#39;euclidean&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">knn_data</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.weightmatrix.epsilon_ball": {"fullname": "graphlearning.weightmatrix.epsilon_ball", "modulename": "graphlearning.weightmatrix", "qualname": "epsilon_ball", "kind": "function", "doc": "<h1 id=\"epsilon-ball-weight-matrix\">Epsilon ball weight matrix</h1>\n\n<p>General function for constructing a sparse epsilon-ball weight matrix, whose weights have the form\n[ w_{i,j} = \\eta\\left(\\frac{\\|x_i - x_j\\|^2}{\\varepsilon^2} \\right), ]\nwhen (\\|x_i - x_j\\|\\leq \\varepsilon), and (w_{i,j}=0) otherwise.\nThis type of weight matrix is only feasible in relatively low dimensions.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data : (n,m) numpy array\n    n data points, each of dimension m\nepsilon : float\n    Connectivity radius\nkernel : string (optional), {'uniform','gaussian','singular','distance'}, default='gaussian'\n    The choice of kernel in computing the weights between (x_i) and (x_j) when\n    (\\|x_i-x_j\\|\\leq \\varepsilon). The choice 'uniform' corresponds to (w_{i,j}=1) \n    and constitutes an unweighted graph, 'gaussian' corresponds to\n    [ w_{i,j} = \\exp\\left(\\frac{-4\\|x_i - x_j\\|^2}{\\varepsilon^2} \\right), ]\n    'distance' corresponds to\n    [ w_{i,j} = \\|x_i - x_j\\|, ]\n    and 'singular' corresponds to \n    [ w_{i,j} = \\frac{1}{\\|x_i - x_j\\|}, ]\n    when (i\\neq j) and (w_{i,i}=1).\nfeatures : (n,k) numpy array (optional)\n    If provided, then the weights are additionally multiplied by the similarity in features, so that\n    [ w_{i,j} =  \\eta\\left(\\frac{\\|y_i - y_j\\|^2}{\\varepsilon_F^2} \\right)\\eta\\left(\\frac{\\|x_i - x_j\\|^2}{\\varepsilon^2} \\right), ]\n    when (\\|x_i - x_j\\|\\leq \\varepsilon), and (w_{i,j}=0) otherwise. The \n    vector (y_i) is the feature vector associated with datapoint i. The features\n    are useful for building a similarity graph over an image for image segmentation, and \n    here the (y_i) are either the pixel values at pixel i, or some other image feature\n    such as a texture indicator.\nepsilon_f : float (optional).\n    Connectivity radius for features (\\varepsilon_F). Default is (\\varepsilon_F=1).\neta : python function handle (optional)\n    If provided, this overrides the kernel option and instead uses the weights\n    [ w_{i,j} = \\eta\\left(\\frac{\\|x_i - x_j\\|^2}{\\varepsilon^2} \\right). ]\nzero_diagonal : bool (optional)\n    Whether to put zero on the diagonal, instead of (\\eta(0)). Default is False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>W : (n,n) scipy sparse matrix, float \n    Sparse weight matrix.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span>,</span><span class=\"param\">\t<span class=\"n\">epsilon</span>,</span><span class=\"param\">\t<span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"s1\">&#39;gaussian&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">features</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">epsilon_f</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">zero_diagonal</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.weightmatrix.knnsearch": {"fullname": "graphlearning.weightmatrix.knnsearch", "modulename": "graphlearning.weightmatrix", "qualname": "knnsearch", "kind": "function", "doc": "<h1 id=\"knn-search\">knn search</h1>\n\n<p>General function for k-nearest neighbor searching, including efficient \nimplementations for high dimensional data, and support for saving\nk-nn data to files automatically, for reuse later.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : (n,m) numpy array\n    n data points, each of dimension m.\nk : int\n    Number of nearest neighbors to find.\nmethod : {'kdtree','annoy','brute'} (optional), default: 'kdtree' for m &lt;=5 and 'annoy' for m>5\n    Algorithm for search. Annoy is an approximate nearest neighbor search and requires\n    the <a href=\"https://github.com/spotify/annoy\">Annoy</a> package. \nsimilarity : {'euclidean','angular','manhattan','hamming','dot'} (optional), default='euclidean'\n    Smilarity for nearest neighbor search. Only 'euclidean' and 'angular' are available with\n    'kdtree' and 'brute'.\ndataset : string (optional), default=None\n    If provided, results of the search are saved to a file that can be loaded later.\nmetric : string (optional), default='raw'\n    A modifier to add to the dataset name when saving, to distinguish different types of knn data.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>knn_ind : (n,k) numpy array, int\n    Indices of nearest neighbors, including the self point.\nknn_dist : (n,k) numpy array, float\n    Distances to all neighbors.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span>,</span><span class=\"param\">\t<span class=\"n\">k</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">similarity</span><span class=\"o\">=</span><span class=\"s1\">&#39;euclidean&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;raw&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.weightmatrix.load_knn_data": {"fullname": "graphlearning.weightmatrix.load_knn_data", "modulename": "graphlearning.weightmatrix", "qualname": "load_knn_data", "kind": "function", "doc": "<h1 id=\"load-saved-knn-data\">Load saved knn data</h1>\n\n<p>Loads the results of a saved knn search.   </p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>dataset : string\n    Name of dataset to load knn data for (not case-sensitive).\nmetric : string (optional), default='raw'\n    A modifier to add to the dataset name when saving, to distinguish different types of knn data (not case-sensitive).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>knn_ind : (n,k) numpy array, int\n    Indices of nearest neighbors, including the self point.\nknn_dist : (n,k) numpy array, float\n    Distances to all neighbors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dataset</span>, </span><span class=\"param\"><span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;raw&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "graphlearning.weightmatrix.vae": {"fullname": "graphlearning.weightmatrix.vae", "modulename": "graphlearning.weightmatrix", "qualname": "vae", "kind": "function", "doc": "<h1 id=\"variational-autoencoder-embedding\">Variational Autoencoder Embedding</h1>\n\n<p>Embeds a dataset via a two layer variational autoencoder (VAE) latent representation. The VAE\nis essentially the original one from [1].</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>data : numpy array\n    (n,d) array of n datapoints in dimension d.\nlayer_widths : list of int, length=2 (optional), default=[400,20]\n    First element is the width of the hidden layer, while the second is the dimension\n    of the latent space.\nno_cuda : bool (optional), default=False\n    Turn off GPU acceleration.\nbatch_size : int (optional), default=128\n    Batch size for gradient descent.\nepochs : int (optional), default=100\n    How many epochs (loops over whole dataset) to train over.\nlearning_rate : float (optional), default=1e-3\n    Learning rate for optimizer.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>data_vae : numpy array\n    Data encoded by the VAE.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>Using a VAE embedding to construct a similarity weight matrix on MNIST and running Poisson learning\nat 1 label per class: <a href=\"https://github.com/jwcalder/GraphLearning/blob/master/examples/vae_mnist.py\">vae_mnist.py</a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">graphlearning</span> <span class=\"k\">as</span> <span class=\"nn\">gl</span>\n\n<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;mnist&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">data_vae</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">vae</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n<span class=\"n\">W_raw</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">W_vae</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">weightmatrix</span><span class=\"o\">.</span><span class=\"n\">knn</span><span class=\"p\">(</span><span class=\"n\">data_vae</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"n\">num_train_per_class</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">train_ind</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">trainsets</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"n\">num_train_per_class</span><span class=\"p\">)</span>\n<span class=\"n\">train_labels</span> <span class=\"o\">=</span> <span class=\"n\">labels</span><span class=\"p\">[</span><span class=\"n\">train_ind</span><span class=\"p\">]</span>\n\n<span class=\"n\">pred_labels_raw</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">poisson</span><span class=\"p\">(</span><span class=\"n\">W_raw</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"n\">train_labels</span><span class=\"p\">)</span>\n<span class=\"n\">pred_labels_vae</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">poisson</span><span class=\"p\">(</span><span class=\"n\">W_vae</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">train_ind</span><span class=\"p\">,</span><span class=\"n\">train_labels</span><span class=\"p\">)</span>\n\n<span class=\"n\">accuracy_raw</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">ssl_accuracy</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span><span class=\"n\">pred_labels_raw</span><span class=\"p\">,</span><span class=\"n\">train_ind</span><span class=\"p\">)</span>\n<span class=\"n\">accuracy_vae</span> <span class=\"o\">=</span> <span class=\"n\">gl</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">ssl_accuracy</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span><span class=\"n\">pred_labels_vae</span><span class=\"p\">,</span><span class=\"n\">train_ind</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Raw Accuracy: </span><span class=\"si\">%.2f%%</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"n\">accuracy_raw</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;VAE Accuracy: </span><span class=\"si\">%.2f%%</span><span class=\"s1\">&#39;</span><span class=\"o\">%</span><span class=\"n\">accuracy_vae</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"references\">References</h2>\n\n<p>[1] D.P. Kingma and M. Welling. <a href=\"https://arxiv.org/abs/1312.6114\">Auto-encoding variational bayes.</a> arXiv:1312.6114, 2014.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span>,</span><span class=\"param\">\t<span class=\"n\">layer_widths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">no_cuda</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"o\">=</span><span class=\"mf\">0.001</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"graphlearning": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 610}, "graphlearning.active_learning.active_learner": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.active_learner.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 3}, "graphlearning.active_learning.active_learner.model": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.active_learner.labeled_ind": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.active_learner.labels": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.active_learner.acq_function": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.active_learner.policy": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.active_learner.u": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.active_learner.n": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.active_learner.all_inds": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.active_learner.unlabeled_ind": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.active_learner.printed_warning": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.active_learner.select_queries": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 3}, "graphlearning.active_learning.active_learner.update": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "graphlearning.active_learning.acquisition_function": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 203}, "graphlearning.active_learning.acquisition_function.compute": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 66}, "graphlearning.active_learning.acquisition_function.update": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "graphlearning.active_learning.unc_sampling": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 819}, "graphlearning.active_learning.unc_sampling.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "graphlearning.active_learning.unc_sampling.unc_method": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.unc_sampling.compute": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 66}, "graphlearning.active_learning.v_opt": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 944}, "graphlearning.active_learning.v_opt.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "graphlearning.active_learning.v_opt.C": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.v_opt.V": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.v_opt.gamma2": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.v_opt.compute": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 66}, "graphlearning.active_learning.v_opt.update": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "graphlearning.active_learning.sigma_opt": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 968}, "graphlearning.active_learning.sigma_opt.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "graphlearning.active_learning.sigma_opt.C": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.sigma_opt.V": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.sigma_opt.gamma2": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.sigma_opt.compute": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 66}, "graphlearning.active_learning.sigma_opt.update": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "graphlearning.active_learning.model_change": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 971}, "graphlearning.active_learning.model_change.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 3}, "graphlearning.active_learning.model_change.C": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.model_change.V": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.model_change.gamma2": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.model_change.unc_sampling": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.model_change.compute": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 66}, "graphlearning.active_learning.model_change.update": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "graphlearning.active_learning.model_change_vopt": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 999}, "graphlearning.active_learning.model_change_vopt.__init__": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 3}, "graphlearning.active_learning.model_change_vopt.C": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.model_change_vopt.V": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.model_change_vopt.gamma2": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.active_learning.model_change_vopt.compute": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 66}, "graphlearning.active_learning.model_change_vopt.update": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "graphlearning.clustering": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "graphlearning.clustering.clustering": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.clustering.clustering.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "graphlearning.clustering.clustering.cluster_labels": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.clustering.clustering.num_clusters": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.clustering.clustering.fitted": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.clustering.clustering.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 34}, "graphlearning.clustering.clustering.fit_predict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 53}, "graphlearning.clustering.clustering.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 48}, "graphlearning.clustering.spectral": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.clustering.spectral.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 741}, "graphlearning.clustering.spectral.method": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.clustering.spectral.extra_dim": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.clustering.fokker_planck": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.clustering.fokker_planck.__init__": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 475}, "graphlearning.clustering.fokker_planck.beta": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.clustering.fokker_planck.t": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.clustering.incres": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.clustering.incres.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 372}, "graphlearning.clustering.incres.speed": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.clustering.incres.T": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.clustering.withinss": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 63}, "graphlearning.clustering.RP1D": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 320}, "graphlearning.clustering.clustering_accuracy": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "graphlearning.clustering.purity": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 62}, "graphlearning.datasets": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "graphlearning.datasets.data_dir": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.datasets.two_skies": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 76}, "graphlearning.datasets.save": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 95}, "graphlearning.datasets.load": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 208}, "graphlearning.datasets.load_image": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 70}, "graphlearning.graph": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 44}, "graphlearning.graph.graph": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.graph.graph.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 47}, "graphlearning.graph.graph.weight_matrix": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.graph.graph.num_nodes": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.graph.graph.K": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.graph.graph.I": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.graph.graph.J": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.graph.graph.V": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.graph.graph.eigendata": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.graph.graph.subgraph": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 49}, "graphlearning.graph.graph.degree_vector": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 40}, "graphlearning.graph.graph.degree_matrix": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 66}, "graphlearning.graph.graph.rand": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 63}, "graphlearning.graph.graph.randn": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 63}, "graphlearning.graph.graph.adjacency": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 49}, "graphlearning.graph.graph.gradient": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 156}, "graphlearning.graph.graph.divergence": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 110}, "graphlearning.graph.graph.reweight": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 105, "bases": 0, "doc": 320}, "graphlearning.graph.graph.laplacian": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 120}, "graphlearning.graph.graph.infinity_laplacian": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 53}, "graphlearning.graph.graph.isconnected": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 28}, "graphlearning.graph.graph.largest_connected_component": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 65}, "graphlearning.graph.graph.eigen_decomp": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 97, "bases": 0, "doc": 995}, "graphlearning.graph.graph.fiedler_vector": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 83}, "graphlearning.graph.graph.peikonal": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 141, "bases": 0, "doc": 703}, "graphlearning.graph.graph.dijkstra_hl": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 624}, "graphlearning.graph.graph.dijkstra": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 759}, "graphlearning.graph.graph.plaplace": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 723}, "graphlearning.graph.graph.amle": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 173}, "graphlearning.graph.graph.save": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 33}, "graphlearning.graph.graph.load": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 29}, "graphlearning.graph.graph.page_rank": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 130}, "graphlearning.ssl": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 2147}, "graphlearning.ssl.results_dir": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.ssl": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.ssl.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "graphlearning.ssl.ssl.prob": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.ssl.fitted": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.ssl.name": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.ssl.accuracy_filename": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.ssl.requires_eig": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.ssl.onevsrest": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.ssl.similarity": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.ssl.class_priors": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.ssl.weights": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.ssl.class_priors_error": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.ssl.set_graph": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 64}, "graphlearning.ssl.ssl.volume_label_projection": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 50}, "graphlearning.ssl.ssl.get_accuracy_filename": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 36}, "graphlearning.ssl.ssl.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 96}, "graphlearning.ssl.ssl.fit_predict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 81}, "graphlearning.ssl.ssl.ssl_trials": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 85, "bases": 0, "doc": 214}, "graphlearning.ssl.ssl.trials_statistics": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 112}, "graphlearning.ssl.ssl.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 112}, "graphlearning.ssl.poisson": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.ssl.poisson.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 114, "bases": 0, "doc": 812}, "graphlearning.ssl.poisson.solver": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson.p": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson.use_cuda": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson.min_iter": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson.max_iter": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson.tol": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson.spectral_cutoff": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson.accuracy_filename": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson.name": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson_mbo": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.ssl.poisson_mbo.__init__": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 136, "bases": 0, "doc": 629}, "graphlearning.ssl.poisson_mbo.poisson_model": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson_mbo.Ns": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson_mbo.mu": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson_mbo.T": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson_mbo.use_cuda": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson_mbo.accuracy_filename": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.poisson_mbo.name": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.volume_mbo": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.ssl.volume_mbo.__init__": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 150}, "graphlearning.ssl.volume_mbo.class_counts": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.volume_mbo.temperature": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.volume_mbo.volume_constraint": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.volume_mbo.accuracy_filename": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.volume_mbo.name": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.multiclass_mbo": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.ssl.multiclass_mbo.__init__": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 174}, "graphlearning.ssl.multiclass_mbo.Ns": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.multiclass_mbo.T": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.multiclass_mbo.dt": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.multiclass_mbo.mu": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.multiclass_mbo.num_eig": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.multiclass_mbo.requires_eig": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.multiclass_mbo.accuracy_filename": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.multiclass_mbo.name": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.modularity_mbo": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.ssl.modularity_mbo.__init__": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 169}, "graphlearning.ssl.modularity_mbo.gamma": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.modularity_mbo.epsilon": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.modularity_mbo.lamb": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.modularity_mbo.requires_eig": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.modularity_mbo.T": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.modularity_mbo.Ns": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.modularity_mbo.accuracy_filename": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.modularity_mbo.name": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.laplace": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.ssl.laplace.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 149, "bases": 0, "doc": 506}, "graphlearning.ssl.laplace.reweighting": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.laplace.normalization": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.laplace.mean_shift": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.laplace.tol": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.laplace.order": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.laplace.X": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.laplace.name": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.laplace.accuracy_filename": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.dynamic_label_propagation": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 151}, "graphlearning.ssl.dynamic_label_propagation.alpha": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.dynamic_label_propagation.lam": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.dynamic_label_propagation.T": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.dynamic_label_propagation.name": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.centered_kernel": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.ssl.centered_kernel.__init__": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 155}, "graphlearning.ssl.centered_kernel.tol": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.centered_kernel.power_it": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.centered_kernel.alpha": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.centered_kernel.accuracy_filename": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.centered_kernel.name": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.sparse_label_propagation": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.ssl.sparse_label_propagation.__init__": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 123}, "graphlearning.ssl.sparse_label_propagation.T": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.sparse_label_propagation.name": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.graph_nearest_neighbor": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 172}, "graphlearning.ssl.graph_nearest_neighbor.alpha": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.graph_nearest_neighbor.name": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.amle": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.ssl.amle.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 169}, "graphlearning.ssl.amle.tol": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.amle.max_num_it": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.amle.weighted": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.amle.prog": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.amle.onevsrest": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.amle.accuracy_filename": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.amle.name": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.peikonal": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.ssl.peikonal.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 112, "bases": 0, "doc": 228}, "graphlearning.ssl.peikonal.p": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.peikonal.alpha": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.peikonal.max_num_it": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.peikonal.tol": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.peikonal.num_bisection_it": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.peikonal.onevsrest": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.peikonal.similarity": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.peikonal.accuracy_filename": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.peikonal.name": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.plaplace": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.ssl.plaplace.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 193}, "graphlearning.ssl.plaplace.p": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.plaplace.max_num_it": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.plaplace.tol": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.plaplace.onevsrest": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.plaplace.fast": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.plaplace.accuracy_filename": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.plaplace.name": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.randomwalk": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "graphlearning.ssl.randomwalk.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 137}, "graphlearning.ssl.randomwalk.alpha": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.randomwalk.accuracy_filename": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.randomwalk.name": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.ssl.ssl_accuracy": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 88}, "graphlearning.ssl.accuracy_plot": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 128, "bases": 0, "doc": 195}, "graphlearning.ssl.accuracy_table": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 118, "bases": 0, "doc": 160}, "graphlearning.trainsets": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 44}, "graphlearning.trainsets.trainset_dir": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.trainsets.load": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 50}, "graphlearning.trainsets.generate": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 306}, "graphlearning.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "graphlearning.utils.boundary_statistic": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 208}, "graphlearning.utils.class_priors": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 63}, "graphlearning.utils.csvread": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 39}, "graphlearning.utils.numpy_load": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 42}, "graphlearning.utils.download_file": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 41}, "graphlearning.utils.sparse_max": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "graphlearning.utils.torch_sparse": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 58}, "graphlearning.utils.constrained_solve": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 135}, "graphlearning.utils.dirichlet_eigenvectors": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 101}, "graphlearning.utils.constrained_solve_gmres": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 124}, "graphlearning.utils.conjgrad": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 114}, "graphlearning.utils.labels_to_onehot": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 65}, "graphlearning.utils.randomized_svd": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 159}, "graphlearning.utils.rand_annulus": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 67}, "graphlearning.utils.rand_ball": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 54}, "graphlearning.utils.bean_data": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 65}, "graphlearning.utils.mesh": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 87}, "graphlearning.utils.image_grid": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 103, "bases": 0, "doc": 195}, "graphlearning.utils.color_image_grid": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 103, "bases": 0, "doc": 200}, "graphlearning.utils.image_to_patches": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 65}, "graphlearning.utils.patches_to_image": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 69}, "graphlearning.weightmatrix": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "graphlearning.weightmatrix.knn_dir": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "graphlearning.weightmatrix.knn": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 97, "bases": 0, "doc": 413}, "graphlearning.weightmatrix.epsilon_ball": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 360}, "graphlearning.weightmatrix.knnsearch": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 203}, "graphlearning.weightmatrix.load_knn_data": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 97}, "graphlearning.weightmatrix.vae": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 680}}, "length": 290, "save": true}, "index": {"qualname": {"root": {"docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.clustering.clustering.__init__": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.ssl.ssl.__init__": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 26, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.active_learner": {"tf": 1}, "graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.active_learning.active_learner.model": {"tf": 1}, "graphlearning.active_learning.active_learner.labeled_ind": {"tf": 1}, "graphlearning.active_learning.active_learner.labels": {"tf": 1}, "graphlearning.active_learning.active_learner.acq_function": {"tf": 1}, "graphlearning.active_learning.active_learner.policy": {"tf": 1}, "graphlearning.active_learning.active_learner.u": {"tf": 1}, "graphlearning.active_learning.active_learner.n": {"tf": 1}, "graphlearning.active_learning.active_learner.all_inds": {"tf": 1}, "graphlearning.active_learning.active_learner.unlabeled_ind": {"tf": 1}, "graphlearning.active_learning.active_learner.printed_warning": {"tf": 1}, "graphlearning.active_learning.active_learner.select_queries": {"tf": 1}, "graphlearning.active_learning.active_learner.update": {"tf": 1}}, "df": 14}}}}, "q": {"docs": {"graphlearning.active_learning.active_learner.acq_function": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.acquisition_function.update": {"tf": 1}}, "df": 3}}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.ssl.ssl.accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson.accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.volume_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.modularity_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.laplace.accuracy_filename": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.centered_kernel.accuracy_filename": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"tf": 1}, "graphlearning.ssl.amle.accuracy_filename": {"tf": 1}, "graphlearning.ssl.peikonal.accuracy_filename": {"tf": 1}, "graphlearning.ssl.plaplace.accuracy_filename": {"tf": 1}, "graphlearning.ssl.randomwalk.accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 20}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.active_learner.all_inds": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.ssl.dynamic_label_propagation.alpha": {"tf": 1}, "graphlearning.ssl.centered_kernel.alpha": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.alpha": {"tf": 1}, "graphlearning.ssl.peikonal.alpha": {"tf": 1}, "graphlearning.ssl.randomwalk.alpha": {"tf": 1}}, "df": 5}}}}, "d": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.adjacency": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.amle": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.amle.tol": {"tf": 1}, "graphlearning.ssl.amle.max_num_it": {"tf": 1}, "graphlearning.ssl.amle.weighted": {"tf": 1}, "graphlearning.ssl.amle.prog": {"tf": 1}, "graphlearning.ssl.amle.onevsrest": {"tf": 1}, "graphlearning.ssl.amle.accuracy_filename": {"tf": 1}, "graphlearning.ssl.amle.name": {"tf": 1}}, "df": 10}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.rand_annulus": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning.active_learner": {"tf": 1}, "graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.active_learning.active_learner.model": {"tf": 1}, "graphlearning.active_learning.active_learner.labeled_ind": {"tf": 1}, "graphlearning.active_learning.active_learner.labels": {"tf": 1}, "graphlearning.active_learning.active_learner.acq_function": {"tf": 1}, "graphlearning.active_learning.active_learner.policy": {"tf": 1}, "graphlearning.active_learning.active_learner.u": {"tf": 1}, "graphlearning.active_learning.active_learner.n": {"tf": 1}, "graphlearning.active_learning.active_learner.all_inds": {"tf": 1}, "graphlearning.active_learning.active_learner.unlabeled_ind": {"tf": 1}, "graphlearning.active_learning.active_learner.printed_warning": {"tf": 1}, "graphlearning.active_learning.active_learner.select_queries": {"tf": 1}, "graphlearning.active_learning.active_learner.update": {"tf": 1}}, "df": 14}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.alpha": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.lam": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.T": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.name": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.T": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.name": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.active_learner.labeled_ind": {"tf": 1}}, "df": 1}}, "s": {"docs": {"graphlearning.active_learning.active_learner.labels": {"tf": 1}, "graphlearning.clustering.clustering.cluster_labels": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"graphlearning.ssl.laplace": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.laplace.reweighting": {"tf": 1}, "graphlearning.ssl.laplace.normalization": {"tf": 1}, "graphlearning.ssl.laplace.mean_shift": {"tf": 1}, "graphlearning.ssl.laplace.tol": {"tf": 1}, "graphlearning.ssl.laplace.order": {"tf": 1}, "graphlearning.ssl.laplace.X": {"tf": 1}, "graphlearning.ssl.laplace.name": {"tf": 1}, "graphlearning.ssl.laplace.accuracy_filename": {"tf": 1}}, "df": 10}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.largest_connected_component": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {"graphlearning.ssl.dynamic_label_propagation.lam": {"tf": 1}}, "df": 1, "b": {"docs": {"graphlearning.ssl.modularity_mbo.lamb": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.datasets.load": {"tf": 1}, "graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.graph.graph.load": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {"graphlearning.graph.graph.I": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.clustering.clustering.__init__": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.ssl.ssl.__init__": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 26}}, "d": {"docs": {"graphlearning.active_learning.active_learner.labeled_ind": {"tf": 1}, "graphlearning.active_learning.active_learner.unlabeled_ind": {"tf": 1}}, "df": 2, "s": {"docs": {"graphlearning.active_learning.active_learner.all_inds": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.incres": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.incres.speed": {"tf": 1}, "graphlearning.clustering.incres.T": {"tf": 1}}, "df": 4}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.infinity_laplacian": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.isconnected": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {"graphlearning.ssl.centered_kernel.power_it": {"tf": 1}, "graphlearning.ssl.amle.max_num_it": {"tf": 1}, "graphlearning.ssl.peikonal.max_num_it": {"tf": 1}, "graphlearning.ssl.peikonal.num_bisection_it": {"tf": 1}, "graphlearning.ssl.plaplace.max_num_it": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.poisson.min_iter": {"tf": 1}, "graphlearning.ssl.poisson.max_iter": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.active_learner.model": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.C": {"tf": 1}, "graphlearning.active_learning.model_change.V": {"tf": 1}, "graphlearning.active_learning.model_change.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change.update": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.C": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.V": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1}, "graphlearning.ssl.poisson_mbo.poisson_model": {"tf": 1}}, "df": 18}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl.modularity_mbo": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.gamma": {"tf": 1}, "graphlearning.ssl.modularity_mbo.epsilon": {"tf": 1}, "graphlearning.ssl.modularity_mbo.lamb": {"tf": 1}, "graphlearning.ssl.modularity_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.modularity_mbo.T": {"tf": 1}, "graphlearning.ssl.modularity_mbo.Ns": {"tf": 1}, "graphlearning.ssl.modularity_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.modularity_mbo.name": {"tf": 1}}, "df": 10}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.unc_sampling.unc_method": {"tf": 1}, "graphlearning.clustering.spectral.method": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.laplace.mean_shift": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.utils.mesh": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"graphlearning.graph.graph.weight_matrix": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {"graphlearning.ssl.poisson.max_iter": {"tf": 1}, "graphlearning.ssl.amle.max_num_it": {"tf": 1}, "graphlearning.ssl.peikonal.max_num_it": {"tf": 1}, "graphlearning.ssl.plaplace.max_num_it": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.poisson.min_iter": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.ssl.poisson_mbo": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.poisson_model": {"tf": 1}, "graphlearning.ssl.poisson_mbo.Ns": {"tf": 1}, "graphlearning.ssl.poisson_mbo.mu": {"tf": 1}, "graphlearning.ssl.poisson_mbo.T": {"tf": 1}, "graphlearning.ssl.poisson_mbo.use_cuda": {"tf": 1}, "graphlearning.ssl.poisson_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson_mbo.name": {"tf": 1}, "graphlearning.ssl.volume_mbo": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.class_counts": {"tf": 1}, "graphlearning.ssl.volume_mbo.temperature": {"tf": 1}, "graphlearning.ssl.volume_mbo.volume_constraint": {"tf": 1}, "graphlearning.ssl.volume_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.volume_mbo.name": {"tf": 1}, "graphlearning.ssl.multiclass_mbo": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.Ns": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.T": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.dt": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.mu": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.num_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.name": {"tf": 1}, "graphlearning.ssl.modularity_mbo": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.gamma": {"tf": 1}, "graphlearning.ssl.modularity_mbo.epsilon": {"tf": 1}, "graphlearning.ssl.modularity_mbo.lamb": {"tf": 1}, "graphlearning.ssl.modularity_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.modularity_mbo.T": {"tf": 1}, "graphlearning.ssl.modularity_mbo.Ns": {"tf": 1}, "graphlearning.ssl.modularity_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.modularity_mbo.name": {"tf": 1}}, "df": 36}}, "u": {"docs": {"graphlearning.ssl.poisson_mbo.mu": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.mu": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.multiclass_mbo": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.Ns": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.T": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.dt": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.mu": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.num_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.name": {"tf": 1}}, "df": 10}}}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.active_learner.acq_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.acquisition_function.update": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.clustering.fit": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.clustering.fitted": {"tf": 1}, "graphlearning.ssl.ssl.fitted": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.fiedler_vector": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.download_file": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson.accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.volume_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.modularity_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.laplace.accuracy_filename": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.centered_kernel.accuracy_filename": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"tf": 1}, "graphlearning.ssl.amle.accuracy_filename": {"tf": 1}, "graphlearning.ssl.peikonal.accuracy_filename": {"tf": 1}, "graphlearning.ssl.plaplace.accuracy_filename": {"tf": 1}, "graphlearning.ssl.randomwalk.accuracy_filename": {"tf": 1}}, "df": 16}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.clustering.fokker_planck": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.beta": {"tf": 1}, "graphlearning.clustering.fokker_planck.t": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.plaplace.fast": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"graphlearning.ssl.poisson.p": {"tf": 1}, "graphlearning.ssl.peikonal.p": {"tf": 1}, "graphlearning.ssl.plaplace.p": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning.active_learner.policy": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.poisson": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson.solver": {"tf": 1}, "graphlearning.ssl.poisson.p": {"tf": 1}, "graphlearning.ssl.poisson.use_cuda": {"tf": 1}, "graphlearning.ssl.poisson.min_iter": {"tf": 1}, "graphlearning.ssl.poisson.max_iter": {"tf": 1}, "graphlearning.ssl.poisson.tol": {"tf": 1}, "graphlearning.ssl.poisson.spectral_cutoff": {"tf": 1}, "graphlearning.ssl.poisson.accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson.name": {"tf": 1}, "graphlearning.ssl.poisson_mbo": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.poisson_model": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.Ns": {"tf": 1}, "graphlearning.ssl.poisson_mbo.mu": {"tf": 1}, "graphlearning.ssl.poisson_mbo.T": {"tf": 1}, "graphlearning.ssl.poisson_mbo.use_cuda": {"tf": 1}, "graphlearning.ssl.poisson_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson_mbo.name": {"tf": 1}}, "df": 20}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.centered_kernel.power_it": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.active_learner.printed_warning": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.class_priors": {"tf": 1}, "graphlearning.ssl.ssl.class_priors_error": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {"graphlearning.ssl.ssl.prob": {"tf": 1}}, "df": 1}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.dynamic_label_propagation": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.alpha": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.lam": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.T": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.name": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.T": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.name": {"tf": 1}}, "df": 12}}}}}}}}, "g": {"docs": {"graphlearning.ssl.amle.prog": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.clustering.fokker_planck": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.beta": {"tf": 1}, "graphlearning.clustering.fokker_planck.t": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl.plaplace": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.p": {"tf": 1}, "graphlearning.ssl.plaplace.max_num_it": {"tf": 1}, "graphlearning.ssl.plaplace.tol": {"tf": 1}, "graphlearning.ssl.plaplace.onevsrest": {"tf": 1}, "graphlearning.ssl.plaplace.fast": {"tf": 1}, "graphlearning.ssl.plaplace.accuracy_filename": {"tf": 1}, "graphlearning.ssl.plaplace.name": {"tf": 1}}, "df": 10}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.purity": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.peikonal": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.p": {"tf": 1}, "graphlearning.ssl.peikonal.alpha": {"tf": 1}, "graphlearning.ssl.peikonal.max_num_it": {"tf": 1}, "graphlearning.ssl.peikonal.tol": {"tf": 1}, "graphlearning.ssl.peikonal.num_bisection_it": {"tf": 1}, "graphlearning.ssl.peikonal.onevsrest": {"tf": 1}, "graphlearning.ssl.peikonal.similarity": {"tf": 1}, "graphlearning.ssl.peikonal.accuracy_filename": {"tf": 1}, "graphlearning.ssl.peikonal.name": {"tf": 1}}, "df": 12}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.page_rank": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {"graphlearning.active_learning.active_learner.u": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.active_learner.unlabeled_ind": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.unc_sampling.unc_method": {"tf": 1.4142135623730951}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.model_change.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"tf": 1}}, "df": 6}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.active_learner.update": {"tf": 1}, "graphlearning.active_learning.acquisition_function.update": {"tf": 1}, "graphlearning.active_learning.v_opt.update": {"tf": 1}, "graphlearning.active_learning.sigma_opt.update": {"tf": 1}, "graphlearning.active_learning.model_change.update": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.poisson.use_cuda": {"tf": 1}, "graphlearning.ssl.poisson_mbo.use_cuda": {"tf": 1}}, "df": 2}}}, "n": {"docs": {"graphlearning.active_learning.active_learner.n": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.clustering.clustering.num_clusters": {"tf": 1}, "graphlearning.graph.graph.num_nodes": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.num_eig": {"tf": 1}, "graphlearning.ssl.amle.max_num_it": {"tf": 1}, "graphlearning.ssl.peikonal.max_num_it": {"tf": 1}, "graphlearning.ssl.peikonal.num_bisection_it": {"tf": 1}, "graphlearning.ssl.plaplace.max_num_it": {"tf": 1}}, "df": 7, "p": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.utils.numpy_load": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.num_nodes": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.laplace.normalization": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.name": {"tf": 1}, "graphlearning.ssl.poisson.name": {"tf": 1}, "graphlearning.ssl.poisson_mbo.name": {"tf": 1}, "graphlearning.ssl.volume_mbo.name": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.name": {"tf": 1}, "graphlearning.ssl.modularity_mbo.name": {"tf": 1}, "graphlearning.ssl.laplace.name": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.name": {"tf": 1}, "graphlearning.ssl.centered_kernel.name": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.name": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.name": {"tf": 1}, "graphlearning.ssl.amle.name": {"tf": 1}, "graphlearning.ssl.peikonal.name": {"tf": 1}, "graphlearning.ssl.plaplace.name": {"tf": 1}, "graphlearning.ssl.randomwalk.name": {"tf": 1}}, "df": 15}}}, "s": {"docs": {"graphlearning.ssl.poisson_mbo.Ns": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.Ns": {"tf": 1}, "graphlearning.ssl.modularity_mbo.Ns": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.graph_nearest_neighbor": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.alpha": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.name": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.graph_nearest_neighbor": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.alpha": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.name": {"tf": 1}}, "df": 5}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning.active_learner.printed_warning": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.withinss": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.weight_matrix": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.ssl.ssl.weights": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.amle.weighted": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"graphlearning.ssl.ssl.set_graph": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.unc_sampling.unc_method": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.model_change.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"tf": 1}}, "df": 6}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.graph.graph.save": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.C": {"tf": 1}, "graphlearning.active_learning.sigma_opt.V": {"tf": 1}, "graphlearning.active_learning.sigma_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.update": {"tf": 1}}, "df": 7}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl.ssl.similarity": {"tf": 1}, "graphlearning.ssl.peikonal.similarity": {"tf": 1}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.clustering.spectral": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.spectral.method": {"tf": 1}, "graphlearning.clustering.spectral.extra_dim": {"tf": 1}, "graphlearning.ssl.poisson.spectral_cutoff": {"tf": 1}}, "df": 5}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.incres.speed": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.sparse_label_propagation": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.T": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.name": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1}, "graphlearning.utils.torch_sparse": {"tf": 1}}, "df": 7}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.graph.graph.subgraph": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.ssl": {"tf": 1}, "graphlearning.ssl.ssl.__init__": {"tf": 1}, "graphlearning.ssl.ssl.prob": {"tf": 1}, "graphlearning.ssl.ssl.fitted": {"tf": 1}, "graphlearning.ssl.ssl.name": {"tf": 1}, "graphlearning.ssl.ssl.accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.requires_eig": {"tf": 1}, "graphlearning.ssl.ssl.onevsrest": {"tf": 1}, "graphlearning.ssl.ssl.similarity": {"tf": 1}, "graphlearning.ssl.ssl.class_priors": {"tf": 1}, "graphlearning.ssl.ssl.weights": {"tf": 1}, "graphlearning.ssl.ssl.class_priors_error": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}}, "df": 21}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.ssl.ssl.trials_statistics": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 2, "r": {"docs": {"graphlearning.ssl.poisson.solver": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.laplace.mean_shift": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {"graphlearning.active_learning.v_opt.C": {"tf": 1}, "graphlearning.active_learning.sigma_opt.C": {"tf": 1}, "graphlearning.active_learning.model_change.C": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.C": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.largest_connected_component": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.largest_connected_component": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.volume_mbo.volume_constraint": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 2}}}}}}}}, "j": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.conjgrad": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.volume_mbo.class_counts": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.C": {"tf": 1}, "graphlearning.active_learning.model_change.V": {"tf": 1}, "graphlearning.active_learning.model_change.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change.update": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.C": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.V": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1}}, "df": 16}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.clustering.clustering.cluster_labels": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.clustering.clustering": {"tf": 1}, "graphlearning.clustering.clustering.__init__": {"tf": 1}, "graphlearning.clustering.clustering.cluster_labels": {"tf": 1}, "graphlearning.clustering.clustering.num_clusters": {"tf": 1}, "graphlearning.clustering.clustering.fitted": {"tf": 1}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.clustering.fit": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}}, "df": 9}}}, "s": {"docs": {"graphlearning.clustering.clustering.num_clusters": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.class_priors": {"tf": 1}, "graphlearning.ssl.ssl.class_priors_error": {"tf": 1}, "graphlearning.ssl.volume_mbo.class_counts": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.ssl.poisson.use_cuda": {"tf": 1}, "graphlearning.ssl.poisson_mbo.use_cuda": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"graphlearning.ssl.poisson.spectral_cutoff": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.centered_kernel": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.tol": {"tf": 1}, "graphlearning.ssl.centered_kernel.power_it": {"tf": 1}, "graphlearning.ssl.centered_kernel.alpha": {"tf": 1}, "graphlearning.ssl.centered_kernel.accuracy_filename": {"tf": 1}, "graphlearning.ssl.centered_kernel.name": {"tf": 1}}, "df": 7}}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.csvread": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.v_opt.C": {"tf": 1}, "graphlearning.active_learning.v_opt.V": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.update": {"tf": 1}, "graphlearning.active_learning.sigma_opt.V": {"tf": 1}, "graphlearning.active_learning.model_change.V": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.V": {"tf": 1}, "graphlearning.graph.graph.V": {"tf": 1}}, "df": 11, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.C": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.V": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1}}, "df": 8}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.volume_mbo": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.class_counts": {"tf": 1}, "graphlearning.ssl.volume_mbo.temperature": {"tf": 1}, "graphlearning.ssl.volume_mbo.volume_constraint": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.volume_mbo.name": {"tf": 1}}, "df": 8}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.v_opt.C": {"tf": 1}, "graphlearning.active_learning.v_opt.V": {"tf": 1}, "graphlearning.active_learning.v_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.update": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.C": {"tf": 1}, "graphlearning.active_learning.sigma_opt.V": {"tf": 1}, "graphlearning.active_learning.sigma_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.update": {"tf": 1}}, "df": 14}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.ssl.onevsrest": {"tf": 1}, "graphlearning.ssl.amle.onevsrest": {"tf": 1}, "graphlearning.ssl.peikonal.onevsrest": {"tf": 1}, "graphlearning.ssl.plaplace.onevsrest": {"tf": 1}}, "df": 4}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.labels_to_onehot": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.laplace.order": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"2": {"docs": {"graphlearning.active_learning.v_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.sigma_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.gamma2": {"tf": 1}}, "df": 4}, "docs": {"graphlearning.ssl.modularity_mbo.gamma": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.graph.graph": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.weight_matrix": {"tf": 1}, "graphlearning.graph.graph.num_nodes": {"tf": 1}, "graphlearning.graph.graph.K": {"tf": 1}, "graphlearning.graph.graph.I": {"tf": 1}, "graphlearning.graph.graph.J": {"tf": 1}, "graphlearning.graph.graph.V": {"tf": 1}, "graphlearning.graph.graph.eigendata": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1}, "graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.adjacency": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.isconnected": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.graph.graph.load": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.alpha": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.name": {"tf": 1}}, "df": 38}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.clustering.spectral.extra_dim": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.ssl.requires_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.num_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.modularity_mbo.requires_eig": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.graph.graph.eigendata": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.ssl.class_priors_error": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.modularity_mbo.epsilon": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.clustering.spectral.extra_dim": {"tf": 1}}, "df": 1}, "r": {"docs": {"graphlearning.datasets.data_dir": {"tf": 1}, "graphlearning.ssl.results_dir": {"tf": 1}, "graphlearning.trainsets.trainset_dir": {"tf": 1}, "graphlearning.weightmatrix.knn_dir": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.divergence": {"tf": 1}}, "df": 1}}}}}}}}, "j": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.datasets.data_dir": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"graphlearning.ssl.multiclass_mbo.dt": {"tf": 1}}, "df": 1}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.ssl.dynamic_label_propagation": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.alpha": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.lam": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.T": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.name": {"tf": 1}}, "df": 7}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.download_file": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.clustering.fokker_planck.beta": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.utils.bean_data": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.peikonal.num_bisection_it": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"graphlearning.clustering.fokker_planck.t": {"tf": 1}, "graphlearning.clustering.incres.T": {"tf": 1}, "graphlearning.ssl.poisson_mbo.T": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.T": {"tf": 1}, "graphlearning.ssl.modularity_mbo.T": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.T": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.T": {"tf": 1}}, "df": 7, "w": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.trainsets.trainset_dir": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {"graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 3, "l": {"docs": {"graphlearning.ssl.poisson.tol": {"tf": 1}, "graphlearning.ssl.laplace.tol": {"tf": 1}, "graphlearning.ssl.centered_kernel.tol": {"tf": 1}, "graphlearning.ssl.amle.tol": {"tf": 1}, "graphlearning.ssl.peikonal.tol": {"tf": 1}, "graphlearning.ssl.plaplace.tol": {"tf": 1}}, "df": 6}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.utils.torch_sparse": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.volume_mbo.temperature": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "p": {"1": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}}, "df": 3, "n": {"docs": {"graphlearning.graph.graph.randn": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.ssl.randomwalk": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.alpha": {"tf": 1}, "graphlearning.ssl.randomwalk.accuracy_filename": {"tf": 1}, "graphlearning.ssl.randomwalk.name": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {"graphlearning.graph.graph.page_rank": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.laplace.reweighting": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.results_dir": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.requires_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.modularity_mbo.requires_eig": {"tf": 1}}, "df": 3}}}}}}}}, "k": {"docs": {"graphlearning.graph.graph.K": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.centered_kernel": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.tol": {"tf": 1}, "graphlearning.ssl.centered_kernel.power_it": {"tf": 1}, "graphlearning.ssl.centered_kernel.alpha": {"tf": 1}, "graphlearning.ssl.centered_kernel.accuracy_filename": {"tf": 1}, "graphlearning.ssl.centered_kernel.name": {"tf": 1}}, "df": 7}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.weightmatrix.knn_dir": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 1}}}}}}}}}, "j": {"docs": {"graphlearning.graph.graph.J": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}}, "df": 1}}, "x": {"docs": {"graphlearning.ssl.laplace.X": {"tf": 1}}, "df": 1}}}, "fullname": {"root": {"docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.clustering.clustering.__init__": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.ssl.ssl.__init__": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 26, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.__init__": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.weight_matrix": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.num_nodes": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.K": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.I": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.J": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.V": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigendata": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.subgraph": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.degree_vector": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.degree_matrix": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.rand": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.randn": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.adjacency": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.gradient": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.divergence": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.isconnected": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.save": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.load": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.page_rank": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.alpha": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.name": {"tf": 1}}, "df": 39, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning": {"tf": 1}, "graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.active_learner": {"tf": 1}, "graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.active_learning.active_learner.model": {"tf": 1}, "graphlearning.active_learning.active_learner.labeled_ind": {"tf": 1}, "graphlearning.active_learning.active_learner.labels": {"tf": 1}, "graphlearning.active_learning.active_learner.acq_function": {"tf": 1}, "graphlearning.active_learning.active_learner.policy": {"tf": 1}, "graphlearning.active_learning.active_learner.u": {"tf": 1}, "graphlearning.active_learning.active_learner.n": {"tf": 1}, "graphlearning.active_learning.active_learner.all_inds": {"tf": 1}, "graphlearning.active_learning.active_learner.unlabeled_ind": {"tf": 1}, "graphlearning.active_learning.active_learner.printed_warning": {"tf": 1}, "graphlearning.active_learning.active_learner.select_queries": {"tf": 1}, "graphlearning.active_learning.active_learner.update": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.acquisition_function.update": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.unc_sampling.unc_method": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.v_opt.C": {"tf": 1}, "graphlearning.active_learning.v_opt.V": {"tf": 1}, "graphlearning.active_learning.v_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.update": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.C": {"tf": 1}, "graphlearning.active_learning.sigma_opt.V": {"tf": 1}, "graphlearning.active_learning.sigma_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.update": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.C": {"tf": 1}, "graphlearning.active_learning.model_change.V": {"tf": 1}, "graphlearning.active_learning.model_change.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change.update": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.C": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.V": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1}, "graphlearning.clustering": {"tf": 1}, "graphlearning.clustering.clustering": {"tf": 1}, "graphlearning.clustering.clustering.__init__": {"tf": 1}, "graphlearning.clustering.clustering.cluster_labels": {"tf": 1}, "graphlearning.clustering.clustering.num_clusters": {"tf": 1}, "graphlearning.clustering.clustering.fitted": {"tf": 1}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.clustering.fit": {"tf": 1}, "graphlearning.clustering.spectral": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.spectral.method": {"tf": 1}, "graphlearning.clustering.spectral.extra_dim": {"tf": 1}, "graphlearning.clustering.fokker_planck": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.beta": {"tf": 1}, "graphlearning.clustering.fokker_planck.t": {"tf": 1}, "graphlearning.clustering.incres": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.incres.speed": {"tf": 1}, "graphlearning.clustering.incres.T": {"tf": 1}, "graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.datasets": {"tf": 1}, "graphlearning.datasets.data_dir": {"tf": 1}, "graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.weight_matrix": {"tf": 1}, "graphlearning.graph.graph.num_nodes": {"tf": 1}, "graphlearning.graph.graph.K": {"tf": 1}, "graphlearning.graph.graph.I": {"tf": 1}, "graphlearning.graph.graph.J": {"tf": 1}, "graphlearning.graph.graph.V": {"tf": 1}, "graphlearning.graph.graph.eigendata": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1}, "graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.adjacency": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.isconnected": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.graph.graph.load": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.results_dir": {"tf": 1}, "graphlearning.ssl.ssl": {"tf": 1}, "graphlearning.ssl.ssl.__init__": {"tf": 1}, "graphlearning.ssl.ssl.prob": {"tf": 1}, "graphlearning.ssl.ssl.fitted": {"tf": 1}, "graphlearning.ssl.ssl.name": {"tf": 1}, "graphlearning.ssl.ssl.accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.requires_eig": {"tf": 1}, "graphlearning.ssl.ssl.onevsrest": {"tf": 1}, "graphlearning.ssl.ssl.similarity": {"tf": 1}, "graphlearning.ssl.ssl.class_priors": {"tf": 1}, "graphlearning.ssl.ssl.weights": {"tf": 1}, "graphlearning.ssl.ssl.class_priors_error": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson.solver": {"tf": 1}, "graphlearning.ssl.poisson.p": {"tf": 1}, "graphlearning.ssl.poisson.use_cuda": {"tf": 1}, "graphlearning.ssl.poisson.min_iter": {"tf": 1}, "graphlearning.ssl.poisson.max_iter": {"tf": 1}, "graphlearning.ssl.poisson.tol": {"tf": 1}, "graphlearning.ssl.poisson.spectral_cutoff": {"tf": 1}, "graphlearning.ssl.poisson.accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson.name": {"tf": 1}, "graphlearning.ssl.poisson_mbo": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.poisson_model": {"tf": 1}, "graphlearning.ssl.poisson_mbo.Ns": {"tf": 1}, "graphlearning.ssl.poisson_mbo.mu": {"tf": 1}, "graphlearning.ssl.poisson_mbo.T": {"tf": 1}, "graphlearning.ssl.poisson_mbo.use_cuda": {"tf": 1}, "graphlearning.ssl.poisson_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson_mbo.name": {"tf": 1}, "graphlearning.ssl.volume_mbo": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.class_counts": {"tf": 1}, "graphlearning.ssl.volume_mbo.temperature": {"tf": 1}, "graphlearning.ssl.volume_mbo.volume_constraint": {"tf": 1}, "graphlearning.ssl.volume_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.volume_mbo.name": {"tf": 1}, "graphlearning.ssl.multiclass_mbo": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.Ns": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.T": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.dt": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.mu": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.num_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.name": {"tf": 1}, "graphlearning.ssl.modularity_mbo": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.gamma": {"tf": 1}, "graphlearning.ssl.modularity_mbo.epsilon": {"tf": 1}, "graphlearning.ssl.modularity_mbo.lamb": {"tf": 1}, "graphlearning.ssl.modularity_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.modularity_mbo.T": {"tf": 1}, "graphlearning.ssl.modularity_mbo.Ns": {"tf": 1}, "graphlearning.ssl.modularity_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.modularity_mbo.name": {"tf": 1}, "graphlearning.ssl.laplace": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.laplace.reweighting": {"tf": 1}, "graphlearning.ssl.laplace.normalization": {"tf": 1}, "graphlearning.ssl.laplace.mean_shift": {"tf": 1}, "graphlearning.ssl.laplace.tol": {"tf": 1}, "graphlearning.ssl.laplace.order": {"tf": 1}, "graphlearning.ssl.laplace.X": {"tf": 1}, "graphlearning.ssl.laplace.name": {"tf": 1}, "graphlearning.ssl.laplace.accuracy_filename": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.alpha": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.lam": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.T": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.name": {"tf": 1}, "graphlearning.ssl.centered_kernel": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.tol": {"tf": 1}, "graphlearning.ssl.centered_kernel.power_it": {"tf": 1}, "graphlearning.ssl.centered_kernel.alpha": {"tf": 1}, "graphlearning.ssl.centered_kernel.accuracy_filename": {"tf": 1}, "graphlearning.ssl.centered_kernel.name": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.T": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.name": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.alpha": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.name": {"tf": 1}, "graphlearning.ssl.amle": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.amle.tol": {"tf": 1}, "graphlearning.ssl.amle.max_num_it": {"tf": 1}, "graphlearning.ssl.amle.weighted": {"tf": 1}, "graphlearning.ssl.amle.prog": {"tf": 1}, "graphlearning.ssl.amle.onevsrest": {"tf": 1}, "graphlearning.ssl.amle.accuracy_filename": {"tf": 1}, "graphlearning.ssl.amle.name": {"tf": 1}, "graphlearning.ssl.peikonal": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.p": {"tf": 1}, "graphlearning.ssl.peikonal.alpha": {"tf": 1}, "graphlearning.ssl.peikonal.max_num_it": {"tf": 1}, "graphlearning.ssl.peikonal.tol": {"tf": 1}, "graphlearning.ssl.peikonal.num_bisection_it": {"tf": 1}, "graphlearning.ssl.peikonal.onevsrest": {"tf": 1}, "graphlearning.ssl.peikonal.similarity": {"tf": 1}, "graphlearning.ssl.peikonal.accuracy_filename": {"tf": 1}, "graphlearning.ssl.peikonal.name": {"tf": 1}, "graphlearning.ssl.plaplace": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.p": {"tf": 1}, "graphlearning.ssl.plaplace.max_num_it": {"tf": 1}, "graphlearning.ssl.plaplace.tol": {"tf": 1}, "graphlearning.ssl.plaplace.onevsrest": {"tf": 1}, "graphlearning.ssl.plaplace.fast": {"tf": 1}, "graphlearning.ssl.plaplace.accuracy_filename": {"tf": 1}, "graphlearning.ssl.plaplace.name": {"tf": 1}, "graphlearning.ssl.randomwalk": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.alpha": {"tf": 1}, "graphlearning.ssl.randomwalk.accuracy_filename": {"tf": 1}, "graphlearning.ssl.randomwalk.name": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}, "graphlearning.trainsets.trainset_dir": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.csvread": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1}, "graphlearning.utils.download_file": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1}, "graphlearning.utils.torch_sparse": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.knn_dir": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 290}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"2": {"docs": {"graphlearning.active_learning.v_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.sigma_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.gamma2": {"tf": 1}}, "df": 4}, "docs": {"graphlearning.ssl.modularity_mbo.gamma": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.active_learner": {"tf": 1.4142135623730951}, "graphlearning.active_learning.active_learner.__init__": {"tf": 1.4142135623730951}, "graphlearning.active_learning.active_learner.model": {"tf": 1.4142135623730951}, "graphlearning.active_learning.active_learner.labeled_ind": {"tf": 1.4142135623730951}, "graphlearning.active_learning.active_learner.labels": {"tf": 1.4142135623730951}, "graphlearning.active_learning.active_learner.acq_function": {"tf": 1.4142135623730951}, "graphlearning.active_learning.active_learner.policy": {"tf": 1.4142135623730951}, "graphlearning.active_learning.active_learner.u": {"tf": 1.4142135623730951}, "graphlearning.active_learning.active_learner.n": {"tf": 1.4142135623730951}, "graphlearning.active_learning.active_learner.all_inds": {"tf": 1.4142135623730951}, "graphlearning.active_learning.active_learner.unlabeled_ind": {"tf": 1.4142135623730951}, "graphlearning.active_learning.active_learner.printed_warning": {"tf": 1.4142135623730951}, "graphlearning.active_learning.active_learner.select_queries": {"tf": 1.4142135623730951}, "graphlearning.active_learning.active_learner.update": {"tf": 1.4142135623730951}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.acquisition_function.update": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.unc_sampling.unc_method": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.v_opt.C": {"tf": 1}, "graphlearning.active_learning.v_opt.V": {"tf": 1}, "graphlearning.active_learning.v_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.update": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.C": {"tf": 1}, "graphlearning.active_learning.sigma_opt.V": {"tf": 1}, "graphlearning.active_learning.sigma_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.update": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.C": {"tf": 1}, "graphlearning.active_learning.model_change.V": {"tf": 1}, "graphlearning.active_learning.model_change.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change.update": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.C": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.V": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1}}, "df": 52}}}}, "q": {"docs": {"graphlearning.active_learning.active_learner.acq_function": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.acquisition_function.update": {"tf": 1}}, "df": 3}}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.ssl.ssl.accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson.accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.volume_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.modularity_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.laplace.accuracy_filename": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.centered_kernel.accuracy_filename": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"tf": 1}, "graphlearning.ssl.amle.accuracy_filename": {"tf": 1}, "graphlearning.ssl.peikonal.accuracy_filename": {"tf": 1}, "graphlearning.ssl.plaplace.accuracy_filename": {"tf": 1}, "graphlearning.ssl.randomwalk.accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 20}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.active_learner.all_inds": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.ssl.dynamic_label_propagation.alpha": {"tf": 1}, "graphlearning.ssl.centered_kernel.alpha": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.alpha": {"tf": 1}, "graphlearning.ssl.peikonal.alpha": {"tf": 1}, "graphlearning.ssl.randomwalk.alpha": {"tf": 1}}, "df": 5}}}}, "d": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.adjacency": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.amle": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.amle.tol": {"tf": 1}, "graphlearning.ssl.amle.max_num_it": {"tf": 1}, "graphlearning.ssl.amle.weighted": {"tf": 1}, "graphlearning.ssl.amle.prog": {"tf": 1}, "graphlearning.ssl.amle.onevsrest": {"tf": 1}, "graphlearning.ssl.amle.accuracy_filename": {"tf": 1}, "graphlearning.ssl.amle.name": {"tf": 1}}, "df": 10}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.rand_annulus": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.active_learner": {"tf": 1}, "graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.active_learning.active_learner.model": {"tf": 1}, "graphlearning.active_learning.active_learner.labeled_ind": {"tf": 1}, "graphlearning.active_learning.active_learner.labels": {"tf": 1}, "graphlearning.active_learning.active_learner.acq_function": {"tf": 1}, "graphlearning.active_learning.active_learner.policy": {"tf": 1}, "graphlearning.active_learning.active_learner.u": {"tf": 1}, "graphlearning.active_learning.active_learner.n": {"tf": 1}, "graphlearning.active_learning.active_learner.all_inds": {"tf": 1}, "graphlearning.active_learning.active_learner.unlabeled_ind": {"tf": 1}, "graphlearning.active_learning.active_learner.printed_warning": {"tf": 1}, "graphlearning.active_learning.active_learner.select_queries": {"tf": 1}, "graphlearning.active_learning.active_learner.update": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.acquisition_function.update": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.unc_sampling.unc_method": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.v_opt.C": {"tf": 1}, "graphlearning.active_learning.v_opt.V": {"tf": 1}, "graphlearning.active_learning.v_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.update": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.C": {"tf": 1}, "graphlearning.active_learning.sigma_opt.V": {"tf": 1}, "graphlearning.active_learning.sigma_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.update": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.C": {"tf": 1}, "graphlearning.active_learning.model_change.V": {"tf": 1}, "graphlearning.active_learning.model_change.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change.update": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.C": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.V": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1}}, "df": 52}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning.active_learner": {"tf": 1}, "graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.active_learning.active_learner.model": {"tf": 1}, "graphlearning.active_learning.active_learner.labeled_ind": {"tf": 1}, "graphlearning.active_learning.active_learner.labels": {"tf": 1}, "graphlearning.active_learning.active_learner.acq_function": {"tf": 1}, "graphlearning.active_learning.active_learner.policy": {"tf": 1}, "graphlearning.active_learning.active_learner.u": {"tf": 1}, "graphlearning.active_learning.active_learner.n": {"tf": 1}, "graphlearning.active_learning.active_learner.all_inds": {"tf": 1}, "graphlearning.active_learning.active_learner.unlabeled_ind": {"tf": 1}, "graphlearning.active_learning.active_learner.printed_warning": {"tf": 1}, "graphlearning.active_learning.active_learner.select_queries": {"tf": 1}, "graphlearning.active_learning.active_learner.update": {"tf": 1}}, "df": 14}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.alpha": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.lam": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.T": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.name": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.T": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.name": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.active_learner.labeled_ind": {"tf": 1}}, "df": 1}}, "s": {"docs": {"graphlearning.active_learning.active_learner.labels": {"tf": 1}, "graphlearning.clustering.clustering.cluster_labels": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"graphlearning.ssl.laplace": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.laplace.reweighting": {"tf": 1}, "graphlearning.ssl.laplace.normalization": {"tf": 1}, "graphlearning.ssl.laplace.mean_shift": {"tf": 1}, "graphlearning.ssl.laplace.tol": {"tf": 1}, "graphlearning.ssl.laplace.order": {"tf": 1}, "graphlearning.ssl.laplace.X": {"tf": 1}, "graphlearning.ssl.laplace.name": {"tf": 1}, "graphlearning.ssl.laplace.accuracy_filename": {"tf": 1}}, "df": 10}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.largest_connected_component": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {"graphlearning.ssl.dynamic_label_propagation.lam": {"tf": 1}}, "df": 1, "b": {"docs": {"graphlearning.ssl.modularity_mbo.lamb": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.datasets.load": {"tf": 1}, "graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.graph.graph.load": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {"graphlearning.graph.graph.I": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.clustering.clustering.__init__": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.ssl.ssl.__init__": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 26}}, "d": {"docs": {"graphlearning.active_learning.active_learner.labeled_ind": {"tf": 1}, "graphlearning.active_learning.active_learner.unlabeled_ind": {"tf": 1}}, "df": 2, "s": {"docs": {"graphlearning.active_learning.active_learner.all_inds": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.incres": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.incres.speed": {"tf": 1}, "graphlearning.clustering.incres.T": {"tf": 1}}, "df": 4}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.infinity_laplacian": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.isconnected": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {"graphlearning.ssl.centered_kernel.power_it": {"tf": 1}, "graphlearning.ssl.amle.max_num_it": {"tf": 1}, "graphlearning.ssl.peikonal.max_num_it": {"tf": 1}, "graphlearning.ssl.peikonal.num_bisection_it": {"tf": 1}, "graphlearning.ssl.plaplace.max_num_it": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.poisson.min_iter": {"tf": 1}, "graphlearning.ssl.poisson.max_iter": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.active_learner.model": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.C": {"tf": 1}, "graphlearning.active_learning.model_change.V": {"tf": 1}, "graphlearning.active_learning.model_change.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change.update": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.C": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.V": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1}, "graphlearning.ssl.poisson_mbo.poisson_model": {"tf": 1}}, "df": 18}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl.modularity_mbo": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.gamma": {"tf": 1}, "graphlearning.ssl.modularity_mbo.epsilon": {"tf": 1}, "graphlearning.ssl.modularity_mbo.lamb": {"tf": 1}, "graphlearning.ssl.modularity_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.modularity_mbo.T": {"tf": 1}, "graphlearning.ssl.modularity_mbo.Ns": {"tf": 1}, "graphlearning.ssl.modularity_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.modularity_mbo.name": {"tf": 1}}, "df": 10}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.unc_sampling.unc_method": {"tf": 1}, "graphlearning.clustering.spectral.method": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.laplace.mean_shift": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.utils.mesh": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"graphlearning.graph.graph.weight_matrix": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {"graphlearning.ssl.poisson.max_iter": {"tf": 1}, "graphlearning.ssl.amle.max_num_it": {"tf": 1}, "graphlearning.ssl.peikonal.max_num_it": {"tf": 1}, "graphlearning.ssl.plaplace.max_num_it": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.poisson.min_iter": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.ssl.poisson_mbo": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.poisson_model": {"tf": 1}, "graphlearning.ssl.poisson_mbo.Ns": {"tf": 1}, "graphlearning.ssl.poisson_mbo.mu": {"tf": 1}, "graphlearning.ssl.poisson_mbo.T": {"tf": 1}, "graphlearning.ssl.poisson_mbo.use_cuda": {"tf": 1}, "graphlearning.ssl.poisson_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson_mbo.name": {"tf": 1}, "graphlearning.ssl.volume_mbo": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.class_counts": {"tf": 1}, "graphlearning.ssl.volume_mbo.temperature": {"tf": 1}, "graphlearning.ssl.volume_mbo.volume_constraint": {"tf": 1}, "graphlearning.ssl.volume_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.volume_mbo.name": {"tf": 1}, "graphlearning.ssl.multiclass_mbo": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.Ns": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.T": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.dt": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.mu": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.num_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.name": {"tf": 1}, "graphlearning.ssl.modularity_mbo": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.gamma": {"tf": 1}, "graphlearning.ssl.modularity_mbo.epsilon": {"tf": 1}, "graphlearning.ssl.modularity_mbo.lamb": {"tf": 1}, "graphlearning.ssl.modularity_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.modularity_mbo.T": {"tf": 1}, "graphlearning.ssl.modularity_mbo.Ns": {"tf": 1}, "graphlearning.ssl.modularity_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.modularity_mbo.name": {"tf": 1}}, "df": 36}}, "u": {"docs": {"graphlearning.ssl.poisson_mbo.mu": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.mu": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.multiclass_mbo": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.Ns": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.T": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.dt": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.mu": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.num_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.name": {"tf": 1}}, "df": 10}}}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.active_learner.acq_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.acquisition_function.update": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.clustering.fit": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.clustering.fitted": {"tf": 1}, "graphlearning.ssl.ssl.fitted": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.fiedler_vector": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.download_file": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson.accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.volume_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.modularity_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.laplace.accuracy_filename": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.centered_kernel.accuracy_filename": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"tf": 1}, "graphlearning.ssl.amle.accuracy_filename": {"tf": 1}, "graphlearning.ssl.peikonal.accuracy_filename": {"tf": 1}, "graphlearning.ssl.plaplace.accuracy_filename": {"tf": 1}, "graphlearning.ssl.randomwalk.accuracy_filename": {"tf": 1}}, "df": 16}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.clustering.fokker_planck": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.beta": {"tf": 1}, "graphlearning.clustering.fokker_planck.t": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.plaplace.fast": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"graphlearning.ssl.poisson.p": {"tf": 1}, "graphlearning.ssl.peikonal.p": {"tf": 1}, "graphlearning.ssl.plaplace.p": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning.active_learner.policy": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.poisson": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson.solver": {"tf": 1}, "graphlearning.ssl.poisson.p": {"tf": 1}, "graphlearning.ssl.poisson.use_cuda": {"tf": 1}, "graphlearning.ssl.poisson.min_iter": {"tf": 1}, "graphlearning.ssl.poisson.max_iter": {"tf": 1}, "graphlearning.ssl.poisson.tol": {"tf": 1}, "graphlearning.ssl.poisson.spectral_cutoff": {"tf": 1}, "graphlearning.ssl.poisson.accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson.name": {"tf": 1}, "graphlearning.ssl.poisson_mbo": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.poisson_model": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.Ns": {"tf": 1}, "graphlearning.ssl.poisson_mbo.mu": {"tf": 1}, "graphlearning.ssl.poisson_mbo.T": {"tf": 1}, "graphlearning.ssl.poisson_mbo.use_cuda": {"tf": 1}, "graphlearning.ssl.poisson_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson_mbo.name": {"tf": 1}}, "df": 20}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.centered_kernel.power_it": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.active_learner.printed_warning": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.class_priors": {"tf": 1}, "graphlearning.ssl.ssl.class_priors_error": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {"graphlearning.ssl.ssl.prob": {"tf": 1}}, "df": 1}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.dynamic_label_propagation": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.alpha": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.lam": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.T": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.name": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.T": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.name": {"tf": 1}}, "df": 12}}}}}}}}, "g": {"docs": {"graphlearning.ssl.amle.prog": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.clustering.fokker_planck": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.beta": {"tf": 1}, "graphlearning.clustering.fokker_planck.t": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl.plaplace": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.p": {"tf": 1}, "graphlearning.ssl.plaplace.max_num_it": {"tf": 1}, "graphlearning.ssl.plaplace.tol": {"tf": 1}, "graphlearning.ssl.plaplace.onevsrest": {"tf": 1}, "graphlearning.ssl.plaplace.fast": {"tf": 1}, "graphlearning.ssl.plaplace.accuracy_filename": {"tf": 1}, "graphlearning.ssl.plaplace.name": {"tf": 1}}, "df": 10}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.purity": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.peikonal": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.p": {"tf": 1}, "graphlearning.ssl.peikonal.alpha": {"tf": 1}, "graphlearning.ssl.peikonal.max_num_it": {"tf": 1}, "graphlearning.ssl.peikonal.tol": {"tf": 1}, "graphlearning.ssl.peikonal.num_bisection_it": {"tf": 1}, "graphlearning.ssl.peikonal.onevsrest": {"tf": 1}, "graphlearning.ssl.peikonal.similarity": {"tf": 1}, "graphlearning.ssl.peikonal.accuracy_filename": {"tf": 1}, "graphlearning.ssl.peikonal.name": {"tf": 1}}, "df": 12}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.page_rank": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {"graphlearning.active_learning.active_learner.u": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.active_learner.unlabeled_ind": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.unc_sampling.unc_method": {"tf": 1.4142135623730951}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.model_change.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"tf": 1}}, "df": 6}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.active_learner.update": {"tf": 1}, "graphlearning.active_learning.acquisition_function.update": {"tf": 1}, "graphlearning.active_learning.v_opt.update": {"tf": 1}, "graphlearning.active_learning.sigma_opt.update": {"tf": 1}, "graphlearning.active_learning.model_change.update": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.poisson.use_cuda": {"tf": 1}, "graphlearning.ssl.poisson_mbo.use_cuda": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.csvread": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1}, "graphlearning.utils.download_file": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1}, "graphlearning.utils.torch_sparse": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 22}}}}}, "n": {"docs": {"graphlearning.active_learning.active_learner.n": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.clustering.clustering.num_clusters": {"tf": 1}, "graphlearning.graph.graph.num_nodes": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.num_eig": {"tf": 1}, "graphlearning.ssl.amle.max_num_it": {"tf": 1}, "graphlearning.ssl.peikonal.max_num_it": {"tf": 1}, "graphlearning.ssl.peikonal.num_bisection_it": {"tf": 1}, "graphlearning.ssl.plaplace.max_num_it": {"tf": 1}}, "df": 7, "p": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.utils.numpy_load": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.num_nodes": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.laplace.normalization": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.name": {"tf": 1}, "graphlearning.ssl.poisson.name": {"tf": 1}, "graphlearning.ssl.poisson_mbo.name": {"tf": 1}, "graphlearning.ssl.volume_mbo.name": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.name": {"tf": 1}, "graphlearning.ssl.modularity_mbo.name": {"tf": 1}, "graphlearning.ssl.laplace.name": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.name": {"tf": 1}, "graphlearning.ssl.centered_kernel.name": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.name": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.name": {"tf": 1}, "graphlearning.ssl.amle.name": {"tf": 1}, "graphlearning.ssl.peikonal.name": {"tf": 1}, "graphlearning.ssl.plaplace.name": {"tf": 1}, "graphlearning.ssl.randomwalk.name": {"tf": 1}}, "df": 15}}}, "s": {"docs": {"graphlearning.ssl.poisson_mbo.Ns": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.Ns": {"tf": 1}, "graphlearning.ssl.modularity_mbo.Ns": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.graph_nearest_neighbor": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.alpha": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.name": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.graph_nearest_neighbor": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.alpha": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.name": {"tf": 1}}, "df": 5}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning.active_learner.printed_warning": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.withinss": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.weight_matrix": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.ssl.ssl.weights": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.amle.weighted": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.knn_dir": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 7}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"graphlearning.ssl.ssl.set_graph": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.unc_sampling.unc_method": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.model_change.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"tf": 1}}, "df": 6}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.graph.graph.save": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.C": {"tf": 1}, "graphlearning.active_learning.sigma_opt.V": {"tf": 1}, "graphlearning.active_learning.sigma_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.update": {"tf": 1}}, "df": 7}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl.ssl.similarity": {"tf": 1}, "graphlearning.ssl.peikonal.similarity": {"tf": 1}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.clustering.spectral": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.spectral.method": {"tf": 1}, "graphlearning.clustering.spectral.extra_dim": {"tf": 1}, "graphlearning.ssl.poisson.spectral_cutoff": {"tf": 1}}, "df": 5}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.incres.speed": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.sparse_label_propagation": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.T": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.name": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1}, "graphlearning.utils.torch_sparse": {"tf": 1}}, "df": 7}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.graph.graph.subgraph": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.results_dir": {"tf": 1}, "graphlearning.ssl.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.prob": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fitted": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.name": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.accuracy_filename": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.requires_eig": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.onevsrest": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.similarity": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.class_priors": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.weights": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.class_priors_error": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.set_graph": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson.solver": {"tf": 1}, "graphlearning.ssl.poisson.p": {"tf": 1}, "graphlearning.ssl.poisson.use_cuda": {"tf": 1}, "graphlearning.ssl.poisson.min_iter": {"tf": 1}, "graphlearning.ssl.poisson.max_iter": {"tf": 1}, "graphlearning.ssl.poisson.tol": {"tf": 1}, "graphlearning.ssl.poisson.spectral_cutoff": {"tf": 1}, "graphlearning.ssl.poisson.accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson.name": {"tf": 1}, "graphlearning.ssl.poisson_mbo": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.poisson_model": {"tf": 1}, "graphlearning.ssl.poisson_mbo.Ns": {"tf": 1}, "graphlearning.ssl.poisson_mbo.mu": {"tf": 1}, "graphlearning.ssl.poisson_mbo.T": {"tf": 1}, "graphlearning.ssl.poisson_mbo.use_cuda": {"tf": 1}, "graphlearning.ssl.poisson_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson_mbo.name": {"tf": 1}, "graphlearning.ssl.volume_mbo": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.class_counts": {"tf": 1}, "graphlearning.ssl.volume_mbo.temperature": {"tf": 1}, "graphlearning.ssl.volume_mbo.volume_constraint": {"tf": 1}, "graphlearning.ssl.volume_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.volume_mbo.name": {"tf": 1}, "graphlearning.ssl.multiclass_mbo": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.Ns": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.T": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.dt": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.mu": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.num_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.name": {"tf": 1}, "graphlearning.ssl.modularity_mbo": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.gamma": {"tf": 1}, "graphlearning.ssl.modularity_mbo.epsilon": {"tf": 1}, "graphlearning.ssl.modularity_mbo.lamb": {"tf": 1}, "graphlearning.ssl.modularity_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.modularity_mbo.T": {"tf": 1}, "graphlearning.ssl.modularity_mbo.Ns": {"tf": 1}, "graphlearning.ssl.modularity_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.modularity_mbo.name": {"tf": 1}, "graphlearning.ssl.laplace": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.laplace.reweighting": {"tf": 1}, "graphlearning.ssl.laplace.normalization": {"tf": 1}, "graphlearning.ssl.laplace.mean_shift": {"tf": 1}, "graphlearning.ssl.laplace.tol": {"tf": 1}, "graphlearning.ssl.laplace.order": {"tf": 1}, "graphlearning.ssl.laplace.X": {"tf": 1}, "graphlearning.ssl.laplace.name": {"tf": 1}, "graphlearning.ssl.laplace.accuracy_filename": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.alpha": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.lam": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.T": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.name": {"tf": 1}, "graphlearning.ssl.centered_kernel": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.tol": {"tf": 1}, "graphlearning.ssl.centered_kernel.power_it": {"tf": 1}, "graphlearning.ssl.centered_kernel.alpha": {"tf": 1}, "graphlearning.ssl.centered_kernel.accuracy_filename": {"tf": 1}, "graphlearning.ssl.centered_kernel.name": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.T": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.name": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.alpha": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.name": {"tf": 1}, "graphlearning.ssl.amle": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.amle.tol": {"tf": 1}, "graphlearning.ssl.amle.max_num_it": {"tf": 1}, "graphlearning.ssl.amle.weighted": {"tf": 1}, "graphlearning.ssl.amle.prog": {"tf": 1}, "graphlearning.ssl.amle.onevsrest": {"tf": 1}, "graphlearning.ssl.amle.accuracy_filename": {"tf": 1}, "graphlearning.ssl.amle.name": {"tf": 1}, "graphlearning.ssl.peikonal": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.p": {"tf": 1}, "graphlearning.ssl.peikonal.alpha": {"tf": 1}, "graphlearning.ssl.peikonal.max_num_it": {"tf": 1}, "graphlearning.ssl.peikonal.tol": {"tf": 1}, "graphlearning.ssl.peikonal.num_bisection_it": {"tf": 1}, "graphlearning.ssl.peikonal.onevsrest": {"tf": 1}, "graphlearning.ssl.peikonal.similarity": {"tf": 1}, "graphlearning.ssl.peikonal.accuracy_filename": {"tf": 1}, "graphlearning.ssl.peikonal.name": {"tf": 1}, "graphlearning.ssl.plaplace": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.p": {"tf": 1}, "graphlearning.ssl.plaplace.max_num_it": {"tf": 1}, "graphlearning.ssl.plaplace.tol": {"tf": 1}, "graphlearning.ssl.plaplace.onevsrest": {"tf": 1}, "graphlearning.ssl.plaplace.fast": {"tf": 1}, "graphlearning.ssl.plaplace.accuracy_filename": {"tf": 1}, "graphlearning.ssl.plaplace.name": {"tf": 1}, "graphlearning.ssl.randomwalk": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.alpha": {"tf": 1}, "graphlearning.ssl.randomwalk.accuracy_filename": {"tf": 1}, "graphlearning.ssl.randomwalk.name": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 140}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.ssl.ssl.trials_statistics": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 2, "r": {"docs": {"graphlearning.ssl.poisson.solver": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.laplace.mean_shift": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {"graphlearning.active_learning.v_opt.C": {"tf": 1}, "graphlearning.active_learning.sigma_opt.C": {"tf": 1}, "graphlearning.active_learning.model_change.C": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.C": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.largest_connected_component": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.largest_connected_component": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.volume_mbo.volume_constraint": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 2}}}}}}}}, "j": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.conjgrad": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.volume_mbo.class_counts": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.C": {"tf": 1}, "graphlearning.active_learning.model_change.V": {"tf": 1}, "graphlearning.active_learning.model_change.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change.update": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.C": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.V": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1}}, "df": 16}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.clustering.clustering.cluster_labels": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.clustering": {"tf": 1}, "graphlearning.clustering.clustering": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.cluster_labels": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.num_clusters": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.fitted": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.predict": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.fit": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.spectral.method": {"tf": 1}, "graphlearning.clustering.spectral.extra_dim": {"tf": 1}, "graphlearning.clustering.fokker_planck": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.beta": {"tf": 1}, "graphlearning.clustering.fokker_planck.t": {"tf": 1}, "graphlearning.clustering.incres": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.incres.speed": {"tf": 1}, "graphlearning.clustering.incres.T": {"tf": 1}, "graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1.4142135623730951}, "graphlearning.clustering.purity": {"tf": 1}}, "df": 25}}}, "s": {"docs": {"graphlearning.clustering.clustering.num_clusters": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.class_priors": {"tf": 1}, "graphlearning.ssl.ssl.class_priors_error": {"tf": 1}, "graphlearning.ssl.volume_mbo.class_counts": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.ssl.poisson.use_cuda": {"tf": 1}, "graphlearning.ssl.poisson_mbo.use_cuda": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"graphlearning.ssl.poisson.spectral_cutoff": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.centered_kernel": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.tol": {"tf": 1}, "graphlearning.ssl.centered_kernel.power_it": {"tf": 1}, "graphlearning.ssl.centered_kernel.alpha": {"tf": 1}, "graphlearning.ssl.centered_kernel.accuracy_filename": {"tf": 1}, "graphlearning.ssl.centered_kernel.name": {"tf": 1}}, "df": 7}}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.csvread": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.v_opt.C": {"tf": 1}, "graphlearning.active_learning.v_opt.V": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.update": {"tf": 1}, "graphlearning.active_learning.sigma_opt.V": {"tf": 1}, "graphlearning.active_learning.model_change.V": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.V": {"tf": 1}, "graphlearning.graph.graph.V": {"tf": 1}}, "df": 11, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.C": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.V": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.gamma2": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1}}, "df": 8}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.volume_mbo": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.class_counts": {"tf": 1}, "graphlearning.ssl.volume_mbo.temperature": {"tf": 1}, "graphlearning.ssl.volume_mbo.volume_constraint": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.accuracy_filename": {"tf": 1}, "graphlearning.ssl.volume_mbo.name": {"tf": 1}}, "df": 8}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.v_opt.C": {"tf": 1}, "graphlearning.active_learning.v_opt.V": {"tf": 1}, "graphlearning.active_learning.v_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.update": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.C": {"tf": 1}, "graphlearning.active_learning.sigma_opt.V": {"tf": 1}, "graphlearning.active_learning.sigma_opt.gamma2": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.update": {"tf": 1}}, "df": 14}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.ssl.onevsrest": {"tf": 1}, "graphlearning.ssl.amle.onevsrest": {"tf": 1}, "graphlearning.ssl.peikonal.onevsrest": {"tf": 1}, "graphlearning.ssl.plaplace.onevsrest": {"tf": 1}}, "df": 4}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.labels_to_onehot": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.laplace.order": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.clustering.spectral.extra_dim": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.ssl.requires_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.num_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.modularity_mbo.requires_eig": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.graph.graph.eigendata": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.ssl.class_priors_error": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.modularity_mbo.epsilon": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.clustering.spectral.extra_dim": {"tf": 1}}, "df": 1}, "r": {"docs": {"graphlearning.datasets.data_dir": {"tf": 1}, "graphlearning.ssl.results_dir": {"tf": 1}, "graphlearning.trainsets.trainset_dir": {"tf": 1}, "graphlearning.weightmatrix.knn_dir": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.divergence": {"tf": 1}}, "df": 1}}}}}}}}, "j": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.datasets.data_dir": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.datasets": {"tf": 1}, "graphlearning.datasets.data_dir": {"tf": 1}, "graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.datasets.load_image": {"tf": 1}}, "df": 6}}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"graphlearning.ssl.multiclass_mbo.dt": {"tf": 1}}, "df": 1}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.ssl.dynamic_label_propagation": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.alpha": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.lam": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.T": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.name": {"tf": 1}}, "df": 7}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.download_file": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.clustering.fokker_planck.beta": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.utils.bean_data": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.peikonal.num_bisection_it": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"graphlearning.clustering.fokker_planck.t": {"tf": 1}, "graphlearning.clustering.incres.T": {"tf": 1}, "graphlearning.ssl.poisson_mbo.T": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.T": {"tf": 1}, "graphlearning.ssl.modularity_mbo.T": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.T": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.T": {"tf": 1}}, "df": 7, "w": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.trainsets.trainset_dir": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.trainsets": {"tf": 1}, "graphlearning.trainsets.trainset_dir": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 4}}}}}}}}, "o": {"docs": {"graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 3, "l": {"docs": {"graphlearning.ssl.poisson.tol": {"tf": 1}, "graphlearning.ssl.laplace.tol": {"tf": 1}, "graphlearning.ssl.centered_kernel.tol": {"tf": 1}, "graphlearning.ssl.amle.tol": {"tf": 1}, "graphlearning.ssl.peikonal.tol": {"tf": 1}, "graphlearning.ssl.plaplace.tol": {"tf": 1}}, "df": 6}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.utils.torch_sparse": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.volume_mbo.temperature": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "p": {"1": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}}, "df": 3, "n": {"docs": {"graphlearning.graph.graph.randn": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.ssl.randomwalk": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.alpha": {"tf": 1}, "graphlearning.ssl.randomwalk.accuracy_filename": {"tf": 1}, "graphlearning.ssl.randomwalk.name": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {"graphlearning.graph.graph.page_rank": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.laplace.reweighting": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.results_dir": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.requires_eig": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.requires_eig": {"tf": 1}, "graphlearning.ssl.modularity_mbo.requires_eig": {"tf": 1}}, "df": 3}}}}}}}}, "k": {"docs": {"graphlearning.graph.graph.K": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.centered_kernel": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.tol": {"tf": 1}, "graphlearning.ssl.centered_kernel.power_it": {"tf": 1}, "graphlearning.ssl.centered_kernel.alpha": {"tf": 1}, "graphlearning.ssl.centered_kernel.accuracy_filename": {"tf": 1}, "graphlearning.ssl.centered_kernel.name": {"tf": 1}}, "df": 7}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.weightmatrix.knn_dir": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 1}}}}}}}}}, "j": {"docs": {"graphlearning.graph.graph.J": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}}, "df": 1}}, "x": {"docs": {"graphlearning.ssl.laplace.X": {"tf": 1}}, "df": 1}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {"graphlearning.datasets.data_dir": {"tf": 1.4142135623730951}, "graphlearning.ssl.results_dir": {"tf": 1.4142135623730951}, "graphlearning.trainsets.trainset_dir": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn_dir": {"tf": 1.4142135623730951}}, "df": 4, "x": {"2": {"7": {"docs": {"graphlearning.datasets.data_dir": {"tf": 1.4142135623730951}, "graphlearning.ssl.results_dir": {"tf": 1.4142135623730951}, "graphlearning.trainsets.trainset_dir": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn_dir": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.datasets.data_dir": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.results_dir": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.trainsets.trainset_dir": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.weightmatrix.knn_dir": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.weightmatrix.knn_dir": {"tf": 1}}, "df": 1}}}}}}, "signature": {"root": {"0": {"0": {"1": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 6}, "docs": {}, "df": 0}, "1": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"2": {"docs": {"graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"docs": {"graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 5}, "docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.datasets.two_skies": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.gradient": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.reweight": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 30}, "1": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}, "docs": {"graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 2}, "docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {"graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}}, "df": 3}, "docs": {"graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 4}, "docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.color_image_grid": {"tf": 1.4142135623730951}}, "df": 12}, "2": {"8": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 2}, "6": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.utils.image_to_patches": {"tf": 1.4142135623730951}, "graphlearning.utils.patches_to_image": {"tf": 1.4142135623730951}}, "df": 3}, "docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1.7320508075688772}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 24, "e": {"docs": {"graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 7}}, "2": {"0": {"0": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 3}, "docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 5}, "3": {"0": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}}, "df": 2}, "9": {"docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 1.4142135623730951}, "graphlearning.active_learning.active_learner.select_queries": {"tf": 1.4142135623730951}, "graphlearning.active_learning.unc_sampling.__init__": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change.__init__": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.datasets.save": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.reweight": {"tf": 2}, "graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 2}, "graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_table": {"tf": 2.8284271247461903}, "graphlearning.trainsets.load": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 2.449489742783178}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 2}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.4142135623730951}}, "df": 26}, "docs": {}, "df": 0}, "4": {"0": {"0": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}}, "df": 3}, "docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.4142135623730951}}, "df": 4}, "6": {"4": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}, "8": {"5": {"docs": {"graphlearning.graph.graph.page_rank": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"5": {"docs": {"graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 6}, "graphlearning.active_learning.active_learner.select_queries": {"tf": 8.717797887081348}, "graphlearning.active_learning.active_learner.update": {"tf": 4.242640687119285}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 4.242640687119285}, "graphlearning.active_learning.acquisition_function.update": {"tf": 4.242640687119285}, "graphlearning.active_learning.unc_sampling.__init__": {"tf": 3.7416573867739413}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 4.242640687119285}, "graphlearning.active_learning.v_opt.__init__": {"tf": 4.898979485566356}, "graphlearning.active_learning.v_opt.compute": {"tf": 4.242640687119285}, "graphlearning.active_learning.v_opt.update": {"tf": 4.242640687119285}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 4.898979485566356}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 4.242640687119285}, "graphlearning.active_learning.sigma_opt.update": {"tf": 4.242640687119285}, "graphlearning.active_learning.model_change.__init__": {"tf": 5.830951894845301}, "graphlearning.active_learning.model_change.compute": {"tf": 4.242640687119285}, "graphlearning.active_learning.model_change.update": {"tf": 4.242640687119285}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 5.830951894845301}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 4.242640687119285}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 4.242640687119285}, "graphlearning.clustering.clustering.__init__": {"tf": 3.4641016151377544}, "graphlearning.clustering.clustering.predict": {"tf": 3.1622776601683795}, "graphlearning.clustering.clustering.fit_predict": {"tf": 4.242640687119285}, "graphlearning.clustering.clustering.fit": {"tf": 4.242640687119285}, "graphlearning.clustering.spectral.__init__": {"tf": 5.477225575051661}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 6}, "graphlearning.clustering.incres.__init__": {"tf": 5.291502622129181}, "graphlearning.clustering.withinss": {"tf": 3.1622776601683795}, "graphlearning.clustering.RP1D": {"tf": 4.242640687119285}, "graphlearning.clustering.clustering_accuracy": {"tf": 3.7416573867739413}, "graphlearning.clustering.purity": {"tf": 3.7416573867739413}, "graphlearning.datasets.two_skies": {"tf": 5.0990195135927845}, "graphlearning.datasets.save": {"tf": 6}, "graphlearning.datasets.load": {"tf": 5.291502622129181}, "graphlearning.datasets.load_image": {"tf": 3.1622776601683795}, "graphlearning.graph.graph.__init__": {"tf": 2.8284271247461903}, "graphlearning.graph.graph.subgraph": {"tf": 3.7416573867739413}, "graphlearning.graph.graph.degree_vector": {"tf": 3.1622776601683795}, "graphlearning.graph.graph.degree_matrix": {"tf": 4.242640687119285}, "graphlearning.graph.graph.rand": {"tf": 3.1622776601683795}, "graphlearning.graph.graph.randn": {"tf": 3.1622776601683795}, "graphlearning.graph.graph.adjacency": {"tf": 3.1622776601683795}, "graphlearning.graph.graph.gradient": {"tf": 5.477225575051661}, "graphlearning.graph.graph.divergence": {"tf": 4.69041575982343}, "graphlearning.graph.graph.reweight": {"tf": 9.1104335791443}, "graphlearning.graph.graph.laplacian": {"tf": 5.291502622129181}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 3.7416573867739413}, "graphlearning.graph.graph.isconnected": {"tf": 3.1622776601683795}, "graphlearning.graph.graph.largest_connected_component": {"tf": 3.1622776601683795}, "graphlearning.graph.graph.eigen_decomp": {"tf": 8.831760866327848}, "graphlearning.graph.graph.fiedler_vector": {"tf": 5.291502622129181}, "graphlearning.graph.graph.peikonal": {"tf": 10.392304845413264}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 6.782329983125268}, "graphlearning.graph.graph.dijkstra": {"tf": 6.782329983125268}, "graphlearning.graph.graph.plaplace": {"tf": 7.874007874011811}, "graphlearning.graph.graph.amle": {"tf": 7.54983443527075}, "graphlearning.graph.graph.save": {"tf": 3.7416573867739413}, "graphlearning.graph.graph.load": {"tf": 3.1622776601683795}, "graphlearning.graph.graph.page_rank": {"tf": 5.830951894845301}, "graphlearning.ssl.ssl.__init__": {"tf": 3.4641016151377544}, "graphlearning.ssl.ssl.set_graph": {"tf": 3.7416573867739413}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 3.1622776601683795}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 3.1622776601683795}, "graphlearning.ssl.ssl.predict": {"tf": 4.242640687119285}, "graphlearning.ssl.ssl.fit_predict": {"tf": 5.0990195135927845}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 8.246211251235321}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 4.47213595499958}, "graphlearning.ssl.ssl.fit": {"tf": 5.0990195135927845}, "graphlearning.ssl.poisson.__init__": {"tf": 9.327379053088816}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 10.246950765959598}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 6}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 7.745966692414834}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 7.745966692414834}, "graphlearning.ssl.laplace.__init__": {"tf": 10.770329614269007}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 6.6332495807108}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 6.6332495807108}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 5.291502622129181}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 6}, "graphlearning.ssl.amle.__init__": {"tf": 7.615773105863909}, "graphlearning.ssl.peikonal.__init__": {"tf": 9.219544457292887}, "graphlearning.ssl.plaplace.__init__": {"tf": 7.615773105863909}, "graphlearning.ssl.randomwalk.__init__": {"tf": 5.291502622129181}, "graphlearning.ssl.ssl_accuracy": {"tf": 4.242640687119285}, "graphlearning.ssl.accuracy_plot": {"tf": 10.14889156509222}, "graphlearning.ssl.accuracy_table": {"tf": 9.539392014169456}, "graphlearning.trainsets.load": {"tf": 4.47213595499958}, "graphlearning.trainsets.generate": {"tf": 8.717797887081348}, "graphlearning.utils.boundary_statistic": {"tf": 7.810249675906654}, "graphlearning.utils.class_priors": {"tf": 3.1622776601683795}, "graphlearning.utils.csvread": {"tf": 3.1622776601683795}, "graphlearning.utils.numpy_load": {"tf": 3.7416573867739413}, "graphlearning.utils.download_file": {"tf": 3.7416573867739413}, "graphlearning.utils.sparse_max": {"tf": 3.7416573867739413}, "graphlearning.utils.torch_sparse": {"tf": 3.1622776601683795}, "graphlearning.utils.constrained_solve": {"tf": 6.48074069840786}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 4.242640687119285}, "graphlearning.utils.constrained_solve_gmres": {"tf": 5.830951894845301}, "graphlearning.utils.conjgrad": {"tf": 6.164414002968976}, "graphlearning.utils.labels_to_onehot": {"tf": 4.242640687119285}, "graphlearning.utils.randomized_svd": {"tf": 5.830951894845301}, "graphlearning.utils.rand_annulus": {"tf": 4.69041575982343}, "graphlearning.utils.rand_ball": {"tf": 3.7416573867739413}, "graphlearning.utils.bean_data": {"tf": 3.7416573867739413}, "graphlearning.utils.mesh": {"tf": 4.242640687119285}, "graphlearning.utils.image_grid": {"tf": 9.1104335791443}, "graphlearning.utils.color_image_grid": {"tf": 9.1104335791443}, "graphlearning.utils.image_to_patches": {"tf": 5.385164807134504}, "graphlearning.utils.patches_to_image": {"tf": 5.744562646538029}, "graphlearning.weightmatrix.knn": {"tf": 8.717797887081348}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 7.937253933193772}, "graphlearning.weightmatrix.knnsearch": {"tf": 7.483314773547883}, "graphlearning.weightmatrix.load_knn_data": {"tf": 4.47213595499958}, "graphlearning.weightmatrix.vae": {"tf": 8.06225774829855}}, "df": 112, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 12}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 8}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}}, "df": 2}}, "u": {"docs": {"graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 2}}, "a": {"docs": {"graphlearning.utils.sparse_max": {"tf": 1}, "graphlearning.utils.torch_sparse": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "q": {"docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.active_learning.active_learner.select_queries": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.clustering.fit": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "w": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 9}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 6, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1.4142135623730951}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.color_image_grid": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 26}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.numpy_load": {"tf": 1}, "graphlearning.utils.download_file": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.graph.graph.load": {"tf": 1}, "graphlearning.utils.csvread": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.numpy_load": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 4}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 1}}, "df": 1}}, "s": {"docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.active_learning.active_learner.update": {"tf": 1}, "graphlearning.active_learning.acquisition_function.update": {"tf": 1}, "graphlearning.active_learning.v_opt.update": {"tf": 1}, "graphlearning.active_learning.sigma_opt.update": {"tf": 1}, "graphlearning.active_learning.model_change.update": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.clustering.fit": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1.4142135623730951}, "graphlearning.clustering.purity": {"tf": 1.4142135623730951}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl_accuracy": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}}, "df": 20}}}}, "m": {"docs": {"graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}}, "df": 1, "b": {"docs": {"graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.active_learning.active_learner.select_queries": {"tf": 1}, "graphlearning.active_learning.active_learner.update": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.acquisition_function.update": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.update": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.update": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change.update": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 20}, "f": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "x": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}}, "df": 1}}, "t": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.predict": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.mesh": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {"graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 7, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 1}, "graphlearning.active_learning.active_learner.select_queries": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.centered_kernel.__init__": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}}, "df": 1}, "g": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.__init__": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 16}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 5, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.active_learner.__init__": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}, "graphlearning.active_learning.active_learner.update": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.acquisition_function.update": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.update": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.update": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change.update": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.clustering.fit": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1}, "graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.adjacency": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.isconnected": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 46}}, "p": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}}, "df": 1}, "t": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}}, "df": 5}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 4}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 2}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}}, "df": 3}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.labels_to_onehot": {"tf": 1}}, "df": 1}}}}}}}}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {"graphlearning.utils.sparse_max": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.peikonal.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}}, "df": 5}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.utils.mesh": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.color_image_grid": {"tf": 1.4142135623730951}}, "df": 6, "o": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}, "graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.clustering.fit": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 2}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.trainsets.generate": {"tf": 1.7320508075688772}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.color_image_grid": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.4142135623730951}}, "df": 39}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.clustering.clustering.__init__": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 13}}, "g": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 3}}}, "l": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}}, "df": 1}, "s": {"docs": {"graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 3}}, "c": {"docs": {"graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}}, "df": 7}}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.clustering.purity": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.clustering.clustering.__init__": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.__init__": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 16}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}, "p": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 3}}}}}}, "r": {"1": {"docs": {"graphlearning.utils.rand_annulus": {"tf": 1}}, "df": 1}, "2": {"docs": {"graphlearning.utils.rand_annulus": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}}, "df": 1}}, "w": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 5}, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 6}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {"graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}}, "df": 5, "s": {"docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"2": {"docs": {"graphlearning.active_learning.v_opt.__init__": {"tf": 1}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}}, "df": 4}, "docs": {"graphlearning.active_learning.active_learner.select_queries": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.ssl.peikonal.__init__": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning.active_learner.update": {"tf": 1.4142135623730951}, "graphlearning.active_learning.acquisition_function.update": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt.update": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt.update": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change.update": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "u": {"0": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}}, "df": 8, "n": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.active_learning.unc_sampling.__init__": {"tf": 1}, "graphlearning.active_learning.model_change.__init__": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.utils.download_file": {"tf": 1}}, "df": 1}}}, "w": {"docs": {"graphlearning.clustering.clustering.__init__": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.ssl.ssl.__init__": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 21, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.peikonal.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {"graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 5, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 6}}}}}}, "t": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}}, "t": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}}, "df": 8, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}, "graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 11}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.ssl.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 2, "s": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}, "g": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 4}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 16}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 2}}}}}}}, "x": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 4}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 1}}}, "x": {"0": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 10}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.datasets.load": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 2}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {"graphlearning.utils.bean_data": {"tf": 1}}, "df": 1}}}, "bases": {"root": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 5}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 5}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.clustering.spectral": {"tf": 1}, "graphlearning.clustering.fokker_planck": {"tf": 1}, "graphlearning.clustering.incres": {"tf": 1}}, "df": 3}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.poisson": {"tf": 1}, "graphlearning.ssl.poisson_mbo": {"tf": 1}, "graphlearning.ssl.volume_mbo": {"tf": 1}, "graphlearning.ssl.multiclass_mbo": {"tf": 1}, "graphlearning.ssl.modularity_mbo": {"tf": 1}, "graphlearning.ssl.laplace": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation": {"tf": 1}, "graphlearning.ssl.centered_kernel": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor": {"tf": 1}, "graphlearning.ssl.amle": {"tf": 1}, "graphlearning.ssl.peikonal": {"tf": 1}, "graphlearning.ssl.plaplace": {"tf": 1}, "graphlearning.ssl.randomwalk": {"tf": 1}}, "df": 14}}}}}, "doc": {"root": {"0": {"1": {"4": {"1": {"4": {"docs": {"graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}}, "df": 2}, "3": {"2": {"1": {"7": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}, "5": {"0": {"3": {"1": {"docs": {"graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}}, "df": 2}, "7": {"7": {"3": {"9": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"6": {"8": {"7": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"graphlearning.active_learning.unc_sampling": {"tf": 2.449489742783178}, "graphlearning.active_learning.v_opt": {"tf": 2.449489742783178}, "graphlearning.active_learning.sigma_opt": {"tf": 2.449489742783178}, "graphlearning.active_learning.model_change": {"tf": 2.449489742783178}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.449489742783178}, "graphlearning.clustering.spectral.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.randn": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.adjacency": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.gradient": {"tf": 2.449489742783178}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 2.449489742783178}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2.449489742783178}, "graphlearning.graph.graph.dijkstra": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.plaplace": {"tf": 2.449489742783178}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}}, "df": 40, "/": {"1": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}}, "1": {"0": {"0": {"0": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}}, "df": 4}, "docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 9}, "docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.color_image_grid": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 26}, "1": {"6": {"4": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "7": {"7": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "9": {"docs": {}, "df": 0, ":": {"1": {"3": {"0": {"6": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 4}, "2": {"8": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"1": {"6": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}, "6": {"0": {"0": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"3": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "7": {"docs": {}, "df": 0, "\u2013": {"1": {"7": {"7": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}}, "df": 1}, "7": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 2.8284271247461903}, "graphlearning.active_learning.v_opt": {"tf": 3}, "graphlearning.active_learning.sigma_opt": {"tf": 3}, "graphlearning.active_learning.model_change": {"tf": 3.1622776601683795}, "graphlearning.active_learning.model_change_vopt": {"tf": 3.1622776601683795}, "graphlearning.clustering.spectral.__init__": {"tf": 2}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 2.449489742783178}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 2}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.adjacency": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.reweight": {"tf": 2}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.peikonal": {"tf": 2.23606797749979}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2}, "graphlearning.graph.graph.dijkstra": {"tf": 2}, "graphlearning.graph.graph.plaplace": {"tf": 2.449489742783178}, "graphlearning.graph.graph.page_rank": {"tf": 1.7320508075688772}, "graphlearning.ssl": {"tf": 2.449489742783178}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 2.6457513110645907}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 2}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 2}, "graphlearning.ssl.laplace.__init__": {"tf": 3}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 2.449489742783178}, "graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.utils.class_priors": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1.4142135623730951}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.vae": {"tf": 2}}, "df": 51, "e": {"4": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}}, "df": 2}, "5": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 5}, "6": {"docs": {"graphlearning.graph.graph.plaplace": {"tf": 1}}, "df": 1}, "7": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}, "docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 19}, "d": {"docs": {"graphlearning.clustering.withinss": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 1.4142135623730951}}, "df": 2}, "}": {"docs": {}, "df": 0, "^": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}}, "df": 4}, "m": {"docs": {"graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}}, "df": 3}}, "w": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1}}, "df": 1}}, "/": {"2": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1}}, "df": 1, "}": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0}}, "2": {"0": {"0": {"3": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}, "4": {"docs": {"graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 1}, "7": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 5}, "1": {"1": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}, "2": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 3}, "3": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}}, "df": 2}, "4": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 2}, "5": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1.4142135623730951}}, "df": 1}, "6": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}}, "df": 2}, "7": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}, "8": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}}, "df": 3}, "9": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "2": {"0": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 6}, "1": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "3": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}}}, "1": {"1": {"0": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "7": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}, "9": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "4": {"3": {"9": {"docs": {"graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}}, "df": 2}, "6": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}, "7": {"5": {"1": {"docs": {}, "df": 0, "\u2013": {"2": {"7": {"5": {"9": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"8": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.withinss": {"tf": 1.4142135623730951}, "graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 2}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 2}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 25, "f": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 7}, "*": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 2}}, "d": {"docs": {"graphlearning.utils.mesh": {"tf": 1}}, "df": 1}}, "3": {"0": {"0": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}}, "df": 2}, "1": {"0": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"4": {"docs": {}, "df": 0, ":": {"2": {"8": {"8": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "6": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}, "7": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 4}}}, "9": {"5": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.active_learning": {"tf": 2.449489742783178}, "graphlearning.active_learning.unc_sampling": {"tf": 3.4641016151377544}, "graphlearning.active_learning.v_opt": {"tf": 3.7416573867739413}, "graphlearning.active_learning.sigma_opt": {"tf": 3.7416573867739413}, "graphlearning.active_learning.model_change": {"tf": 3.7416573867739413}, "graphlearning.active_learning.model_change_vopt": {"tf": 3.7416573867739413}, "graphlearning.clustering.spectral.__init__": {"tf": 3.4641016151377544}, "graphlearning.clustering.incres.__init__": {"tf": 2.8284271247461903}, "graphlearning.clustering.RP1D": {"tf": 2}, "graphlearning.graph.graph.eigen_decomp": {"tf": 3.7416573867739413}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2}, "graphlearning.graph.graph.dijkstra": {"tf": 2}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 6.48074069840786}, "graphlearning.ssl.poisson.__init__": {"tf": 2}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2.8284271247461903}, "graphlearning.weightmatrix.vae": {"tf": 2.449489742783178}}, "df": 18}, "docs": {"graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 16}, "4": {"0": {"0": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}}, "df": 1}, "1": {"6": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}, "docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}}, "df": 2, "\\": {"docs": {}, "df": 0, "|": {"docs": {}, "df": 0, "x": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}, "5": {"0": {"0": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 9}, "docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 11}, "3": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}, "5": {"6": {"docs": {}, "df": 0, "\u2013": {"5": {"6": {"4": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2}, "graphlearning.graph.graph.dijkstra": {"tf": 2}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 20}, "6": {"1": {"1": {"4": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 4}, "7": {"3": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}, "8": {"docs": {"graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 1}, "8": {"5": {"docs": {"graphlearning.graph.graph.page_rank": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}, "9": {"5": {"docs": {"graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"graphlearning": {"tf": 1.7320508075688772}, "graphlearning.active_learning": {"tf": 16.431676725154983}, "graphlearning.active_learning.active_learner": {"tf": 1.7320508075688772}, "graphlearning.active_learning.active_learner.__init__": {"tf": 1.7320508075688772}, "graphlearning.active_learning.active_learner.model": {"tf": 1.7320508075688772}, "graphlearning.active_learning.active_learner.labeled_ind": {"tf": 1.7320508075688772}, "graphlearning.active_learning.active_learner.labels": {"tf": 1.7320508075688772}, "graphlearning.active_learning.active_learner.acq_function": {"tf": 1.7320508075688772}, "graphlearning.active_learning.active_learner.policy": {"tf": 1.7320508075688772}, "graphlearning.active_learning.active_learner.u": {"tf": 1.7320508075688772}, "graphlearning.active_learning.active_learner.n": {"tf": 1.7320508075688772}, "graphlearning.active_learning.active_learner.all_inds": {"tf": 1.7320508075688772}, "graphlearning.active_learning.active_learner.unlabeled_ind": {"tf": 1.7320508075688772}, "graphlearning.active_learning.active_learner.printed_warning": {"tf": 1.7320508075688772}, "graphlearning.active_learning.active_learner.select_queries": {"tf": 1.7320508075688772}, "graphlearning.active_learning.active_learner.update": {"tf": 1.7320508075688772}, "graphlearning.active_learning.acquisition_function": {"tf": 10.816653826391969}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 4}, "graphlearning.active_learning.acquisition_function.update": {"tf": 1.7320508075688772}, "graphlearning.active_learning.unc_sampling": {"tf": 24.269322199023193}, "graphlearning.active_learning.unc_sampling.__init__": {"tf": 1.7320508075688772}, "graphlearning.active_learning.unc_sampling.unc_method": {"tf": 1.7320508075688772}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 4}, "graphlearning.active_learning.v_opt": {"tf": 25.96150997149434}, "graphlearning.active_learning.v_opt.__init__": {"tf": 1.7320508075688772}, "graphlearning.active_learning.v_opt.C": {"tf": 1.7320508075688772}, "graphlearning.active_learning.v_opt.V": {"tf": 1.7320508075688772}, "graphlearning.active_learning.v_opt.gamma2": {"tf": 1.7320508075688772}, "graphlearning.active_learning.v_opt.compute": {"tf": 4}, "graphlearning.active_learning.v_opt.update": {"tf": 1.7320508075688772}, "graphlearning.active_learning.sigma_opt": {"tf": 25.98076211353316}, "graphlearning.active_learning.sigma_opt.__init__": {"tf": 1.7320508075688772}, "graphlearning.active_learning.sigma_opt.C": {"tf": 1.7320508075688772}, "graphlearning.active_learning.sigma_opt.V": {"tf": 1.7320508075688772}, "graphlearning.active_learning.sigma_opt.gamma2": {"tf": 1.7320508075688772}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 4}, "graphlearning.active_learning.sigma_opt.update": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change": {"tf": 26.019223662515376}, "graphlearning.active_learning.model_change.__init__": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change.C": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change.V": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change.gamma2": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change.unc_sampling": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change.compute": {"tf": 4}, "graphlearning.active_learning.model_change.update": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt": {"tf": 26.115129714401192}, "graphlearning.active_learning.model_change_vopt.__init__": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt.C": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt.V": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt.gamma2": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt.unc_sampling": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 4}, "graphlearning.active_learning.model_change_vopt.update": {"tf": 1.7320508075688772}, "graphlearning.clustering": {"tf": 2.6457513110645907}, "graphlearning.clustering.clustering": {"tf": 1.7320508075688772}, "graphlearning.clustering.clustering.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.clustering.cluster_labels": {"tf": 1.7320508075688772}, "graphlearning.clustering.clustering.num_clusters": {"tf": 1.7320508075688772}, "graphlearning.clustering.clustering.fitted": {"tf": 1.7320508075688772}, "graphlearning.clustering.clustering.predict": {"tf": 3.3166247903554}, "graphlearning.clustering.clustering.fit_predict": {"tf": 4.123105625617661}, "graphlearning.clustering.clustering.fit": {"tf": 4.123105625617661}, "graphlearning.clustering.spectral": {"tf": 1.7320508075688772}, "graphlearning.clustering.spectral.__init__": {"tf": 22.315913604421397}, "graphlearning.clustering.spectral.method": {"tf": 1.7320508075688772}, "graphlearning.clustering.spectral.extra_dim": {"tf": 1.7320508075688772}, "graphlearning.clustering.fokker_planck": {"tf": 1.7320508075688772}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 17.029386365926403}, "graphlearning.clustering.fokker_planck.beta": {"tf": 1.7320508075688772}, "graphlearning.clustering.fokker_planck.t": {"tf": 1.7320508075688772}, "graphlearning.clustering.incres": {"tf": 1.7320508075688772}, "graphlearning.clustering.incres.__init__": {"tf": 14.933184523068078}, "graphlearning.clustering.incres.speed": {"tf": 1.7320508075688772}, "graphlearning.clustering.incres.T": {"tf": 1.7320508075688772}, "graphlearning.clustering.withinss": {"tf": 4.123105625617661}, "graphlearning.clustering.RP1D": {"tf": 13.892443989449804}, "graphlearning.clustering.clustering_accuracy": {"tf": 4.123105625617661}, "graphlearning.clustering.purity": {"tf": 4.123105625617661}, "graphlearning.datasets": {"tf": 2.23606797749979}, "graphlearning.datasets.data_dir": {"tf": 1.7320508075688772}, "graphlearning.datasets.two_skies": {"tf": 4.47213595499958}, "graphlearning.datasets.save": {"tf": 3.872983346207417}, "graphlearning.datasets.load": {"tf": 7.211102550927978}, "graphlearning.datasets.load_image": {"tf": 4.358898943540674}, "graphlearning.graph": {"tf": 2.6457513110645907}, "graphlearning.graph.graph": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.__init__": {"tf": 3.3166247903554}, "graphlearning.graph.graph.weight_matrix": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.num_nodes": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.K": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.I": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.J": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.V": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.eigendata": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.subgraph": {"tf": 4.358898943540674}, "graphlearning.graph.graph.degree_vector": {"tf": 3.3166247903554}, "graphlearning.graph.graph.degree_matrix": {"tf": 4.123105625617661}, "graphlearning.graph.graph.rand": {"tf": 3.3166247903554}, "graphlearning.graph.graph.randn": {"tf": 3.3166247903554}, "graphlearning.graph.graph.adjacency": {"tf": 3.3166247903554}, "graphlearning.graph.graph.gradient": {"tf": 4.58257569495584}, "graphlearning.graph.graph.divergence": {"tf": 4.58257569495584}, "graphlearning.graph.graph.reweight": {"tf": 7.745966692414834}, "graphlearning.graph.graph.laplacian": {"tf": 4.795831523312719}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 3.4641016151377544}, "graphlearning.graph.graph.isconnected": {"tf": 3.3166247903554}, "graphlearning.graph.graph.largest_connected_component": {"tf": 3.4641016151377544}, "graphlearning.graph.graph.eigen_decomp": {"tf": 25.495097567963924}, "graphlearning.graph.graph.fiedler_vector": {"tf": 4.47213595499958}, "graphlearning.graph.graph.peikonal": {"tf": 19.131126469708992}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 18.411952639521967}, "graphlearning.graph.graph.dijkstra": {"tf": 18.601075237738275}, "graphlearning.graph.graph.plaplace": {"tf": 20}, "graphlearning.graph.graph.amle": {"tf": 5}, "graphlearning.graph.graph.save": {"tf": 3.3166247903554}, "graphlearning.graph.graph.load": {"tf": 3.3166247903554}, "graphlearning.graph.graph.page_rank": {"tf": 4.795831523312719}, "graphlearning.ssl": {"tf": 39.07684736515984}, "graphlearning.ssl.results_dir": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.prob": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.fitted": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.requires_eig": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.onevsrest": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.similarity": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.class_priors": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.weights": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.class_priors_error": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.set_graph": {"tf": 3.7416573867739413}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 3.605551275463989}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 3.605551275463989}, "graphlearning.ssl.ssl.predict": {"tf": 4.898979485566356}, "graphlearning.ssl.ssl.fit_predict": {"tf": 4.358898943540674}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 5.0990195135927845}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 4.69041575982343}, "graphlearning.ssl.ssl.fit": {"tf": 4.58257569495584}, "graphlearning.ssl.poisson": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.__init__": {"tf": 19.82422760159901}, "graphlearning.ssl.poisson.solver": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.p": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.use_cuda": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.min_iter": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.max_iter": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.tol": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.spectral_cutoff": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 18.110770276274835}, "graphlearning.ssl.poisson_mbo.poisson_model": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.Ns": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.mu": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.T": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.use_cuda": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.volume_mbo": {"tf": 1.7320508075688772}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 5.0990195135927845}, "graphlearning.ssl.volume_mbo.class_counts": {"tf": 1.7320508075688772}, "graphlearning.ssl.volume_mbo.temperature": {"tf": 1.7320508075688772}, "graphlearning.ssl.volume_mbo.volume_constraint": {"tf": 1.7320508075688772}, "graphlearning.ssl.volume_mbo.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.volume_mbo.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.multiclass_mbo": {"tf": 1.7320508075688772}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 5}, "graphlearning.ssl.multiclass_mbo.Ns": {"tf": 1.7320508075688772}, "graphlearning.ssl.multiclass_mbo.T": {"tf": 1.7320508075688772}, "graphlearning.ssl.multiclass_mbo.dt": {"tf": 1.7320508075688772}, "graphlearning.ssl.multiclass_mbo.mu": {"tf": 1.7320508075688772}, "graphlearning.ssl.multiclass_mbo.num_eig": {"tf": 1.7320508075688772}, "graphlearning.ssl.multiclass_mbo.requires_eig": {"tf": 1.7320508075688772}, "graphlearning.ssl.multiclass_mbo.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.multiclass_mbo.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.modularity_mbo": {"tf": 1.7320508075688772}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 5}, "graphlearning.ssl.modularity_mbo.gamma": {"tf": 1.7320508075688772}, "graphlearning.ssl.modularity_mbo.epsilon": {"tf": 1.7320508075688772}, "graphlearning.ssl.modularity_mbo.lamb": {"tf": 1.7320508075688772}, "graphlearning.ssl.modularity_mbo.requires_eig": {"tf": 1.7320508075688772}, "graphlearning.ssl.modularity_mbo.T": {"tf": 1.7320508075688772}, "graphlearning.ssl.modularity_mbo.Ns": {"tf": 1.7320508075688772}, "graphlearning.ssl.modularity_mbo.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.modularity_mbo.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.__init__": {"tf": 9}, "graphlearning.ssl.laplace.reweighting": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.normalization": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.mean_shift": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.tol": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.order": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.X": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.dynamic_label_propagation": {"tf": 1.7320508075688772}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 4.795831523312719}, "graphlearning.ssl.dynamic_label_propagation.alpha": {"tf": 1.7320508075688772}, "graphlearning.ssl.dynamic_label_propagation.lam": {"tf": 1.7320508075688772}, "graphlearning.ssl.dynamic_label_propagation.T": {"tf": 1.7320508075688772}, "graphlearning.ssl.dynamic_label_propagation.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.dynamic_label_propagation.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.centered_kernel": {"tf": 1.7320508075688772}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 4.795831523312719}, "graphlearning.ssl.centered_kernel.tol": {"tf": 1.7320508075688772}, "graphlearning.ssl.centered_kernel.power_it": {"tf": 1.7320508075688772}, "graphlearning.ssl.centered_kernel.alpha": {"tf": 1.7320508075688772}, "graphlearning.ssl.centered_kernel.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.centered_kernel.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.sparse_label_propagation": {"tf": 1.7320508075688772}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 4.47213595499958}, "graphlearning.ssl.sparse_label_propagation.T": {"tf": 1.7320508075688772}, "graphlearning.ssl.sparse_label_propagation.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.sparse_label_propagation.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.graph_nearest_neighbor": {"tf": 1.7320508075688772}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 4}, "graphlearning.ssl.graph_nearest_neighbor.alpha": {"tf": 1.7320508075688772}, "graphlearning.ssl.graph_nearest_neighbor.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.graph_nearest_neighbor.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.__init__": {"tf": 4.242640687119285}, "graphlearning.ssl.amle.tol": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.max_num_it": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.weighted": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.prog": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.onevsrest": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.peikonal": {"tf": 1.7320508075688772}, "graphlearning.ssl.peikonal.__init__": {"tf": 4.47213595499958}, "graphlearning.ssl.peikonal.p": {"tf": 1.7320508075688772}, "graphlearning.ssl.peikonal.alpha": {"tf": 1.7320508075688772}, "graphlearning.ssl.peikonal.max_num_it": {"tf": 1.7320508075688772}, "graphlearning.ssl.peikonal.tol": {"tf": 1.7320508075688772}, "graphlearning.ssl.peikonal.num_bisection_it": {"tf": 1.7320508075688772}, "graphlearning.ssl.peikonal.onevsrest": {"tf": 1.7320508075688772}, "graphlearning.ssl.peikonal.similarity": {"tf": 1.7320508075688772}, "graphlearning.ssl.peikonal.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.peikonal.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 4.898979485566356}, "graphlearning.ssl.plaplace.p": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.max_num_it": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.tol": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.onevsrest": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.fast": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.randomwalk": {"tf": 1.7320508075688772}, "graphlearning.ssl.randomwalk.__init__": {"tf": 4.898979485566356}, "graphlearning.ssl.randomwalk.alpha": {"tf": 1.7320508075688772}, "graphlearning.ssl.randomwalk.accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.randomwalk.name": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl_accuracy": {"tf": 4.358898943540674}, "graphlearning.ssl.accuracy_plot": {"tf": 5.0990195135927845}, "graphlearning.ssl.accuracy_table": {"tf": 4.58257569495584}, "graphlearning.trainsets": {"tf": 2.23606797749979}, "graphlearning.trainsets.trainset_dir": {"tf": 1.7320508075688772}, "graphlearning.trainsets.load": {"tf": 3.4641016151377544}, "graphlearning.trainsets.generate": {"tf": 5.656854249492381}, "graphlearning.utils": {"tf": 2.23606797749979}, "graphlearning.utils.boundary_statistic": {"tf": 6}, "graphlearning.utils.class_priors": {"tf": 4}, "graphlearning.utils.csvread": {"tf": 3.872983346207417}, "graphlearning.utils.numpy_load": {"tf": 3.3166247903554}, "graphlearning.utils.download_file": {"tf": 3.4641016151377544}, "graphlearning.utils.sparse_max": {"tf": 4.123105625617661}, "graphlearning.utils.torch_sparse": {"tf": 4}, "graphlearning.utils.constrained_solve": {"tf": 4.898979485566356}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 4.47213595499958}, "graphlearning.utils.constrained_solve_gmres": {"tf": 4.898979485566356}, "graphlearning.utils.conjgrad": {"tf": 4.69041575982343}, "graphlearning.utils.labels_to_onehot": {"tf": 4.242640687119285}, "graphlearning.utils.randomized_svd": {"tf": 5.5677643628300215}, "graphlearning.utils.rand_annulus": {"tf": 4.358898943540674}, "graphlearning.utils.rand_ball": {"tf": 4.242640687119285}, "graphlearning.utils.bean_data": {"tf": 4.242640687119285}, "graphlearning.utils.mesh": {"tf": 4.242640687119285}, "graphlearning.utils.image_grid": {"tf": 5}, "graphlearning.utils.color_image_grid": {"tf": 5}, "graphlearning.utils.image_to_patches": {"tf": 4.123105625617661}, "graphlearning.utils.patches_to_image": {"tf": 4.358898943540674}, "graphlearning.weightmatrix": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.knn_dir": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knn": {"tf": 6.324555320336759}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 6.082762530298219}, "graphlearning.weightmatrix.knnsearch": {"tf": 5.385164807134504}, "graphlearning.weightmatrix.load_knn_data": {"tf": 4.358898943540674}, "graphlearning.weightmatrix.vae": {"tf": 19.849433241279208}}, "df": 290, "a": {"docs": {"graphlearning.active_learning": {"tf": 1.7320508075688772}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.7320508075688772}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1.4142135623730951}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.randn": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.adjacency": {"tf": 2.23606797749979}, "graphlearning.graph.graph.divergence": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 2.23606797749979}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2.449489742783178}, "graphlearning.graph.graph.dijkstra": {"tf": 3}, "graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.amle": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.graph.graph.load": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.7320508075688772}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_table": {"tf": 2}, "graphlearning.trainsets.load": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 2.8284271247461903}, "graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.utils.csvread": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1.7320508075688772}, "graphlearning.utils.download_file": {"tf": 1.7320508075688772}, "graphlearning.utils.sparse_max": {"tf": 1.4142135623730951}, "graphlearning.utils.torch_sparse": {"tf": 2}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1.4142135623730951}, "graphlearning.utils.randomized_svd": {"tf": 2}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1.4142135623730951}, "graphlearning.utils.image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.color_image_grid": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knn": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 2}}, "df": 71, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 2.8284271247461903}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 2.6457513110645907}, "graphlearning.active_learning.v_opt": {"tf": 2.6457513110645907}, "graphlearning.active_learning.sigma_opt": {"tf": 2.6457513110645907}, "graphlearning.active_learning.model_change": {"tf": 2.8284271247461903}, "graphlearning.active_learning.model_change_vopt": {"tf": 3}}, "df": 7}}}}, "q": {"docs": {"graphlearning.active_learning": {"tf": 2}, "graphlearning.active_learning.acquisition_function": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning": {"tf": 3.1622776601683795}, "graphlearning.active_learning.acquisition_function": {"tf": 2}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 2.23606797749979}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 2.23606797749979}, "graphlearning.active_learning.v_opt.compute": {"tf": 2.23606797749979}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 2.23606797749979}, "graphlearning.active_learning.model_change.compute": {"tf": 2.23606797749979}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 2.23606797749979}}, "df": 8}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {"graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 2.8284271247461903}, "graphlearning.clustering.incres.__init__": {"tf": 2}, "graphlearning.clustering.RP1D": {"tf": 2}, "graphlearning.clustering.clustering_accuracy": {"tf": 2}, "graphlearning.ssl": {"tf": 4}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 2.23606797749979}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 2}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl_accuracy": {"tf": 2.23606797749979}, "graphlearning.ssl.accuracy_plot": {"tf": 2}, "graphlearning.ssl.accuracy_table": {"tf": 2}, "graphlearning.weightmatrix.vae": {"tf": 2.8284271247461903}}, "df": 15}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl.ssl_accuracy": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {"graphlearning.active_learning": {"tf": 1.7320508075688772}, "graphlearning.active_learning.unc_sampling": {"tf": 2.8284271247461903}, "graphlearning.active_learning.v_opt": {"tf": 2.8284271247461903}, "graphlearning.active_learning.sigma_opt": {"tf": 2.8284271247461903}, "graphlearning.active_learning.model_change": {"tf": 2.8284271247461903}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.8284271247461903}}, "df": 6, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2}, "graphlearning.graph.graph.dijkstra": {"tf": 2.449489742783178}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 15, "s": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.clustering": {"tf": 1}, "graphlearning.graph": {"tf": 1}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 7}}}}}}}}, "l": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1.7320508075688772}, "graphlearning.clustering.clustering.fit": {"tf": 2}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 20, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.datasets": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.trainsets": {"tf": 1.4142135623730951}}, "df": 5}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 2.449489742783178}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 9}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.clustering": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1.4142135623730951}, "graphlearning.utils.patches_to_image": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 19, "d": {"docs": {"graphlearning.active_learning": {"tf": 1.7320508075688772}, "graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.23606797749979}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.datasets": {"tf": 1.4142135623730951}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 2}, "graphlearning.graph": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.adjacency": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.trainsets": {"tf": 1.7320508075688772}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.utils.numpy_load": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1.4142135623730951}, "graphlearning.utils.randomized_svd": {"tf": 1.4142135623730951}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2.8284271247461903}, "graphlearning.weightmatrix.knnsearch": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 64}, "y": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.graph.graph.load": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}}, "df": 12, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.rand_annulus": {"tf": 1.7320508075688772}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.weightmatrix.knnsearch": {"tf": 2}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "s": {"docs": {"graphlearning.active_learning": {"tf": 1.7320508075688772}, "graphlearning.active_learning.acquisition_function": {"tf": 1.7320508075688772}, "graphlearning.active_learning.unc_sampling": {"tf": 2.23606797749979}, "graphlearning.active_learning.v_opt": {"tf": 2.23606797749979}, "graphlearning.active_learning.sigma_opt": {"tf": 2.23606797749979}, "graphlearning.active_learning.model_change": {"tf": 2.23606797749979}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.23606797749979}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 2.23606797749979}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2.23606797749979}, "graphlearning.graph.graph.peikonal": {"tf": 2.23606797749979}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 2}, "graphlearning.graph.graph.plaplace": {"tf": 2}, "graphlearning.ssl": {"tf": 2.6457513110645907}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 2}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 2}, "graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1.4142135623730951}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 46, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}, "s": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.clustering_accuracy": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"1": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 2}, "graphlearning.datasets.load": {"tf": 2}, "graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1.4142135623730951}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.4142135623730951}}, "df": 22, "a": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.v_opt.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1.7320508075688772}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.fit": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.withinss": {"tf": 1.7320508075688772}, "graphlearning.clustering.RP1D": {"tf": 1.7320508075688772}, "graphlearning.clustering.clustering_accuracy": {"tf": 1.4142135623730951}, "graphlearning.clustering.purity": {"tf": 1.4142135623730951}, "graphlearning.datasets.two_skies": {"tf": 1.7320508075688772}, "graphlearning.datasets.save": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 1.7320508075688772}, "graphlearning.datasets.load_image": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1}, "graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 2.23606797749979}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2.23606797749979}, "graphlearning.graph.graph.dijkstra": {"tf": 2.23606797749979}, "graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.amle": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.page_rank": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 2}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.fit": {"tf": 2}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 2}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl_accuracy": {"tf": 1.7320508075688772}, "graphlearning.trainsets.generate": {"tf": 2.449489742783178}, "graphlearning.utils.boundary_statistic": {"tf": 2}, "graphlearning.utils.class_priors": {"tf": 1.4142135623730951}, "graphlearning.utils.csvread": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 2.449489742783178}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 2}, "graphlearning.utils.constrained_solve_gmres": {"tf": 2.6457513110645907}, "graphlearning.utils.conjgrad": {"tf": 2}, "graphlearning.utils.labels_to_onehot": {"tf": 1.4142135623730951}, "graphlearning.utils.randomized_svd": {"tf": 2}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1.7320508075688772}, "graphlearning.utils.image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.color_image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.image_to_patches": {"tf": 2}, "graphlearning.utils.patches_to_image": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1.7320508075688772}}, "df": 82, "s": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}}}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2, ":": {"1": {"3": {"1": {"2": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"1": {"2": {"docs": {"graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"0": {"1": {"docs": {"graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"1": {"0": {"8": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"1": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "t": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 12, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.save": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 12}, "s": {"docs": {"graphlearning.utils.download_file": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 4}, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.__init__": {"tf": 1.7320508075688772}}, "df": 3}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"graphlearning.datasets.save": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.download_file": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.adjacency": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "x": {"1": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}}, "df": 1}, "2": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"graphlearning.utils.conjgrad": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 12, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 2}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 2, "s": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 2}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 2.449489742783178}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 16, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning": {"tf": 2.23606797749979}, "graphlearning.active_learning.unc_sampling": {"tf": 2.449489742783178}, "graphlearning.active_learning.v_opt": {"tf": 2.449489742783178}, "graphlearning.active_learning.sigma_opt": {"tf": 2.449489742783178}, "graphlearning.active_learning.model_change": {"tf": 2.8284271247461903}, "graphlearning.active_learning.model_change_vopt": {"tf": 3}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 2.23606797749979}, "graphlearning.ssl": {"tf": 2.23606797749979}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.fit": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 2.6457513110645907}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 3.1622776601683795}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.7320508075688772}}, "df": 33}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning": {"tf": 1.7320508075688772}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 7}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.ssl": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 6, "s": {"docs": {"graphlearning.utils.mesh": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 6}}, "q": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}}, "df": 1}}}}, "t": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 2}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl": {"tf": 2.6457513110645907}, "graphlearning.ssl.laplace.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.7320508075688772}}, "df": 10}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 2}, "graphlearning.graph.graph.laplacian": {"tf": 2.23606797749979}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 2}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 9, "s": {"docs": {"graphlearning.graph.graph.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 2}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 2}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 2}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 24, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning": {"tf": 2.23606797749979}, "graphlearning.active_learning.unc_sampling": {"tf": 2}, "graphlearning.active_learning.v_opt": {"tf": 2}, "graphlearning.active_learning.sigma_opt": {"tf": 2}, "graphlearning.active_learning.model_change": {"tf": 2}, "graphlearning.active_learning.model_change_vopt": {"tf": 2}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 9}}, "s": {"docs": {"graphlearning.active_learning": {"tf": 2}, "graphlearning.active_learning.unc_sampling": {"tf": 2.449489742783178}, "graphlearning.active_learning.v_opt": {"tf": 2.449489742783178}, "graphlearning.active_learning.sigma_opt": {"tf": 2.449489742783178}, "graphlearning.active_learning.model_change": {"tf": 2.449489742783178}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.449489742783178}, "graphlearning.clustering.clustering.predict": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.fit_predict": {"tf": 2}, "graphlearning.clustering.clustering.fit": {"tf": 2}, "graphlearning.clustering.spectral.__init__": {"tf": 3.4641016151377544}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 2.6457513110645907}, "graphlearning.clustering.RP1D": {"tf": 2.23606797749979}, "graphlearning.clustering.clustering_accuracy": {"tf": 2.23606797749979}, "graphlearning.clustering.purity": {"tf": 2}, "graphlearning.datasets.two_skies": {"tf": 1.4142135623730951}, "graphlearning.datasets.save": {"tf": 1.7320508075688772}, "graphlearning.datasets.load": {"tf": 2.23606797749979}, "graphlearning.ssl": {"tf": 5.830951894845301}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit_predict": {"tf": 2.449489742783178}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit": {"tf": 2.23606797749979}, "graphlearning.ssl.poisson.__init__": {"tf": 3}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 3.4641016151377544}, "graphlearning.ssl.ssl_accuracy": {"tf": 2.23606797749979}, "graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 2}, "graphlearning.utils.class_priors": {"tf": 1.7320508075688772}, "graphlearning.utils.labels_to_onehot": {"tf": 2.6457513110645907}, "graphlearning.weightmatrix.vae": {"tf": 3.4641016151377544}}, "df": 33}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.load": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 4, "r": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.purity": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 2}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.load": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.datasets.load": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 2}}, "x": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 2}}, "df": 2}, "r": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.4142135623730951}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.load_image": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}}, "df": 1}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}}, "df": 1}, "m": {"docs": {"graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}}, "df": 1, "b": {"docs": {"graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 3}}}}, "z": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl.randomwalk.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1.7320508075688772}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 12}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1.7320508075688772}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1.7320508075688772}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "z": {"docs": {"graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 3}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 5, "s": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}, "w": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 11, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 2.23606797749979}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.datasets.load_image": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.load": {"tf": 1.7320508075688772}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.datasets": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.datasets": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}}, "df": 1}}, "u": {"docs": {"graphlearning.graph.graph.infinity_laplacian": {"tf": 1}}, "df": 1, "x": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 5}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 1}}}}, "^": {"docs": {}, "df": 0, "p": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 1}, "m": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}}, "x": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 3}}, "t": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}}, "df": 11, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning": {"tf": 2}, "graphlearning.active_learning.acquisition_function": {"tf": 1.4142135623730951}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering": {"tf": 1}, "graphlearning.datasets": {"tf": 1}, "graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.trainsets": {"tf": 1}, "graphlearning.utils": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 27}}, "e": {"docs": {"graphlearning.active_learning": {"tf": 4.58257569495584}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 2}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 2.23606797749979}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 2.449489742783178}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 2.23606797749979}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.withinss": {"tf": 1.7320508075688772}, "graphlearning.clustering.RP1D": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1.4142135623730951}, "graphlearning.datasets.two_skies": {"tf": 1.7320508075688772}, "graphlearning.datasets.save": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 2.6457513110645907}, "graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.adjacency": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.divergence": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.reweight": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.laplacian": {"tf": 2}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.isconnected": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2.23606797749979}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.peikonal": {"tf": 2.8284271247461903}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2.449489742783178}, "graphlearning.graph.graph.dijkstra": {"tf": 3.605551275463989}, "graphlearning.graph.graph.plaplace": {"tf": 3}, "graphlearning.graph.graph.amle": {"tf": 2.449489742783178}, "graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 3.1622776601683795}, "graphlearning.ssl": {"tf": 2.23606797749979}, "graphlearning.ssl.ssl.set_graph": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.predict": {"tf": 2}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 3.4641016151377544}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 3.605551275463989}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.laplace.__init__": {"tf": 4.242640687119285}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 3.1622776601683795}, "graphlearning.ssl.amle.__init__": {"tf": 3}, "graphlearning.ssl.peikonal.__init__": {"tf": 3.4641016151377544}, "graphlearning.ssl.plaplace.__init__": {"tf": 3}, "graphlearning.ssl.randomwalk.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 2.449489742783178}, "graphlearning.ssl.accuracy_table": {"tf": 1.7320508075688772}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 3.4641016151377544}, "graphlearning.utils": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 3.1622776601683795}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1.7320508075688772}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 2.23606797749979}, "graphlearning.utils.color_image_grid": {"tf": 2.23606797749979}, "graphlearning.utils.patches_to_image": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 4}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 3.7416573867739413}, "graphlearning.weightmatrix.knnsearch": {"tf": 2}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.vae": {"tf": 2.8284271247461903}}, "df": 97, "i": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.trainsets.generate": {"tf": 2}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 9}, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning": {"tf": 2}, "graphlearning.active_learning.acquisition_function": {"tf": 2}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1.4142135623730951}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.utils": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 24}, "n": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.withinss": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {"graphlearning.active_learning": {"tf": 3}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering": {"tf": 1}, "graphlearning.clustering.clustering.fit": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.withinss": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.datasets.save": {"tf": 2.23606797749979}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.degree_matrix": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.gradient": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 2}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.peikonal": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.dijkstra": {"tf": 3}, "graphlearning.graph.graph.plaplace": {"tf": 2.449489742783178}, "graphlearning.graph.graph.amle": {"tf": 2.23606797749979}, "graphlearning.graph.graph.save": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.load": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl": {"tf": 2.23606797749979}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 3}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.__init__": {"tf": 2.8284271247461903}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 2}, "graphlearning.ssl.amle.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.peikonal.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.plaplace.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 2.6457513110645907}, "graphlearning.ssl.accuracy_table": {"tf": 2.8284271247461903}, "graphlearning.trainsets": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 2.8284271247461903}, "graphlearning.utils.boundary_statistic": {"tf": 2.23606797749979}, "graphlearning.utils.numpy_load": {"tf": 1}, "graphlearning.utils.download_file": {"tf": 2}, "graphlearning.utils.torch_sparse": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1.4142135623730951}, "graphlearning.utils.labels_to_onehot": {"tf": 1.7320508075688772}, "graphlearning.utils.randomized_svd": {"tf": 1.7320508075688772}, "graphlearning.utils.mesh": {"tf": 1.4142135623730951}, "graphlearning.utils.image_grid": {"tf": 2.6457513110645907}, "graphlearning.utils.color_image_grid": {"tf": 2.6457513110645907}, "graphlearning.utils.image_to_patches": {"tf": 1.7320508075688772}, "graphlearning.utils.patches_to_image": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 3.1622776601683795}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.knnsearch": {"tf": 2.6457513110645907}, "graphlearning.weightmatrix.load_knn_data": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 82, "l": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 16, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 16}}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.utils.torch_sparse": {"tf": 2.449489742783178}}, "df": 1}}}, "p": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 2}}, "l": {"docs": {"graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1.7320508075688772}}, "df": 2, "t": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 1, "{": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"graphlearning.graph.graph.divergence": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.page_rank": {"tf": 2}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 2.6457513110645907}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 2.23606797749979}, "graphlearning.active_learning.v_opt": {"tf": 2.23606797749979}, "graphlearning.active_learning.sigma_opt": {"tf": 2.23606797749979}, "graphlearning.active_learning.model_change": {"tf": 2.23606797749979}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.23606797749979}, "graphlearning.ssl": {"tf": 5}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 2.8284271247461903}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2.8284271247461903}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 3.4641016151377544}}, "df": 13, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.ssl": {"tf": 2.449489742783178}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 11}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.datasets.load": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1.4142135623730951}, "graphlearning.trainsets": {"tf": 1.7320508075688772}, "graphlearning.trainsets.load": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 3.1622776601683795}}, "df": 10}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.page_rank": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.color_image_grid": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 4}}}}}}}, "e": {"docs": {"graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.clustering.fit": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1.4142135623730951}, "graphlearning.clustering.purity": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.divergence": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.isconnected": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 2}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.7320508075688772}}, "df": 28}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 3, "s": {"docs": {"graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 2.23606797749979}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 2.449489742783178}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.7320508075688772}}, "df": 7}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.utils.mesh": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.mesh": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {"graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.datasets.two_skies": {"tf": 2}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}, "graphlearning.utils.sparse_max": {"tf": 1.4142135623730951}, "graphlearning.utils.bean_data": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 8, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.ssl": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}, "graphlearning.utils.image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.color_image_grid": {"tf": 1.7320508075688772}}, "df": 6}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 5, "s": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.ssl_accuracy": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_table": {"tf": 3.1622776601683795}}, "df": 3, "s": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {"graphlearning.ssl": {"tf": 2.6457513110645907}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}}, "df": 5}, "i": {"docs": {"graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.4142135623730951}, "graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1.4142135623730951}, "graphlearning.datasets.load_image": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.7320508075688772}, "graphlearning.utils.conjgrad": {"tf": 2}, "graphlearning.utils.image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.color_image_grid": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 23, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.clustering": {"tf": 1}, "graphlearning.datasets": {"tf": 1}, "graphlearning.graph": {"tf": 1}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.trainsets": {"tf": 1}, "graphlearning.utils": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1}}, "df": 8}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}, "e": {"docs": {"graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 1, "l": {"docs": {"graphlearning.active_learning": {"tf": 2.23606797749979}, "graphlearning.active_learning.unc_sampling": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 2.6457513110645907}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.449489742783178}, "graphlearning.clustering.spectral.__init__": {"tf": 2}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 4.123105625617661}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 16, "s": {"docs": {"graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 5}, "s": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 5}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 9}}}}, "a": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.clustering": {"tf": 1}, "graphlearning.graph": {"tf": 1}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 5}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.datasets.load_image": {"tf": 1.4142135623730951}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 2}}}}}}}, "x": {"docs": {"graphlearning.active_learning": {"tf": 1.7320508075688772}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2}, "graphlearning.graph.graph.dijkstra": {"tf": 2}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1.7320508075688772}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 16, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 9}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "p": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "^": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 1}}, "df": 1}, "{": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.divergence": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.__init__": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.degree_vector": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.degree_matrix": {"tf": 2.23606797749979}, "graphlearning.graph.graph.rand": {"tf": 2.23606797749979}, "graphlearning.graph.graph.randn": {"tf": 2.23606797749979}, "graphlearning.graph.graph.adjacency": {"tf": 2.23606797749979}, "graphlearning.graph.graph.gradient": {"tf": 2.23606797749979}, "graphlearning.graph.graph.divergence": {"tf": 2}, "graphlearning.graph.graph.reweight": {"tf": 2.23606797749979}, "graphlearning.graph.graph.laplacian": {"tf": 2}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.set_graph": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 2}, "graphlearning.ssl.amle.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.peikonal.__init__": {"tf": 2}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.4142135623730951}, "graphlearning.utils.sparse_max": {"tf": 2.23606797749979}, "graphlearning.utils.torch_sparse": {"tf": 2.449489742783178}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1.7320508075688772}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1.7320508075688772}, "graphlearning.utils.conjgrad": {"tf": 2.23606797749979}, "graphlearning.utils.randomized_svd": {"tf": 2.449489742783178}, "graphlearning.weightmatrix.knn": {"tf": 2}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 50}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.sparse_max": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.color_image_grid": {"tf": 1.4142135623730951}}, "df": 14}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 10, "s": {"docs": {"graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 5}}}, "a": {"docs": {"graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.graph.graph.largest_connected_component": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 8}}, "i": {"docs": {"graphlearning.ssl.centered_kernel.__init__": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {"graphlearning.utils.labels_to_onehot": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"graphlearning.clustering.withinss": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 2}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.conjgrad": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 17, "s": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1.7320508075688772}, "graphlearning.ssl": {"tf": 3.1622776601683795}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 9, "s": {"docs": {"graphlearning.datasets.load": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.utils.mesh": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.utils.mesh": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {"graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve": {"tf": 1}}, "df": 12}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {"graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}}, "df": 1, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {"graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 2}, "graphlearning.clustering.incres.__init__": {"tf": 2}, "graphlearning.clustering.RP1D": {"tf": 1.7320508075688772}, "graphlearning.datasets": {"tf": 1}, "graphlearning.datasets.load": {"tf": 2.23606797749979}, "graphlearning.ssl": {"tf": 2.6457513110645907}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.7320508075688772}}, "df": 9}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.ssl.poisson_mbo.__init__": {"tf": 2}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.4142135623730951}}, "df": 4}}, "+": {"1": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, ">": {"5": {"docs": {"graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "i": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.divergence": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2}, "graphlearning.graph.graph.peikonal": {"tf": 2}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2.23606797749979}, "graphlearning.graph.graph.dijkstra": {"tf": 3.7416573867739413}, "graphlearning.graph.graph.plaplace": {"tf": 2.449489742783178}, "graphlearning.graph.graph.amle": {"tf": 2}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1.7320508075688772}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 4.69041575982343}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 5.0990195135927845}}, "df": 29, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.clustering": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1}}, "df": 12}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 2.23606797749979}, "graphlearning.active_learning.v_opt": {"tf": 2.23606797749979}, "graphlearning.active_learning.sigma_opt": {"tf": 2.23606797749979}, "graphlearning.active_learning.model_change": {"tf": 2.23606797749979}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.23606797749979}, "graphlearning.clustering.spectral.__init__": {"tf": 2.23606797749979}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2}, "graphlearning.graph.graph.peikonal": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.ssl": {"tf": 2.6457513110645907}, "graphlearning.ssl.poisson.__init__": {"tf": 2}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 20}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1, "d": {"docs": {"graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}}, "df": 2}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.mesh": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1.4142135623730951}, "graphlearning.datasets.load_image": {"tf": 2.23606797749979}, "graphlearning.utils.image_grid": {"tf": 3}, "graphlearning.utils.color_image_grid": {"tf": 3}, "graphlearning.utils.image_to_patches": {"tf": 1.7320508075688772}, "graphlearning.utils.patches_to_image": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}}, "df": 7, "s": {"docs": {"graphlearning.utils.image_grid": {"tf": 2}, "graphlearning.utils.color_image_grid": {"tf": 2}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 4}}}}}, "n": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt": {"tf": 1.7320508075688772}, "graphlearning.active_learning.sigma_opt": {"tf": 2.23606797749979}, "graphlearning.active_learning.model_change": {"tf": 2.449489742783178}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.449489742783178}, "graphlearning.clustering": {"tf": 1}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1.4142135623730951}, "graphlearning.clustering.purity": {"tf": 1.4142135623730951}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 2.23606797749979}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.ssl.predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 2}, "graphlearning.ssl.laplace.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_table": {"tf": 2.23606797749979}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1.4142135623730951}, "graphlearning.utils.torch_sparse": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1.7320508075688772}, "graphlearning.utils.rand_ball": {"tf": 1.7320508075688772}, "graphlearning.utils.bean_data": {"tf": 1.7320508075688772}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 2.23606797749979}, "graphlearning.utils.color_image_grid": {"tf": 2.449489742783178}, "graphlearning.weightmatrix.knn": {"tf": 2}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 64, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.centered_kernel.__init__": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 2.8284271247461903}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 2.8284271247461903}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 2.8284271247461903}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 2.8284271247461903}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.8284271247461903}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.ssl": {"tf": 3.872983346207417}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 2.449489742783178}}, "df": 28, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 21}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 8}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}}, "df": 3}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {"graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.fit": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering_accuracy": {"tf": 1.4142135623730951}, "graphlearning.clustering.purity": {"tf": 1.4142135623730951}, "graphlearning.datasets.two_skies": {"tf": 1.4142135623730951}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.peikonal": {"tf": 2}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 2}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.__init__": {"tf": 2}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.trainsets.generate": {"tf": 2.23606797749979}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1.7320508075688772}, "graphlearning.utils.rand_annulus": {"tf": 1.4142135623730951}, "graphlearning.utils.rand_ball": {"tf": 1.4142135623730951}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 2}, "graphlearning.utils.color_image_grid": {"tf": 2}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.7320508075688772}}, "df": 56, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 6, "s": {"docs": {"graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}}, "df": 9}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1.4142135623730951}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt.compute": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change.compute": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1.4142135623730951}}, "df": 6}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}}, "df": 8}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"graphlearning.graph.graph.plaplace": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.7320508075688772}, "graphlearning.utils.constrained_solve": {"tf": 1}}, "df": 7}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.utils.torch_sparse": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1.4142135623730951}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 8}}}, "e": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 4, "s": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1}, "d": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 2.23606797749979}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 2}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 2}, "graphlearning.graph.graph.dijkstra": {"tf": 2}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 9}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.infinity_laplacian": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {"graphlearning.active_learning": {"tf": 1.7320508075688772}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.datasets.load": {"tf": 2}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 2.23606797749979}, "graphlearning.graph.graph.divergence": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.reweight": {"tf": 2.23606797749979}, "graphlearning.graph.graph.laplacian": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.isconnected": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 2.449489742783178}, "graphlearning.graph.graph.plaplace": {"tf": 2}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 2.449489742783178}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 2}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 2}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 2}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 2}, "graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.trainsets.generate": {"tf": 2.23606797749979}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 2.6457513110645907}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.7320508075688772}}, "df": 41}, "t": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 16, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 8, "s": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 15}}}}}}}}, "s": {"docs": {"graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.7320508075688772}}, "df": 2}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}}, "df": 5}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.isconnected": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.trainsets.generate": {"tf": 2.23606797749979}, "graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.color_image_grid": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 34}, "j": {"docs": {"graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.randn": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.adjacency": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.gradient": {"tf": 2}, "graphlearning.graph.graph.divergence": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 14, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.degree_matrix": {"tf": 1}}, "df": 1}}}}}}, "^": {"docs": {}, "df": 0, "p": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {"graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}}, "df": 2, "i": {"docs": {"graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "x": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 7}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 1}}}}}}}}}, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 5}}}, "+": {"1": {"docs": {"graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}}, "df": 1, "}": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "f": {"docs": {"graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}}, "df": 2, "s": {"docs": {"graphlearning.utils.class_priors": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {"graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 33, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.clustering": {"tf": 1}, "graphlearning.ssl": {"tf": 1}}, "df": 3}}, "s": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.isconnected": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 2}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.7320508075688772}, "graphlearning.utils.boundary_statistic": {"tf": 1.7320508075688772}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1.7320508075688772}, "graphlearning.utils.constrained_solve_gmres": {"tf": 2}, "graphlearning.utils.conjgrad": {"tf": 1.4142135623730951}, "graphlearning.utils.randomized_svd": {"tf": 1.4142135623730951}, "graphlearning.utils.image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.color_image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 2}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 50, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.clustering": {"tf": 1}, "graphlearning.ssl": {"tf": 1}}, "df": 3}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 4}}}}}}, "d": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 2.23606797749979}, "graphlearning.utils.boundary_statistic": {"tf": 1.7320508075688772}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 6}}}}, "f": {"docs": {"graphlearning.active_learning": {"tf": 3.3166247903554}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.withinss": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 2}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.datasets.two_skies": {"tf": 1.7320508075688772}, "graphlearning.datasets.save": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 2}, "graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.divergence": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.reweight": {"tf": 2}, "graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2.449489742783178}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 2}, "graphlearning.graph.graph.amle": {"tf": 2}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 2.6457513110645907}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 2}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 3.3166247903554}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 3.1622776601683795}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 2}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 2}, "graphlearning.ssl.laplace.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 2}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.peikonal.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.plaplace.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 2}, "graphlearning.ssl.accuracy_table": {"tf": 1.7320508075688772}, "graphlearning.trainsets": {"tf": 1.4142135623730951}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 3}, "graphlearning.utils.boundary_statistic": {"tf": 2.23606797749979}, "graphlearning.utils.class_priors": {"tf": 1.7320508075688772}, "graphlearning.utils.csvread": {"tf": 1.4142135623730951}, "graphlearning.utils.numpy_load": {"tf": 1.4142135623730951}, "graphlearning.utils.download_file": {"tf": 1.4142135623730951}, "graphlearning.utils.sparse_max": {"tf": 1.7320508075688772}, "graphlearning.utils.constrained_solve": {"tf": 2}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1.7320508075688772}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1.7320508075688772}, "graphlearning.utils.conjgrad": {"tf": 1.4142135623730951}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1.7320508075688772}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1.7320508075688772}, "graphlearning.utils.mesh": {"tf": 1.4142135623730951}, "graphlearning.utils.image_grid": {"tf": 2.23606797749979}, "graphlearning.utils.color_image_grid": {"tf": 2.23606797749979}, "graphlearning.utils.image_to_patches": {"tf": 1.7320508075688772}, "graphlearning.utils.patches_to_image": {"tf": 2}, "graphlearning.weightmatrix.knn": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2}, "graphlearning.weightmatrix.knnsearch": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.load_knn_data": {"tf": 2}, "graphlearning.weightmatrix.vae": {"tf": 2}}, "df": 89, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.adjacency": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 6, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}}, "df": 3}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}}, "df": 2}}, "n": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.RP1D": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.isconnected": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 46, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.datasets.load": {"tf": 2}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 12}}, "e": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 3, "s": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.labels_to_onehot": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 12, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}}, "df": 6, "s": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.save": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 2}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.withinss": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.clustering.fit": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.datasets.two_skies": {"tf": 1.4142135623730951}, "graphlearning.datasets.save": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.degree_matrix": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.gradient": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 2.23606797749979}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2.23606797749979}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 3}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 2}, "graphlearning.graph.graph.plaplace": {"tf": 2.23606797749979}, "graphlearning.graph.graph.amle": {"tf": 2}, "graphlearning.graph.graph.page_rank": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 2}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 3}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 3.3166247903554}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 2.6457513110645907}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 2.6457513110645907}, "graphlearning.ssl.laplace.__init__": {"tf": 3.4641016151377544}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 2}, "graphlearning.ssl.amle.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.peikonal.__init__": {"tf": 3}, "graphlearning.ssl.plaplace.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_plot": {"tf": 3.1622776601683795}, "graphlearning.ssl.accuracy_table": {"tf": 2.8284271247461903}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 2.449489742783178}, "graphlearning.utils.boundary_statistic": {"tf": 2.23606797749979}, "graphlearning.utils.constrained_solve": {"tf": 1.7320508075688772}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1.7320508075688772}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1.7320508075688772}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 3}, "graphlearning.utils.color_image_grid": {"tf": 3}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 2.449489742783178}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.knnsearch": {"tf": 2}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 2.23606797749979}}, "df": 62}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 2}, "graphlearning.utils.constrained_solve": {"tf": 1.7320508075688772}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}}, "df": 7, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.clustering": {"tf": 1}, "graphlearning.ssl": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.datasets": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 3}}}}}}}}}, "t": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.isconnected": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 2}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.color_image_grid": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 27}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning": {"tf": 2.449489742783178}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.fit": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.datasets": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1}, "graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 2.449489742783178}, "graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.peikonal": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 2}, "graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.amle": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl": {"tf": 2.23606797749979}, "graphlearning.ssl.ssl.set_graph": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.__init__": {"tf": 2.8284271247461903}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 3.3166247903554}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_table": {"tf": 2}, "graphlearning.trainsets": {"tf": 2}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 2.449489742783178}, "graphlearning.utils.boundary_statistic": {"tf": 1.7320508075688772}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1.4142135623730951}, "graphlearning.utils.conjgrad": {"tf": 1.4142135623730951}, "graphlearning.utils.randomized_svd": {"tf": 1.4142135623730951}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.color_image_grid": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 2.449489742783178}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2}, "graphlearning.weightmatrix.knnsearch": {"tf": 2.8284271247461903}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 69, "m": {"docs": {"graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.utils.torch_sparse": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 2.449489742783178}}, "df": 1, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 4}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning": {"tf": 3.3166247903554}, "graphlearning.active_learning.acquisition_function": {"tf": 2}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 2.449489742783178}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 2.449489742783178}, "graphlearning.active_learning.v_opt.compute": {"tf": 2.449489742783178}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 2.449489742783178}, "graphlearning.active_learning.model_change.compute": {"tf": 2.449489742783178}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 2.449489742783178}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 2.23606797749979}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 27, "s": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.graph": {"tf": 1}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.trainsets": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.load": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.utils.csvread": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1}, "graphlearning.utils.download_file": {"tf": 1.4142135623730951}, "graphlearning.utils.torch_sparse": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 29}}, "a": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.purity": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1.4142135623730951}}, "df": 17}}}}, "{": {"1": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.plaplace": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 1}}}}}}, "\\": {"docs": {}, "df": 0, "|": {"docs": {}, "df": 0, "x": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}}}, "2": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.plaplace": {"tf": 1}}, "df": 1}}}}}}}}}}}, "docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "|": {"docs": {}, "df": 0, "x": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}}, "df": 2}, "y": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.withinss": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.datasets.two_skies": {"tf": 1.7320508075688772}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.adjacency": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 2.23606797749979}, "graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 2.8284271247461903}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2.23606797749979}, "graphlearning.graph.graph.dijkstra": {"tf": 2.23606797749979}, "graphlearning.graph.graph.plaplace": {"tf": 2.23606797749979}, "graphlearning.graph.graph.amle": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.page_rank": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.7320508075688772}, "graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1.7320508075688772}, "graphlearning.utils.rand_annulus": {"tf": 1.4142135623730951}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 61, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.utils.torch_sparse": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.divergence": {"tf": 1.4142135623730951}, "graphlearning.utils.numpy_load": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.fiedler_vector": {"tf": 2}}, "df": 1}}}}}, "t": {"docs": {"graphlearning.clustering.clustering.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.fit": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 12}, "n": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 4, "s": {"docs": {"graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.save": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.load": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 2.23606797749979}, "graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 1.7320508075688772}, "graphlearning.utils.csvread": {"tf": 1.7320508075688772}, "graphlearning.utils.numpy_load": {"tf": 2}, "graphlearning.utils.download_file": {"tf": 2}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 10, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.graph.graph.load": {"tf": 1}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}, "graphlearning.utils.csvread": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {"graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.sparse_max": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1.7320508075688772}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}}, "df": 1}}}}, "^": {"2": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "s": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.active_learning.unc_sampling": {"tf": 1.7320508075688772}, "graphlearning.active_learning.v_opt": {"tf": 1.7320508075688772}, "graphlearning.active_learning.sigma_opt": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.7320508075688772}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2}, "graphlearning.graph.graph.dijkstra": {"tf": 2.449489742783178}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 17, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.clustering": {"tf": 1}, "graphlearning.ssl": {"tf": 1.4142135623730951}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 4}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 5}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.datasets.load": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1.7320508075688772}, "graphlearning.utils.patches_to_image": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.datasets.two_skies": {"tf": 1}}, "df": 2}}, "n": {"docs": {"graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}}, "df": 2, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.datasets": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 2}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}}, "df": 5}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 2}, "graphlearning.weightmatrix.knn": {"tf": 2}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1.4142135623730951}, "graphlearning.utils.conjgrad": {"tf": 1.4142135623730951}, "graphlearning.utils.mesh": {"tf": 1}}, "df": 7, "s": {"docs": {"graphlearning.utils.bean_data": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 11}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.datasets.two_skies": {"tf": 2.23606797749979}}, "df": 2}}}}, "o": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 5, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"graphlearning.clustering.clustering.fit": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 4}, "r": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 2.8284271247461903}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}}, "df": 9, "s": {"docs": {"graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.utils.conjgrad": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 13}}}}}}, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning": {"tf": 2}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.ssl": {"tf": 5.291502622129181}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 2.449489742783178}}, "df": 11}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 9}}}}, "e": {"docs": {"graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 4}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.datasets": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1.4142135623730951}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 5}}}, "e": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.graph.graph.save": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}}, "df": 5, "s": {"docs": {"graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 2}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.4142135623730951}}, "df": 5}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.adjacency": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}, "c": {"docs": {"graphlearning.utils.numpy_load": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 3.3166247903554}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.7320508075688772}}, "df": 10}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.rand": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.randn": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.adjacency": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.gradient": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.divergence": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.reweight": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 2}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 2.449489742783178}, "graphlearning.utils.torch_sparse": {"tf": 2.8284271247461903}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1.4142135623730951}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}}, "df": 39}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning": {"tf": 1.7320508075688772}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 6}}, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}}, "df": 5}}}}, "f": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 4}}, "t": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 2.23606797749979}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 2.449489742783178}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 2}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1.4142135623730951}}, "df": 25, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.trainsets": {"tf": 1.7320508075688772}, "graphlearning.trainsets.load": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 2}}, "df": 5}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.rand_annulus": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.7320508075688772}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 2}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}}, "df": 21}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}}, "df": 2}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.utils": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {"graphlearning.trainsets.generate": {"tf": 1.4142135623730951}}, "df": 1}}, "p": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1.7320508075688772}, "graphlearning.utils.sparse_max": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 2}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.weightmatrix": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}, "b": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1}}, "df": 7, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.graph.graph.subgraph": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 8}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}}, "df": 10, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl.ssl.trials_statistics": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.7320508075688772}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 2}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}}, "df": 21}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.subgraph": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1}}, "df": 1}}, "s": {"docs": {"graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}}, "df": 6, "s": {"docs": {"graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 2.23606797749979}, "graphlearning.active_learning.v_opt": {"tf": 2.23606797749979}, "graphlearning.active_learning.sigma_opt": {"tf": 2.23606797749979}, "graphlearning.active_learning.model_change": {"tf": 2.23606797749979}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.23606797749979}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}}, "df": 12}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 4}}, "e": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}}}}, "\u00f6": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "f": {"docs": {"graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.adjacency": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1.7320508075688772}, "graphlearning.utils.torch_sparse": {"tf": 1.7320508075688772}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1.4142135623730951}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 38}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 14}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {"graphlearning.utils.bean_data": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 5}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.datasets": {"tf": 1}, "graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.labels_to_onehot": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {"graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_table": {"tf": 2}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 7, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.datasets.save": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.graph.graph.load": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils.csvread": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1.4142135623730951}, "graphlearning.utils.download_file": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.4142135623730951}}, "df": 14}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"graphlearning.ssl.ssl.trials_statistics": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 2}}, "y": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "\u010d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 2.23606797749979}}, "df": 3}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 2}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.sparse_max": {"tf": 1}}, "df": 1}}}}}}, "u": {"0": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 3}, "graphlearning.graph.graph.divergence": {"tf": 2.449489742783178}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 2.449489742783178}, "graphlearning.graph.graph.peikonal": {"tf": 2.449489742783178}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2.8284271247461903}, "graphlearning.graph.graph.dijkstra": {"tf": 3}, "graphlearning.graph.graph.plaplace": {"tf": 3.4641016151377544}, "graphlearning.graph.graph.amle": {"tf": 2.449489742783178}, "graphlearning.graph.graph.page_rank": {"tf": 2}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.7320508075688772}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 21, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.ssl": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 16, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.utils": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 7}}}, "r": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 3, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}}, "df": 2}}, "s": {"docs": {"graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 13}, "d": {"docs": {"graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 12}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 5}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning": {"tf": 1.7320508075688772}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 6, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}}, "df": 3}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"graphlearning.utils.rand_ball": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 3}}}}}}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.active_learning.unc_sampling": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}}, "df": 2}}}}, "\\": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.utils.download_file": {"tf": 1.7320508075688772}}, "df": 1}}}, "w": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 2.23606797749979}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.incres.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.degree_vector": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.degree_matrix": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.rand": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.randn": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.adjacency": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.gradient": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.laplacian": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 2.449489742783178}, "graphlearning.graph.graph.plaplace": {"tf": 2.23606797749979}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 3.4641016151377544}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 2}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 3}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 3.3166247903554}, "graphlearning.weightmatrix.vae": {"tf": 2}}, "df": 47, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.degree_vector": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.adjacency": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.divergence": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.reweight": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 2}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 33, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl": {"tf": 2.23606797749979}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.7320508075688772}}, "df": 18}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 2.23606797749979}, "graphlearning.graph.graph.divergence": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.reweight": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}}, "df": 6}}, "s": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 2}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2}}, "df": 8}}}}, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.predict": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {"graphlearning.utils.download_file": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1.7320508075688772}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1.4142135623730951}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 30, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.withinss": {"tf": 1.7320508075688772}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.graph.graph.load": {"tf": 1}, "graphlearning.ssl": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 23}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.adjacency": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.page_rank": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.7320508075688772}}, "df": 31}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 2}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.adjacency": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1.7320508075688772}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1.7320508075688772}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.color_image_grid": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 26}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.7320508075688772}}, "df": 15}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.4142135623730951}}, "df": 2, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.load_image": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}, "^": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 2}}}, "g": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.peikonal": {"tf": 2}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2}, "graphlearning.graph.graph.dijkstra": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.plaplace": {"tf": 2}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1.4142135623730951}}, "df": 14, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.ssl": {"tf": 1}}, "df": 2, "n": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.adjacency": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}}, "df": 13}, "s": {"docs": {"graphlearning.clustering.withinss": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.active_learning": {"tf": 1.7320508075688772}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.4142135623730951}, "graphlearning.clustering": {"tf": 1}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.__init__": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.subgraph": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.gradient": {"tf": 2.449489742783178}, "graphlearning.graph.graph.divergence": {"tf": 2.23606797749979}, "graphlearning.graph.graph.reweight": {"tf": 2.449489742783178}, "graphlearning.graph.graph.laplacian": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.isconnected": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 2.23606797749979}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 2}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 2.23606797749979}, "graphlearning.graph.graph.plaplace": {"tf": 2}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.save": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.load": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.set_graph": {"tf": 2}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 2}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 2.8284271247461903}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.amle.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.peikonal.__init__": {"tf": 2.8284271247461903}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 57, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 34}}}}}}}}, "s": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 9}}}, "y": {"docs": {"graphlearning.datasets.load_image": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 2.6457513110645907}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.__init__": {"tf": 3.4641016151377544}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2.6457513110645907}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.conjgrad": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 9}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}}, "df": 1}}, "r": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.image_grid": {"tf": 2.449489742783178}, "graphlearning.utils.color_image_grid": {"tf": 2.449489742783178}}, "df": 2}}}, "l": {"docs": {"graphlearning.active_learning": {"tf": 2}, "graphlearning.active_learning.acquisition_function": {"tf": 1.4142135623730951}, "graphlearning.active_learning.unc_sampling": {"tf": 2.449489742783178}, "graphlearning.active_learning.v_opt": {"tf": 2.23606797749979}, "graphlearning.active_learning.sigma_opt": {"tf": 2.23606797749979}, "graphlearning.active_learning.model_change": {"tf": 2.23606797749979}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.23606797749979}, "graphlearning.clustering.spectral.__init__": {"tf": 3}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 2.23606797749979}, "graphlearning.clustering.incres.__init__": {"tf": 2.23606797749979}, "graphlearning.clustering.RP1D": {"tf": 2}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.peikonal": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.ssl": {"tf": 5.656854249492381}, "graphlearning.ssl.poisson.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2.6457513110645907}, "graphlearning.weightmatrix.vae": {"tf": 3.1622776601683795}}, "df": 20}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 11, "s": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}}, "df": 4}, "d": {"docs": {"graphlearning.trainsets.generate": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.trainsets": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}}, "df": 1}}}, "l": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {"graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 2}, "q": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 2}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}}, "df": 5}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 2.23606797749979}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2}, "graphlearning.graph.graph.dijkstra": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.plaplace": {"tf": 2.23606797749979}, "graphlearning.graph.graph.amle": {"tf": 2}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1.7320508075688772}}, "df": 8}}, "e": {"docs": {"graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {"graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.adjacency": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 9}, "p": {"docs": {}, "df": 0, "u": {"docs": {"graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.conjgrad": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.constrained_solve_gmres": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "h": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.datasets.load_image": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.load_image": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "f": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}}, "df": 1}}, "t": {"docs": {"graphlearning.utils.labels_to_onehot": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}}, "df": 3, "d": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1.4142135623730951}, "graphlearning.utils.conjgrad": {"tf": 1.4142135623730951}}, "df": 6, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}}, "df": 1}, "e": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.bean_data": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 7, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 11, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 11}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 3.872983346207417}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1.7320508075688772}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.amle": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.graph.graph.load": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"graphlearning.graph": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.ssl.trials_statistics": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}}, "df": 4}}}}}}}}, "\\": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 2.23606797749979}, "graphlearning.ssl.ssl.fit": {"tf": 2.23606797749979}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.4142135623730951}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils.class_priors": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 25}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.4142135623730951}}, "df": 4}}, "n": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}}, "df": 1}}}, "^": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 5}}}}}}}}, "s": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 2}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}}, "df": 5, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}}, "df": 2, "s": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 2}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 2}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 7, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 2.449489742783178}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.7320508075688772}}, "df": 5}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 3}}}}, "s": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 2.8284271247461903}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 2}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.page_rank": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 2}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.7320508075688772}, "graphlearning.utils.constrained_solve": {"tf": 2}, "graphlearning.utils.constrained_solve_gmres": {"tf": 2}}, "df": 17, "s": {"docs": {"graphlearning.graph": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "\u1e21": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 1.7320508075688772}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 5, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 2.449489742783178}, "graphlearning.graph.graph.plaplace": {"tf": 2.449489742783178}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2}}, "df": 5}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.sparse_max": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 2, "\\": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}, "p": {"docs": {"graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.gradient": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 3}, "graphlearning.graph.graph.dijkstra": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.plaplace": {"tf": 3.1622776601683795}, "graphlearning.graph.graph.page_rank": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 2}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.plaplace.__init__": {"tf": 2.6457513110645907}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 14, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 3, "d": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 26}}}}}, "p": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 2.8284271247461903}, "graphlearning.ssl.laplace.__init__": {"tf": 3}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}}, "df": 5}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.clustering.clustering.fit": {"tf": 1}, "graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 3, "s": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}}, "df": 3, "s": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"graphlearning.ssl": {"tf": 2.8284271247461903}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.4142135623730951}, "graphlearning.utils.class_priors": {"tf": 1.7320508075688772}}, "df": 18}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 19, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"graphlearning.trainsets": {"tf": 1}}, "df": 1, "d": {"docs": {"graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 2.23606797749979}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.ssl": {"tf": 3}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 2}}, "df": 13, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 22, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 14}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}}, "df": 7}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.datasets.load": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2}, "graphlearning.graph.graph.dijkstra": {"tf": 2.23606797749979}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.utils.boundary_statistic": {"tf": 1.7320508075688772}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 8, "s": {"docs": {"graphlearning.active_learning": {"tf": 2.8284271247461903}, "graphlearning.active_learning.unc_sampling": {"tf": 2.6457513110645907}, "graphlearning.active_learning.v_opt": {"tf": 2.6457513110645907}, "graphlearning.active_learning.sigma_opt": {"tf": 2.6457513110645907}, "graphlearning.active_learning.model_change": {"tf": 2.6457513110645907}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.449489742783178}, "graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils.rand_annulus": {"tf": 1.7320508075688772}, "graphlearning.utils.rand_ball": {"tf": 1.7320508075688772}, "graphlearning.utils.bean_data": {"tf": 1.4142135623730951}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 22}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 2.23606797749979}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.poisson.__init__": {"tf": 2.6457513110645907}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.laplace.__init__": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.vae": {"tf": 1.7320508075688772}}, "df": 6, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning": {"tf": 2.23606797749979}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 11, "s": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.clustering.fit": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.save": {"tf": 1}, "graphlearning.graph.graph.load": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.csvread": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1}, "graphlearning.utils.download_file": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1}, "graphlearning.utils.torch_sparse": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.color_image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 86}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.page_rank": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 2.23606797749979}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.utils.image_to_patches": {"tf": 1.4142135623730951}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.image_to_patches": {"tf": 2.23606797749979}, "graphlearning.utils.patches_to_image": {"tf": 2.23606797749979}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.utils": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.utils.image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.color_image_grid": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "y": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 14, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 12}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 2.8284271247461903}, "graphlearning.active_learning.v_opt": {"tf": 2.8284271247461903}, "graphlearning.active_learning.sigma_opt": {"tf": 2.8284271247461903}, "graphlearning.active_learning.model_change": {"tf": 2.8284271247461903}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.8284271247461903}, "graphlearning.clustering.spectral.__init__": {"tf": 2}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.peikonal": {"tf": 2}, "graphlearning.graph.graph.plaplace": {"tf": 2}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.poisson.__init__": {"tf": 2}, "graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 13}, "o": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 2.449489742783178}}, "df": 7, "s": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 2.449489742783178}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.purity": {"tf": 2}}, "df": 1}}}}, "t": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl": {"tf": 2.23606797749979}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.trainsets.generate": {"tf": 1.7320508075688772}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.7320508075688772}}, "df": 7, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.clustering.clustering.fit": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.clustering_accuracy": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.datasets.load_image": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.7320508075688772}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.load_image": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"graphlearning.utils.image_to_patches": {"tf": 1}}, "df": 1}}}}}, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 4}}}, ">": {"1": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 2.23606797749979}, "graphlearning.active_learning.v_opt": {"tf": 2.8284271247461903}, "graphlearning.active_learning.sigma_opt": {"tf": 3.1622776601683795}, "graphlearning.active_learning.model_change": {"tf": 2.8284271247461903}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.8284271247461903}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.7320508075688772}, "graphlearning.utils.sparse_max": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 17, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1.4142135623730951}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1.4142135623730951}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1.4142135623730951}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1.4142135623730951}}, "df": 18, "s": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1}}, "df": 14}, "d": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 5}, "r": {"docs": {"graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 8}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.ssl_accuracy": {"tf": 1.4142135623730951}, "graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 2, "s": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.largest_connected_component": {"tf": 2.23606797749979}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.laplacian": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.7320508075688772}}, "df": 7}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.graph.graph.subgraph": {"tf": 1.4142135623730951}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 4}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.4142135623730951}}, "df": 4}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}}, "df": 8}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.datasets.load": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 2.23606797749979}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 3, "s": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"graphlearning.graph": {"tf": 1}, "graphlearning.ssl": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.subgraph": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.utils.csvread": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.isconnected": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1.7320508075688772}}, "df": 2}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.isconnected": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}}, "df": 3, "s": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 2}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.torch_sparse": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}}, "df": 2}}, "s": {"docs": {"graphlearning.utils.torch_sparse": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 4}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 2}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.conjgrad": {"tf": 1.7320508075688772}}, "df": 6}}}}}}}, "w": {"docs": {"graphlearning.datasets.load_image": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.datasets.load_image": {"tf": 1.4142135623730951}, "graphlearning.utils.color_image_grid": {"tf": 2}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 5}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"graphlearning.utils.image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.color_image_grid": {"tf": 1.7320508075688772}}, "df": 2}}, "o": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.mesh": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.centered_kernel.__init__": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1.4142135623730951}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.graph": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 3.7416573867739413}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.predict": {"tf": 2}, "graphlearning.ssl.ssl.fit": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 2}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 3.1622776601683795}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 2}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 2}, "graphlearning.ssl.laplace.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 2}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 2}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 2}, "graphlearning.ssl.amle.__init__": {"tf": 2}, "graphlearning.ssl.peikonal.__init__": {"tf": 2}, "graphlearning.ssl.plaplace.__init__": {"tf": 2}, "graphlearning.ssl.randomwalk.__init__": {"tf": 2}, "graphlearning.trainsets.generate": {"tf": 1.7320508075688772}, "graphlearning.utils.class_priors": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.vae": {"tf": 1.7320508075688772}}, "df": 26, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 11}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 3}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils.class_priors": {"tf": 1}}, "df": 7}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1.7320508075688772}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.clustering": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 3.7416573867739413}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 2.6457513110645907}, "graphlearning.clustering.incres.__init__": {"tf": 2.8284271247461903}, "graphlearning.clustering.withinss": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 2.8284271247461903}, "graphlearning.clustering.clustering_accuracy": {"tf": 1.4142135623730951}, "graphlearning.clustering.purity": {"tf": 1.4142135623730951}}, "df": 10}}}, "s": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 2}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.incres.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.withinss": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.clustering.withinss": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 2}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.utils.mesh": {"tf": 1}}, "df": 2, "s": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.datasets": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 5}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 15, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}}, "df": 7}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.4142135623730951}}, "df": 6}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.datasets.load_image": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"graphlearning.ssl.ssl_accuracy": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.ssl": {"tf": 1}}, "df": 8}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.model_change": {"tf": 2}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.7320508075688772}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.datasets.load_image": {"tf": 2}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.isconnected": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.datasets": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}}, "df": 3, "d": {"docs": {"graphlearning.ssl.ssl.trials_statistics": {"tf": 1}}, "df": 1}, "s": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"1": {"0": {"docs": {"graphlearning.datasets": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 2}}, "df": 2}, "s": {"docs": {}, "df": 0, "v": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.utils.csvread": {"tf": 2}}, "df": 3}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "d": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.degree_vector": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.degree_matrix": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.laplacian": {"tf": 2.23606797749979}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 2}, "graphlearning.graph.graph.page_rank": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 2}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 2}, "graphlearning.utils.rand_annulus": {"tf": 1.4142135623730951}, "graphlearning.utils.rand_ball": {"tf": 1.4142135623730951}, "graphlearning.utils.mesh": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.vae": {"tf": 1.7320508075688772}}, "df": 27, "e": {"docs": {}, "df": 0, "f": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}}, "df": 2, "d": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 2}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 2}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 2.449489742783178}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 3.1622776601683795}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.plaplace": {"tf": 2.23606797749979}, "graphlearning.graph.graph.amle": {"tf": 2}, "graphlearning.graph.graph.page_rank": {"tf": 2}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 3.1622776601683795}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 3.3166247903554}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 2.6457513110645907}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 2.6457513110645907}, "graphlearning.ssl.laplace.__init__": {"tf": 3.3166247903554}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.peikonal.__init__": {"tf": 2.8284271247461903}, "graphlearning.ssl.plaplace.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_plot": {"tf": 3.1622776601683795}, "graphlearning.ssl.accuracy_table": {"tf": 2.8284271247461903}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 2.449489742783178}, "graphlearning.utils.boundary_statistic": {"tf": 2.23606797749979}, "graphlearning.utils.constrained_solve": {"tf": 2.23606797749979}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1.4142135623730951}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1.7320508075688772}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 3}, "graphlearning.utils.color_image_grid": {"tf": 3}, "graphlearning.weightmatrix.knn": {"tf": 2.449489742783178}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knnsearch": {"tf": 2}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 2.23606797749979}}, "df": 56}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 5}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}}, "df": 1, "d": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1.7320508075688772}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 2.8284271247461903}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 5}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}}, "df": 5, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.graph": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 2}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.ssl.predict": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.7320508075688772}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.degree_vector": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.degree_matrix": {"tf": 2}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}}, "df": 5}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.graph.graph.isconnected": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.utils.mesh": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.clustering.withinss": {"tf": 1.7320508075688772}, "graphlearning.clustering.RP1D": {"tf": 1.7320508075688772}, "graphlearning.datasets.two_skies": {"tf": 1.7320508075688772}, "graphlearning.datasets.save": {"tf": 2}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.4142135623730951}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1.4142135623730951}, "graphlearning.utils.csvread": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 2}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.vae": {"tf": 2.8284271247461903}}, "df": 34, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.datasets.two_skies": {"tf": 1.4142135623730951}, "graphlearning.datasets.save": {"tf": 2.449489742783178}, "graphlearning.datasets.load": {"tf": 2.449489742783178}, "graphlearning.ssl": {"tf": 3}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 2}, "graphlearning.trainsets.generate": {"tf": 2}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1.7320508075688772}, "graphlearning.active_learning.v_opt": {"tf": 1.7320508075688772}, "graphlearning.active_learning.sigma_opt": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.7320508075688772}, "graphlearning.clustering.spectral.__init__": {"tf": 2}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1.4142135623730951}, "graphlearning.datasets": {"tf": 1.7320508075688772}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}, "graphlearning.ssl": {"tf": 2.449489742783178}, "graphlearning.ssl.poisson.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 17}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.fit": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 9}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2}, "graphlearning.graph.graph.dijkstra": {"tf": 2}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 6, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1.7320508075688772}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2.449489742783178}, "graphlearning.graph.graph.dijkstra": {"tf": 3.1622776601683795}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.predict": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 1}}, "s": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "m": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 3}}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 2}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 8}}}}}}}, "j": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2.449489742783178}, "graphlearning.graph.graph.dijkstra": {"tf": 2.8284271247461903}}, "df": 3}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.divergence": {"tf": 2.23606797749979}}, "df": 1}}}}}}}, "v": {"docs": {"graphlearning.graph.graph.divergence": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.utils.dirichlet_eigenvectors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}}, "df": 1}}, "t": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 2, "s": {"docs": {"graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.utils.class_priors": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.peikonal.__init__": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.download_file": {"tf": 2}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.utils.bean_data": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}}, "df": 1}, "\\": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {"graphlearning.utils.mesh": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1.4142135623730951}, "graphlearning.utils.conjgrad": {"tf": 2}, "graphlearning.utils.rand_annulus": {"tf": 1.4142135623730951}}, "df": 10, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering": {"tf": 1}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}}, "df": 16}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.graph": {"tf": 1}}, "df": 1}, "s": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.utils.rand_ball": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 5}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 12}}}}}, "e": {"docs": {"graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"graphlearning.active_learning": {"tf": 2}, "graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 23, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 9}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.clustering_accuracy": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.clustering.purity": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 15}}}, "s": {"docs": {"graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 1}}}, "w": {"docs": {"graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.ssl.predict": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.utils.bean_data": {"tf": 2}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}}}, "h": {"docs": {"graphlearning.utils.sparse_max": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.amle": {"tf": 1.7320508075688772}, "graphlearning.utils.boundary_statistic": {"tf": 2}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1.7320508075688772}}, "df": 8}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.isconnected": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.ssl.accuracy_table": {"tf": 2}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils.boundary_statistic": {"tf": 2}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.color_image_grid": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 33, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 7}}}}}, "y": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.bean_data": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.weightmatrix.knnsearch": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.datasets.two_skies": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "y": {"docs": {"graphlearning.datasets": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.divergence": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 19, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {"graphlearning.datasets.load_image": {"tf": 1.4142135623730951}}, "df": 1}, "d": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 3}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}}, "df": 5}}}, "q": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning": {"tf": 3.4641016151377544}, "graphlearning.active_learning.unc_sampling": {"tf": 2.6457513110645907}, "graphlearning.active_learning.v_opt": {"tf": 2.6457513110645907}, "graphlearning.active_learning.sigma_opt": {"tf": 2.6457513110645907}, "graphlearning.active_learning.model_change": {"tf": 2.6457513110645907}, "graphlearning.active_learning.model_change_vopt": {"tf": 2.6457513110645907}}, "df": 6}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 6}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl": {"tf": 2}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "n": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1.4142135623730951}, "graphlearning.datasets.two_skies": {"tf": 1.4142135623730951}, "graphlearning.datasets.save": {"tf": 1.7320508075688772}, "graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.datasets.load_image": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.__init__": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.degree_matrix": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.rand": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.randn": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.adjacency": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.gradient": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2}, "graphlearning.graph.graph.dijkstra": {"tf": 2}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 2}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.utils.boundary_statistic": {"tf": 1.7320508075688772}, "graphlearning.utils.sparse_max": {"tf": 2.449489742783178}, "graphlearning.utils.torch_sparse": {"tf": 2}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve_gmres": {"tf": 2.449489742783178}, "graphlearning.utils.conjgrad": {"tf": 2.449489742783178}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1.4142135623730951}, "graphlearning.utils.rand_annulus": {"tf": 1.4142135623730951}, "graphlearning.utils.rand_ball": {"tf": 1.4142135623730951}, "graphlearning.utils.bean_data": {"tf": 1.4142135623730951}, "graphlearning.utils.mesh": {"tf": 1.7320508075688772}, "graphlearning.utils.image_grid": {"tf": 2.8284271247461903}, "graphlearning.utils.color_image_grid": {"tf": 2.8284271247461903}, "graphlearning.weightmatrix.knn": {"tf": 2}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.knnsearch": {"tf": 2}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 51, "o": {"docs": {"graphlearning.utils.mesh": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.fit": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"graphlearning.active_learning": {"tf": 2.23606797749979}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 24}}}, "t": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.4142135623730951}}, "df": 10, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}}, "df": 3}}, "n": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}}, "df": 1, "e": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 2}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}, "graphlearning.trainsets.generate": {"tf": 1.7320508075688772}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.color_image_grid": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 27, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.sparse_max": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.trainsets.generate": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 9}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2, "d": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 8}}}, "e": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}, "s": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}, "w": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.datasets": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.datasets.load": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.utils.mesh": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 2.449489742783178}, "graphlearning.weightmatrix.knnsearch": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 7}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.weightmatrix": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 2}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.7320508075688772}}, "df": 6, "s": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}}, "df": 3}}}}}}}, "u": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1, "m": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl": {"tf": 2.23606797749979}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.7320508075688772}, "graphlearning.utils.image_to_patches": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 18, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 2.23606797749979}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 2}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 2}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.color_image_grid": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 43}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1.7320508075688772}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.clustering.clustering.fit": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.7320508075688772}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1.4142135623730951}, "graphlearning.clustering.purity": {"tf": 1.4142135623730951}, "graphlearning.datasets.two_skies": {"tf": 1.7320508075688772}, "graphlearning.datasets.save": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 1.7320508075688772}, "graphlearning.datasets.load_image": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1}, "graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 2.449489742783178}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2.449489742783178}, "graphlearning.graph.graph.dijkstra": {"tf": 2.449489742783178}, "graphlearning.graph.graph.plaplace": {"tf": 2}, "graphlearning.graph.graph.amle": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.page_rank": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 2}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.fit": {"tf": 2}, "graphlearning.ssl.poisson.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 2}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.amle.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.plaplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl_accuracy": {"tf": 1.7320508075688772}, "graphlearning.trainsets.generate": {"tf": 2.8284271247461903}, "graphlearning.utils.boundary_statistic": {"tf": 2}, "graphlearning.utils.class_priors": {"tf": 1.4142135623730951}, "graphlearning.utils.csvread": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve": {"tf": 2.449489742783178}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 2}, "graphlearning.utils.constrained_solve_gmres": {"tf": 2.6457513110645907}, "graphlearning.utils.conjgrad": {"tf": 2}, "graphlearning.utils.labels_to_onehot": {"tf": 1.4142135623730951}, "graphlearning.utils.randomized_svd": {"tf": 2}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1.7320508075688772}, "graphlearning.utils.image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.color_image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.image_to_patches": {"tf": 1.7320508075688772}, "graphlearning.utils.patches_to_image": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knnsearch": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 88}}, "g": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.utils.boundary_statistic": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.utils.csvread": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.datasets.load_image": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.trainsets.load": {"tf": 1.4142135623730951}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.utils.csvread": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1}, "graphlearning.utils.download_file": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.4142135623730951}}, "df": 15, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.utils.numpy_load": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.graph.graph.gradient": {"tf": 2}, "graphlearning.graph.graph.divergence": {"tf": 1.4142135623730951}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.4142135623730951}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2.8284271247461903}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2.8284271247461903}, "graphlearning.graph.graph.dijkstra": {"tf": 2.8284271247461903}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 14, "z": {"docs": {"graphlearning.utils.numpy_load": {"tf": 1.4142135623730951}}, "df": 1}}, "g": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}}, "df": 1, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}}, "df": 1}, "s": {"docs": {"graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 3}, "\\": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.conjgrad": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {"graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 1}}, "k": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.7320508075688772}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl": {"tf": 2.23606797749979}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit": {"tf": 1.7320508075688772}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1.4142135623730951}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1.4142135623730951}, "graphlearning.utils.randomized_svd": {"tf": 2}, "graphlearning.weightmatrix.knn": {"tf": 3}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 2.23606797749979}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1.4142135623730951}}, "df": 23, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.acquisition_function": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 2.8284271247461903}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}}, "df": 7}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1.4142135623730951}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 2}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl": {"tf": 2.23606797749979}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.knn": {"tf": 2.449489742783178}, "graphlearning.weightmatrix.knnsearch": {"tf": 2}, "graphlearning.weightmatrix.load_knn_data": {"tf": 2.449489742783178}, "graphlearning.weightmatrix.vae": {"tf": 1.4142135623730951}}, "df": 22, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.datasets.load": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 2}}}}}}, "+": {"1": {"docs": {"graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "t": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.weightmatrix.knnsearch": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1.7320508075688772}, "graphlearning.active_learning.v_opt": {"tf": 1.7320508075688772}, "graphlearning.active_learning.sigma_opt": {"tf": 2}, "graphlearning.active_learning.model_change": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.7320508075688772}, "graphlearning.clustering.RP1D": {"tf": 2}, "graphlearning.graph.graph.peikonal": {"tf": 2.23606797749979}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 2.449489742783178}, "graphlearning.ssl.poisson.__init__": {"tf": 1.7320508075688772}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.accuracy_plot": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}}, "df": 14, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.datasets.load": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.ssl.accuracy_plot": {"tf": 1.7320508075688772}}, "df": 1}}}}, "r": {"1": {"docs": {"graphlearning.utils.rand_annulus": {"tf": 1}}, "df": 1}, "2": {"docs": {"graphlearning.utils.rand_annulus": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1.7320508075688772}, "graphlearning.active_learning.v_opt": {"tf": 1.7320508075688772}, "graphlearning.active_learning.sigma_opt": {"tf": 2}, "graphlearning.active_learning.model_change": {"tf": 2}, "graphlearning.active_learning.model_change_vopt": {"tf": 2}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1.4142135623730951}}, "df": 15, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.active_learning": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 11, "s": {"docs": {"graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 13}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.dijkstra": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1.7320508075688772}, "graphlearning.utils.image_grid": {"tf": 1.7320508075688772}, "graphlearning.utils.color_image_grid": {"tf": 1.7320508075688772}}, "df": 13, "s": {"docs": {"graphlearning.active_learning.acquisition_function.compute": {"tf": 1}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1}, "graphlearning.active_learning.v_opt.compute": {"tf": 1}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1}, "graphlearning.active_learning.model_change.compute": {"tf": 1}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1}, "graphlearning.clustering.clustering.predict": {"tf": 1}, "graphlearning.clustering.clustering.fit_predict": {"tf": 1}, "graphlearning.clustering.clustering.fit": {"tf": 1}, "graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1}, "graphlearning.clustering.clustering_accuracy": {"tf": 1}, "graphlearning.clustering.purity": {"tf": 1}, "graphlearning.datasets.two_skies": {"tf": 1.4142135623730951}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.datasets.load_image": {"tf": 1}, "graphlearning.graph.graph.subgraph": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.degree_vector": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.degree_matrix": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.rand": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.randn": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.adjacency": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.isconnected": {"tf": 1}, "graphlearning.graph.graph.largest_connected_component": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.graph.graph.amle": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1}, "graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.predict": {"tf": 1}, "graphlearning.ssl.ssl.fit_predict": {"tf": 1}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.fit": {"tf": 1}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.class_priors": {"tf": 1}, "graphlearning.utils.csvread": {"tf": 1}, "graphlearning.utils.numpy_load": {"tf": 1}, "graphlearning.utils.sparse_max": {"tf": 1}, "graphlearning.utils.torch_sparse": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.color_image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.image_to_patches": {"tf": 1}, "graphlearning.utils.patches_to_image": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 70}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.__init__": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1}, "graphlearning.ssl.ssl.set_graph": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.amle.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 20}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 2}}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.trainsets": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.largest_connected_component": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 3, "s": {"docs": {"graphlearning.ssl.ssl.get_accuracy_filename": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 2.6457513110645907}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}}, "df": 4}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 2}, "graphlearning.ssl": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1.7320508075688772}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}, "s": {"docs": {"graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1}}, "df": 1}, "d": {"docs": {"graphlearning.utils.csvread": {"tf": 1}}, "df": 1, "s": {"docs": {"graphlearning.utils.csvread": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl_accuracy": {"tf": 1}}, "df": 1, "d": {"docs": {"graphlearning.ssl.ssl_accuracy": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.ssl.trials_statistics": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1.7320508075688772}}, "df": 12, "s": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1.7320508075688772}}, "df": 7}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}, "graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.trainsets.generate": {"tf": 1}}, "df": 10}}, "k": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}}, "df": 6}, "d": {"docs": {"graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}}, "df": 6, "o": {"docs": {}, "df": 0, "m": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.clustering.RP1D": {"tf": 1.7320508075688772}, "graphlearning.datasets.two_skies": {"tf": 1}, "graphlearning.graph.graph.rand": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.randn": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.randomwalk.__init__": {"tf": 1.7320508075688772}, "graphlearning.trainsets.generate": {"tf": 1}, "graphlearning.utils.rand_annulus": {"tf": 1.7320508075688772}, "graphlearning.utils.rand_ball": {"tf": 1.7320508075688772}, "graphlearning.utils.bean_data": {"tf": 1.7320508075688772}}, "df": 16, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 2.23606797749979}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.ssl": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 2}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.trainsets": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {"graphlearning.datasets.save": {"tf": 1}, "graphlearning.datasets.load": {"tf": 2.449489742783178}, "graphlearning.weightmatrix.knn": {"tf": 1}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}, "graphlearning.weightmatrix.load_knn_data": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 2.6457513110645907}}, "df": 6}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1.4142135623730951}, "graphlearning.utils.rand_annulus": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.ssl.accuracy_table": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.ssl": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"graphlearning.ssl.ssl.ssl_trials": {"tf": 1.4142135623730951}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.clustering.fokker_planck.__init__": {"tf": 2}}, "df": 1}}, "p": {"1": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.clustering.RP1D": {"tf": 2}}, "df": 1}}, "docs": {}, "df": 0}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.__init__": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 2}, "graphlearning.utils.color_image_grid": {"tf": 2}, "graphlearning.utils.patches_to_image": {"tf": 1}}, "df": 4}}}, "m": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 3}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 1.7320508075688772}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 2.23606797749979}}, "df": 9}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"graphlearning.utils.constrained_solve_gmres": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "b": {"docs": {"graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.page_rank": {"tf": 2}}, "df": 6, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.amle": {"tf": 1}}, "df": 5, "u": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning": {"tf": 1}, "graphlearning.clustering.withinss": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.plaplace": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}}, "df": 10, "s": {"docs": {"graphlearning.active_learning": {"tf": 1.7320508075688772}, "graphlearning.active_learning.acquisition_function": {"tf": 1}, "graphlearning.active_learning.acquisition_function.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.unc_sampling.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.v_opt.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.sigma_opt.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change.compute": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt.compute": {"tf": 1.7320508075688772}, "graphlearning.datasets.save": {"tf": 1}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.plaplace": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.amle": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl_accuracy": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 18}, "d": {"docs": {"graphlearning.datasets.load": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"graphlearning.active_learning.acquisition_function": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.7320508075688772}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1.7320508075688772}, "graphlearning.active_learning.model_change_vopt": {"tf": 1.7320508075688772}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.datasets.load": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.vae": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.graph.graph.rand": {"tf": 1}, "graphlearning.graph.graph.randn": {"tf": 1}}, "df": 2, "s": {"docs": {"graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 2.23606797749979}}, "df": 1}}}}}}}}, "e": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.datasets.load": {"tf": 1.7320508075688772}, "graphlearning.ssl": {"tf": 1.7320508075688772}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 4}}, "df": 6}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1.4142135623730951}, "graphlearning.ssl.ssl.predict": {"tf": 1.4142135623730951}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 2.23606797749979}}, "df": 3, "s": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.active_learning.model_change_vopt": {"tf": 1}}, "df": 1}}, "n": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"graphlearning.utils.mesh": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {"graphlearning.graph": {"tf": 1}, "graphlearning.graph.graph.eigen_decomp": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.fiedler_vector": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.multiclass_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.weightmatrix.vae": {"tf": 1}}, "df": 16}, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"graphlearning.utils.image_grid": {"tf": 1}, "graphlearning.utils.color_image_grid": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1.7320508075688772}}, "df": 3}}}}, "y": {"docs": {"graphlearning.datasets.load": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}}, "df": 6}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.ssl.ssl.fit": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"graphlearning.graph.graph.degree_vector": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.gradient": {"tf": 1}, "graphlearning.graph.graph.divergence": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 1}, "graphlearning.graph.graph.fiedler_vector": {"tf": 2}, "graphlearning.graph.graph.peikonal": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}, "graphlearning.graph.graph.page_rank": {"tf": 1.4142135623730951}, "graphlearning.ssl.poisson.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.ssl.peikonal.__init__": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 14, "s": {"docs": {"graphlearning.ssl.poisson.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.labels_to_onehot": {"tf": 1}, "graphlearning.utils.randomized_svd": {"tf": 1.7320508075688772}}, "df": 5}}}}, "s": {"docs": {"graphlearning.graph.graph.eigen_decomp": {"tf": 2.23606797749979}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1}}, "df": 2}}}, "\\": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.graph.graph.divergence": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}, "x": {"0": {"docs": {"graphlearning.utils.constrained_solve": {"tf": 1}}, "df": 1}, "docs": {"graphlearning.active_learning": {"tf": 1.7320508075688772}, "graphlearning.active_learning.unc_sampling": {"tf": 3.4641016151377544}, "graphlearning.active_learning.v_opt": {"tf": 3.4641016151377544}, "graphlearning.active_learning.sigma_opt": {"tf": 3.4641016151377544}, "graphlearning.active_learning.model_change": {"tf": 3.4641016151377544}, "graphlearning.active_learning.model_change_vopt": {"tf": 3.4641016151377544}, "graphlearning.clustering.spectral.__init__": {"tf": 2}, "graphlearning.clustering.fokker_planck.__init__": {"tf": 2.23606797749979}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.clustering.withinss": {"tf": 1.4142135623730951}, "graphlearning.clustering.RP1D": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.eigen_decomp": {"tf": 2.449489742783178}, "graphlearning.graph.graph.peikonal": {"tf": 3}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 2.6457513110645907}, "graphlearning.graph.graph.dijkstra": {"tf": 4}, "graphlearning.graph.graph.plaplace": {"tf": 3.1622776601683795}, "graphlearning.ssl": {"tf": 2.449489742783178}, "graphlearning.ssl.poisson.__init__": {"tf": 2.449489742783178}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 2}, "graphlearning.ssl.centered_kernel.__init__": {"tf": 1}, "graphlearning.ssl.accuracy_plot": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.utils.csvread": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1.4142135623730951}, "graphlearning.utils.dirichlet_eigenvectors": {"tf": 1.4142135623730951}, "graphlearning.utils.constrained_solve_gmres": {"tf": 1}, "graphlearning.utils.conjgrad": {"tf": 1.7320508075688772}, "graphlearning.utils.rand_annulus": {"tf": 1}, "graphlearning.utils.rand_ball": {"tf": 1}, "graphlearning.utils.bean_data": {"tf": 1}, "graphlearning.utils.mesh": {"tf": 1}, "graphlearning.utils.image_grid": {"tf": 1.4142135623730951}, "graphlearning.utils.color_image_grid": {"tf": 1.4142135623730951}, "graphlearning.weightmatrix.knn": {"tf": 3.872983346207417}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 3.872983346207417}, "graphlearning.weightmatrix.knnsearch": {"tf": 1}}, "df": 38}, "j": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.sigma_opt": {"tf": 1.4142135623730951}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.clustering.incres.__init__": {"tf": 1}, "graphlearning.graph.graph.degree_vector": {"tf": 1}, "graphlearning.graph.graph.degree_matrix": {"tf": 1}, "graphlearning.graph.graph.gradient": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.divergence": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.reweight": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.laplacian": {"tf": 1}, "graphlearning.graph.graph.infinity_laplacian": {"tf": 2}, "graphlearning.graph.graph.peikonal": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1.4142135623730951}, "graphlearning.graph.graph.dijkstra": {"tf": 1.7320508075688772}, "graphlearning.graph.graph.plaplace": {"tf": 2}, "graphlearning.graph.graph.amle": {"tf": 2}, "graphlearning.ssl.poisson.__init__": {"tf": 2.6457513110645907}, "graphlearning.ssl.poisson_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 3.3166247903554}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}, "graphlearning.ssl.graph_nearest_neighbor.__init__": {"tf": 1}, "graphlearning.ssl.plaplace.__init__": {"tf": 1}, "graphlearning.utils.boundary_statistic": {"tf": 1}, "graphlearning.weightmatrix.knn": {"tf": 3.1622776601683795}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 3.605551275463989}}, "df": 25, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.active_learning.unc_sampling": {"tf": 1}}, "df": 1}, "g": {"docs": {"graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.ssl.volume_label_projection": {"tf": 1}, "graphlearning.ssl.ssl.ssl_trials": {"tf": 1}}, "df": 2}}}, "i": {"docs": {"graphlearning.active_learning.v_opt": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.dijkstra_hl": {"tf": 1}, "graphlearning.graph.graph.dijkstra": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.active_learning.model_change": {"tf": 1}, "graphlearning.active_learning.model_change_vopt": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.volume_mbo.__init__": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.clustering.spectral.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"graphlearning.utils.randomized_svd": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"graphlearning.datasets.load_image": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {"graphlearning.graph.graph.dijkstra_hl": {"tf": 1}}, "df": 1}, "s": {"docs": {"graphlearning.ssl.volume_mbo.__init__": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {"graphlearning.ssl.sparse_label_propagation.__init__": {"tf": 1}}, "df": 1}}}}}}, "\\": {"docs": {}, "df": 0, "|": {"docs": {}, "df": 0, "^": {"2": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "d": {"docs": {"graphlearning.weightmatrix.knn": {"tf": 1.7320508075688772}}, "df": 1}, "\\": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1}}, "df": 1, "^": {"2": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}}}}}, "docs": {}, "df": 0}, "\\": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {"graphlearning.weightmatrix.epsilon_ball": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "z": {"docs": {"graphlearning.active_learning.sigma_opt": {"tf": 1}, "graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.modularity_mbo.__init__": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}, "graphlearning.ssl.dynamic_label_propagation.__init__": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"graphlearning.ssl.laplace.__init__": {"tf": 1}, "graphlearning.utils.constrained_solve": {"tf": 1}, "graphlearning.weightmatrix.epsilon_ball": {"tf": 1.4142135623730951}}, "df": 3, "t": {"docs": {}, "df": 0, "h": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {"graphlearning.graph.graph.reweight": {"tf": 1}, "graphlearning.ssl.laplace.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "o": {"docs": {}, "df": 0, "u": {"docs": {"graphlearning.ssl.randomwalk.__init__": {"tf": 1}}, "df": 1}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();